ALTER PROCEDURE [dbo].[SP_SALE_EXPORT]
@MA_KHO INT, 
@MA_HOA_DON INT, 
@MA_NHAN_VIEN_THUC_HIEN INT, 
@TEN_KHACH_HANG NVARCHAR(100),
@RETURN_VALUE INT OUTPUT
AS
BEGIN 
	DECLARE  @SO_LUONG_TON FLOAT;
	DECLARE  @MA_SAN_PHAM INT;
	DECLARE  @LASTEST BIT;
	DECLARE  @DON_GIA FLOAT;
	DECLARE  @SO_LUONG FLOAT;
	DECLARE  @DON_GIA_TEMP FLOAT;
	DECLARE  @SO_LUONG_TEMP FLOAT;
	DECLARE  @MA_DON_VI INT;
	DECLARE  @MA_XUAT_KHO INT;
	DECLARE  @FLG BIT;
	DECLARE  @CHECKED_FLG BIT;
	DECLARE  @STAUTS INT;
	DECLARE  @STORE_ID INT;
	DECLARE  @NEXT_STORE_ID INT;	
	
	SELECT 
	@STAUTS = (DBO.F_SUM_QUANTITY_BY_BILL_ID(MA_HOA_DON) - DBO.F_SUM_EXPORTED_BY_BILL_ID(MA_HOA_DON))
	FROM 
	HOA_DON
	WHERE
	MA_HOA_DON = @MA_HOA_DON AND ACTIVE = 'A'
	
	IF @STAUTS <= 0 
		SET @RETURN_VALUE = -1 
	ELSE
	BEGIN
		IF @MA_KHO <> 0
		BEGIN 
			DECLARE CHI_TIEC_HOA_DON_CURSOR CURSOR FOR
			SELECT 
			MA_SAN_PHAM, 
			SO_LUONG, 
			ISNULL(DON_GIA,0) - ISNULL(DON_GIA,0)* ISNULL(PHAN_TRAM_CHIEC_KHAU,0)/100
			FROM
			CHI_TIET_HOA_DON
			WHERE
			ACTIVE = 'A'
			AND MA_HOA_DON = @MA_HOA_DON
			AND MA_KHO_XUAT = @MA_KHO
			SET @FLG = 'TRUE';
			
			OPEN CHI_TIEC_HOA_DON_CURSOR
			FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR 
				INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA		
			WHILE @@FETCH_STATUS = 0 
			BEGIN
				SET @SO_LUONG_TON = DBO.F_GET_TON_KHO(@MA_KHO, @MA_SAN_PHAM);
				IF @SO_LUONG_TON IS NULL OR @SO_LUONG_TON = 0 OR @SO_LUONG_TON < @SO_LUONG
				BEGIN
					SET @FLG = 'FALSE'
					BREAK;
				END
				FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR 
					INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA
			END;
				
			CLOSE CHI_TIEC_HOA_DON_CURSOR;
			DEALLOCATE CHI_TIEC_HOA_DON_CURSOR;
			
			IF @FLG = 'FALSE'
			BEGIN
				SET @RETURN_VALUE = 0;
			END
			ELSE
			BEGIN
				DECLARE CHI_TIEC_HOA_DON_CURSOR_EXPORT CURSOR FOR
				SELECT 
				MA_SAN_PHAM, 
				SO_LUONG, 
				ISNULL(DON_GIA,0) - ISNULL(DON_GIA,0)*ISNULL(PHAN_TRAM_CHIEC_KHAU,0)/100, 
				ISNULL(DON_GIA_TEMP,0) - ISNULL(DON_GIA_TEMP,0)*ISNULL(PHAN_TRAM_CHIEC_KHAU,0)/100,
				SO_LUONG_TEMP, 
				MA_DON_VI
				FROM
				CHI_TIET_HOA_DON
				WHERE
				ACTIVE = 'A'
				AND MA_HOA_DON = @MA_HOA_DON
				AND MA_KHO_XUAT = @MA_KHO
				
				
				
				INSERT INTO 
				XUAT_KHO 
				(	
					MA_HOA_DON, 
					LY_DO_XUAT,  --0
					MA_KHO_XUAT,
					NGAY_XUAT, 
					MA_NHAN_VIEN_XUAT, 
					TEN_NGUOI_NHAN_HANG, 
					CREATE_BY, 
					UPDATE_BY, 
					CREATE_AT, 
					UPDATE_AT, 
					ACTIVE
				)
				VALUES
				(
					@MA_HOA_DON, 
					0, 
					@MA_KHO, 
					GETDATE(), 
					@MA_NHAN_VIEN_THUC_HIEN, 
					@TEN_KHACH_HANG, 
					@MA_NHAN_VIEN_THUC_HIEN, 
					@MA_NHAN_VIEN_THUC_HIEN, 
					GETDATE(), 
					GETDATE(),
					'A'
				)
				SET @MA_XUAT_KHO = (SELECT SCOPE_IDENTITY());
				
				SET @CHECKED_FLG = DBO.F_CHECK_REMAIN(@MA_HOA_DON)
				
				IF @CHECKED_FLG = 'FALSE'
				BEGIN
					UPDATE HOA_DON
					SET
					STATUS = 3, 
					UPDATE_BY = @MA_NHAN_VIEN_THUC_HIEN, 
					UPDATE_AT = GETDATE()
					WHERE 
					MA_HOA_DON = @MA_HOA_DON
				END
				
				OPEN CHI_TIEC_HOA_DON_CURSOR_EXPORT
				FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR_EXPORT 
					INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @DON_GIA_TEMP, @SO_LUONG_TEMP, @MA_DON_VI
				WHILE @@FETCH_STATUS = 0 
				BEGIN					
					INSERT INTO
					CHI_TIET_XUAT_KHO
					(
						MA_XUAT_KHO, 
						MA_SAN_PHAM, 
						SO_LUONG, 
						GIA_XUAT, 
						SO_LUONG_TEMP,
						DON_GIA_TEMP,
						MA_DON_VI,
						CREATE_BY, 
						UPDATE_BY, 
						CREATE_AT, 
						UPDATE_AT, 
						ACTIVE
					)
					VALUES
					(
						@MA_XUAT_KHO, 
						@MA_SAN_PHAM, 
						@SO_LUONG, 
						@DON_GIA, 
						@SO_LUONG_TEMP,
						@DON_GIA_TEMP,
						@MA_DON_VI,
						@MA_NHAN_VIEN_THUC_HIEN, 
						@MA_NHAN_VIEN_THUC_HIEN,
						GETDATE(), 
						GETDATE(), 
						'A'
					)
					FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR_EXPORT 
						INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @DON_GIA_TEMP, @SO_LUONG_TEMP, @MA_DON_VI
				END;
				CLOSE CHI_TIEC_HOA_DON_CURSOR_EXPORT;
				DEALLOCATE CHI_TIEC_HOA_DON_CURSOR_EXPORT;
				
				SET @RETURN_VALUE = 1;
				
			END;
		END
		ELSE
		BEGIN
			DECLARE CHI_TIEC_HOA_DON_CURSOR CURSOR FOR
			SELECT 
			MA_SAN_PHAM, 
			SO_LUONG, 
			ISNULL(DON_GIA,0) - ISNULL(DON_GIA,0)* ISNULL(PHAN_TRAM_CHIEC_KHAU,0)/100, 
			MA_KHO_XUAT
			FROM
			CHI_TIET_HOA_DON
			WHERE
			ACTIVE = 'A'
			AND MA_HOA_DON = @MA_HOA_DON
			AND MA_KHO_XUAT NOT IN (SELECT MA_KHO_XUAT FROM XUAT_KHO WHERE MA_HOA_DON = @MA_HOA_DON AND XUAT_KHO.ACTIVE = 'A')
			ORDER BY MA_KHO_XUAT;
			
			SET @FLG = 'TRUE';
			
			OPEN CHI_TIEC_HOA_DON_CURSOR
			FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @STORE_ID
			WHILE @@FETCH_STATUS = 0 
			BEGIN
				SET @SO_LUONG_TON = DBO.F_GET_TON_KHO(@STORE_ID, @MA_SAN_PHAM);
				IF @SO_LUONG_TON IS NULL OR @SO_LUONG_TON = 0 OR @SO_LUONG_TON < @SO_LUONG
				BEGIN
					SET @FLG = 'FALSE'
					BREAK;
				END
				FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @STORE_ID
			END;
			
			CLOSE CHI_TIEC_HOA_DON_CURSOR;
			DEALLOCATE CHI_TIEC_HOA_DON_CURSOR;
			
			IF @FLG = 'FALSE'
			BEGIN
				SET @RETURN_VALUE = 0;
			END
			
			IF @FLG = 'TRUE'
			BEGIN
				UPDATE HOA_DON
				SET
					STATUS = 3, 
					UPDATE_BY = @MA_NHAN_VIEN_THUC_HIEN, 
					UPDATE_AT = GETDATE()
				WHERE 
					MA_HOA_DON = @MA_HOA_DON;
				
				DECLARE CHI_TIEC_HOA_DON_CURSOR1 CURSOR FOR
				SELECT 
					MA_SAN_PHAM, 
					SO_LUONG, 
					ISNULL(DON_GIA,0) - ISNULL(DON_GIA,0)*ISNULL(PHAN_TRAM_CHIEC_KHAU,0)/100 DON_GIA, 
					ISNULL(DON_GIA_TEMP,0) - ISNULL(DON_GIA_TEMP,0)* ISNULL(PHAN_TRAM_CHIEC_KHAU,0)/100 DON_GIA_TEMP,
					SO_LUONG_TEMP, 
					MA_DON_VI,
					MA_KHO_XUAT
				FROM
				CHI_TIET_HOA_DON
				WHERE
				ACTIVE = 'A'
				AND MA_HOA_DON = @MA_HOA_DON
				AND MA_KHO_XUAT NOT IN (SELECT MA_KHO_XUAT FROM XUAT_KHO WHERE MA_HOA_DON = @MA_HOA_DON AND XUAT_KHO.ACTIVE = 'A')
				ORDER BY MA_KHO_XUAT;
				
				SET @STORE_ID = 0;
				OPEN CHI_TIEC_HOA_DON_CURSOR1
				FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR1 
					INTO 
					@MA_SAN_PHAM, 
					@SO_LUONG, 
					@DON_GIA, 
					@DON_GIA_TEMP, 
					@SO_LUONG_TEMP, 
					@MA_DON_VI, 
					@NEXT_STORE_ID
				WHILE @@FETCH_STATUS = 0 
				BEGIN
					IF @STORE_ID <> @NEXT_STORE_ID
					BEGIN
						SET @STORE_ID = @NEXT_STORE_ID;
						INSERT INTO 
							XUAT_KHO 
							(	
								MA_HOA_DON, 
								LY_DO_XUAT,  --0
								MA_KHO_XUAT,
								NGAY_XUAT, 
								MA_NHAN_VIEN_XUAT, 
								TEN_NGUOI_NHAN_HANG, 
								CREATE_BY, 
								UPDATE_BY, 
								CREATE_AT, 
								UPDATE_AT, 
								ACTIVE
							)
							VALUES
							(
								@MA_HOA_DON, 
								0, 
								@STORE_ID, 
								GETDATE(), 
								@MA_NHAN_VIEN_THUC_HIEN, 
								@TEN_KHACH_HANG, 
								@MA_NHAN_VIEN_THUC_HIEN, 
								@MA_NHAN_VIEN_THUC_HIEN, 
								GETDATE(), 
								GETDATE(),
								'A'
							)
						SET @MA_XUAT_KHO = (SELECT SCOPE_IDENTITY());
					END;
					INSERT INTO
					CHI_TIET_XUAT_KHO
					(
						MA_XUAT_KHO, 
						MA_SAN_PHAM, 
						SO_LUONG, 
						GIA_XUAT, 
						SO_LUONG_TEMP,
						DON_GIA_TEMP,
						MA_DON_VI,
						CREATE_BY, 
						UPDATE_BY, 
						CREATE_AT, 
						UPDATE_AT, 
						ACTIVE
					)
					VALUES
					(
						@MA_XUAT_KHO, 
						@MA_SAN_PHAM, 
						@SO_LUONG, 
						@DON_GIA, 
						@SO_LUONG_TEMP,
						@DON_GIA_TEMP,
						@MA_DON_VI,
						@MA_NHAN_VIEN_THUC_HIEN, 
						@MA_NHAN_VIEN_THUC_HIEN,
						GETDATE(), 
						GETDATE(), 
						'A'
					)
					FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR1 
						INTO 
						@MA_SAN_PHAM, 
						@SO_LUONG, 
						@DON_GIA, 
						@DON_GIA_TEMP, 
						@SO_LUONG_TEMP, 
						@MA_DON_VI, 
						@NEXT_STORE_ID
				END;
				
				CLOSE CHI_TIEC_HOA_DON_CURSOR1;
				DEALLOCATE CHI_TIEC_HOA_DON_CURSOR1;
				SET @RETURN_VALUE = 1;
			END
		END
	END;
END