ALTER PROCEDURE SP_THU_TIEN_XUAT_KHO
@MA_HOA_DON INT, 
@MA_NHAN_VIEN_THUC_HIEN INT, 
@SO_TIEN_KHACH_TRA FLOAT, 
@RETURN_VALUE INT OUTPUT
AS
BEGIN
	DECLARE  @TON_KHO FLOAT;
	DECLARE  @MA_KHO INT;
	DECLARE  @MA_SAN_PHAM INT;
	DECLARE  @MA_KHO_NEXT INT;
	DECLARE  @MA_KHACH_HANG INT;
	DECLARE  @MA_XUAT_KHO INT;
	DECLARE  @TONG_TIEN FLOAT;
	DECLARE  @SO_TIEN_KHACH_NO FLOAT;
	DECLARE  @SO_TIEN_KHACH_NO_OLD FLOAT;
	DECLARE  @NGAY_PHAT_SINH_NO DATE;
	DECLARE  @SO_LUONG FLOAT;
	DECLARE  @SO_LUONG_TON FLOAT;
	DECLARE  @DON_GIA FLOAT;
	DECLARE  @FLG BIT;
	DECLARE  @TEN_KHACH_HANG NVARCHAR(100);
	DECLARE  @STATUS INT;
	
	SELECT 
		@MA_KHACH_HANG = MA_KHACH_HANG, 
		@TEN_KHACH_HANG = TEN_KHACH_HANG, 
		@STATUS = STATUS
	FROM HOA_DON
	WHERE  
	HOA_DON.ACTIVE = 'A'
	AND HOA_DON.MA_HOA_DON = @MA_HOA_DON;
	
	IF @STATUS >=2 
	BEGIN
		SET @RETURN_VALUE = -1;
	END
	ELSE
	BEGIN 
	
		DECLARE CHI_TIEC_HOA_DON_CURSOR CURSOR FOR
		SELECT 
		MA_SAN_PHAM, 
		SO_LUONG, 
		DON_GIA - DON_GIA*PHAN_TRAM_CHIEC_KHAU/100, 
		MA_KHO_XUAT 
		FROM
		CHI_TIET_HOA_DON
		WHERE
		ACTIVE = 'A'
		AND MA_HOA_DON = @MA_HOA_DON
		ORDER BY MA_KHO_XUAT
		
		SET @FLG = 'TRUE';
		-- KIỂM TRA SỐ LƯỢNG TỒN ĐỦ XUẤT HAY KHÔNG
		OPEN CHI_TIEC_HOA_DON_CURSOR
			FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @MA_KHO
			WHILE @@FETCH_STATUS = 0 
		BEGIN
			SET @SO_LUONG_TON = DBO.F_GET_TON_KHO(@MA_KHO, @MA_SAN_PHAM);
			IF @SO_LUONG_TON IS NULL OR @SO_LUONG_TON = 0 OR @SO_LUONG_TON < @SO_LUONG
			BEGIN
				SET @FLG = 'FALSE'
				BREAK;
			END
			FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @MA_KHO
		END;
		
		CLOSE CHI_TIEC_HOA_DON_CURSOR;
		DEALLOCATE CHI_TIEC_HOA_DON_CURSOR;
		
		IF @FLG = 'FALSE'
		BEGIN
			SET @RETURN_VALUE = 0;
		END
		
		-- NẾU SỐ LƯỢNG ĐỦ XUẤT
		IF @FLG = 'TRUE'
		BEGIN
			SELECT 
				@TONG_TIEN = ISNULL(SUM(SO_LUONG*(DON_GIA - DON_GIA*PHAN_TRAM_CHIEC_KHAU/100)), 0)
			FROM 
				CHI_TIET_HOA_DON
			WHERE
				ACTIVE = 'A'
				AND MA_HOA_DON = @MA_HOA_DON
			GROUP BY MA_HOA_DON;
			
			SET @SO_TIEN_KHACH_NO = @TONG_TIEN - @SO_TIEN_KHACH_TRA;
			
			-- SỐ TIỀN KHÁCH NỢ > 0 
			IF @SO_TIEN_KHACH_NO > 0
			BEGIN
				-- UPDATE HOA DON
				UPDATE 
				HOA_DON
				SET
					SO_TIEN_KHACH_TRA = @SO_TIEN_KHACH_TRA, 
					SO_TIEN_NO_GOI_DAU = @SO_TIEN_KHACH_NO, 
					MA_NHAN_VIEN_THU_TIEN = @MA_NHAN_VIEN_THUC_HIEN, 
					STATUS = 3,
					UPDATE_BY = @MA_NHAN_VIEN_THUC_HIEN, 
					UPDATE_AT = GETDATE()
				WHERE 
					MA_HOA_DON = @MA_HOA_DON;
				-- NẾU KHÁCH HÀNG <> KHÁCH VÃNG LAI
				IF @MA_KHACH_HANG IS NOT NULL
				BEGIN
					
					SELECT 
					@TEN_KHACH_HANG = TEN_KHACH_HANG
					FROM 
					KHACH_HANG
					WHERE
					MA_KHACH_HANG = @MA_KHACH_HANG;
					
					SELECT 
					@NGAY_PHAT_SINH_NO  = NGAY_PHAT_SINH_NO
					FROM 
					KHACH_HANG 
					WHERE 
					MA_KHACH_HANG = @MA_KHACH_HANG;
					
					IF @NGAY_PHAT_SINH_NO IS NULL
					BEGIN
						UPDATE KHACH_HANG
						SET NGAY_PHAT_SINH_NO = GETDATE()
						WHERE MA_KHACH_HANG = @MA_KHACH_HANG;
					END
					
					SET @SO_TIEN_KHACH_NO_OLD = (SELECT TOP 1 NO_GOI_DAU FROM KHACH_HANG WHERE MA_KHACH_HANG = @MA_KHACH_HANG)
					INSERT INTO 
						KHACH_HANG_DEBIT_HIST
						(
							MA_KHACH_HANG, 
							NO_TRUOC, 
							PHAT_SINH, 
							NO_SAU, 
							NGAY_PHAT_SINH, 
							MA_NHAN_VIEN_TH, 
							MA_HOA_DON, 
							CREATE_BY, 
							UPDATE_BY, 
							CREATE_AT, 
							UPDATE_AT, 
							ACTIVE
						)
					VALUES 
						(
							@MA_KHACH_HANG, 
							@SO_TIEN_KHACH_NO_OLD, 
							-1*@SO_TIEN_KHACH_NO, 
							@SO_TIEN_KHACH_NO_OLD + @SO_TIEN_KHACH_NO, 
							GETDATE(), 
							@MA_NHAN_VIEN_THUC_HIEN, 
							@MA_HOA_DON, 
							@MA_NHAN_VIEN_THUC_HIEN, 
							@MA_NHAN_VIEN_THUC_HIEN, 
							GETDATE(), 
							GETDATE(), 
							'A'
						); 
					
					UPDATE KHACH_HANG
					SET 
						DOANH_SO = DOANH_SO + @TONG_TIEN, 
						NO_GOI_DAU = NO_GOI_DAU + @SO_TIEN_KHACH_NO, 
						UPDATE_BY = @MA_NHAN_VIEN_THUC_HIEN, 
						UPDATE_AT = GETDATE()
					WHERE 
						MA_KHACH_HANG = @MA_KHACH_HANG;	
				END
			END
			ELSE
			BEGIN
				UPDATE 
				HOA_DON
				SET
					SO_TIEN_KHACH_TRA = @SO_TIEN_KHACH_TRA, 
					SO_TIEN_NO_GOI_DAU = 0, 
					MA_NHAN_VIEN_THU_TIEN = @MA_NHAN_VIEN_THUC_HIEN, 
					STATUS = 3,
					UPDATE_BY = @MA_NHAN_VIEN_THUC_HIEN, 
					UPDATE_AT = GETDATE()
				WHERE 
					MA_HOA_DON = @MA_HOA_DON;
				
				IF @MA_KHACH_HANG IS NOT NULL
				BEGIN
					SELECT 
					@TEN_KHACH_HANG = TEN_KHACH_HANG
					FROM 
					KHACH_HANG
					WHERE
					MA_KHACH_HANG = @MA_KHACH_HANG;
					
					UPDATE KHACH_HANG
					SET 
						DOANH_SO = DOANH_SO + @TONG_TIEN, 
						UPDATE_BY = @MA_NHAN_VIEN_THUC_HIEN, 
						UPDATE_AT = GETDATE()
					WHERE 
						MA_KHACH_HANG = @MA_KHACH_HANG;	
				END
			END
			
			DECLARE CHI_TIEC_HOA_DON_CURSOR_1 CURSOR FOR
			SELECT 
			MA_SAN_PHAM, 
			SO_LUONG, 
			DON_GIA - DON_GIA*PHAN_TRAM_CHIEC_KHAU/100, 
			MA_KHO_XUAT 
			FROM
			CHI_TIET_HOA_DON
			WHERE
			ACTIVE = 'A'
			AND MA_HOA_DON = @MA_HOA_DON
			ORDER BY MA_KHO_XUAT
		
			SET @MA_KHO = 0;
			OPEN CHI_TIEC_HOA_DON_CURSOR_1
			FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR_1 INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @MA_KHO_NEXT
			WHILE @@FETCH_STATUS = 0 
			BEGIN
				IF @MA_KHO <> @MA_KHO_NEXT
				BEGIN
					SET @MA_KHO = @MA_KHO_NEXT;
					INSERT INTO 
					XUAT_KHO 
					(	
						MA_HOA_DON, 
						LY_DO_XUAT,  --0
						MA_KHO_XUAT,
						NGAY_XUAT, 
						MA_NHAN_VIEN_XUAT, 
						TEN_NGUOI_NHAN_HANG, 
						CREATE_BY, 
						UPDATE_BY, 
						CREATE_AT, 
						UPDATE_AT, 
						ACTIVE
					)
					VALUES
					(
						@MA_HOA_DON, 
						0, 
						@MA_KHO, 
						GETDATE(), 
						@MA_NHAN_VIEN_THUC_HIEN, 
						@TEN_KHACH_HANG, 
						@MA_NHAN_VIEN_THUC_HIEN, 
						@MA_NHAN_VIEN_THUC_HIEN, 
						GETDATE(), 
						GETDATE(),
						'A'
					)
					SET @MA_XUAT_KHO = (SELECT SCOPE_IDENTITY());
				END
				
				INSERT INTO
				CHI_TIET_XUAT_KHO
				(
					MA_XUAT_KHO, 
					MA_SAN_PHAM, 
					SO_LUONG, 
					GIA_XUAT, 
					CREATE_BY, 
					UPDATE_BY, 
					CREATE_AT, 
					UPDATE_AT, 
					ACTIVE
				)
				VALUES
				(
					@MA_XUAT_KHO, 
					@MA_SAN_PHAM, 
					@SO_LUONG, 
					@DON_GIA, 
					@MA_NHAN_VIEN_THUC_HIEN, 
					@MA_NHAN_VIEN_THUC_HIEN,
					GETDATE(), 
					GETDATE(), 
					'A'
				)
				FETCH NEXT FROM CHI_TIEC_HOA_DON_CURSOR_1 INTO @MA_SAN_PHAM, @SO_LUONG, @DON_GIA, @MA_KHO_NEXT
			END;
				
			CLOSE CHI_TIEC_HOA_DON_CURSOR_1;
			DEALLOCATE CHI_TIEC_HOA_DON_CURSOR_1;
			SET @RETURN_VALUE = 1;
		END
	END
END
