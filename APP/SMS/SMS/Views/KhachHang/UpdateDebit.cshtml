@model SMS.Models.KHACH_HANG

@{
    ViewBag.Title = "Thêm mới khách hàng";
    List<SelectListItem> theList = new List<SelectListItem>();
    SelectListItem item;
    if (ViewBag.khuVucList != null)
    {
        foreach (var donvi in ViewBag.khuVucList)
        {
            item = new SelectListItem();
            item.Value = donvi.MA_KHU_VUC + "";
            item.Text = donvi.TEN_KHU_VUC;
            theList.Add(item);
        }
    }


    List<SelectListItem> kinds = new List<SelectListItem>();
    SelectListItem kind;
    kind = new SelectListItem();
    kind.Value = "1";
    kind.Text = "Khách hàng công ty , công trình";
    kinds.Add(kind);

    kind = new SelectListItem();
    kind.Value = "2";
    kind.Text = "Khách hàng thân thiết";
    kinds.Add(kind);

    kind = new SelectListItem();
    kind.Value = "3";
    kind.Text = "Khách hàng thường";
    kinds.Add(kind);
}
<link href="~/Content/KhachHang.css" rel="stylesheet" type="text/css" />
@section Scripts {
    <link href="../../Content/css/sunny/jquery-ui-1.10.3.custom.css" rel="stylesheet" type="text/css" />
    <script src="../../Content/js/jquery-1.9.1.js" type="text/javascript"></script>
    <script src="../../Content/js/jquery-ui-1.10.3.custom.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datePicker').datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
        });
    </script>
    <style type="text/css">
        .required:after {
            content: "*";
            font-weight: bold;
            color: red;
        }
    </style>
}
<h2>Thay đổi công nợ</h2>

<h3 style="color:red;">@ViewBag.Message</h3>
<hr style="width:100%" />
<div>
    @using (Html.BeginForm(new { @name = "updateDebit"}))
    {

        @Html.ValidationSummary(true, "Vui lòng kiểm tra lại các giá trị đã nhập!");
        <div>
            <fieldset>
                <div >
                    @Html.HiddenFor(u => u.MA_KHACH_HANG)
                    @Html.HiddenFor(u => u.EMAIL)
                    @Html.HiddenFor(u => u.MA_KHU_VUC)
                    @Html.HiddenFor(u => u.KIND)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.MA_THE_KHACH_HANG)
                </div>
                <div class="right">
                    @Html.Label(Model.MA_KHACH_HANG == null ? "No#" : Model.MA_THE_KHACH_HANG)
                    @Html.HiddenFor(u => u.MA_THE_KHACH_HANG)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.TEN_KHACH_HANG)
                </div>
                <div class="right">
                    @Html.Label(Model.TEN_KHACH_HANG)
                    @Html.HiddenFor(u => u.TEN_KHACH_HANG)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.DIA_CHI)

                </div>
                <div class="right">
                    @Html.Label(Model.DIA_CHI)
                    @Html.HiddenFor(u => u.DIA_CHI)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.SO_DIEN_THOAI)
                </div>
                <div class="right">
                    @Html.Label(Model.SO_DIEN_THOAI)
                    @Html.HiddenFor(u => u.SO_DIEN_THOAI)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.DOANH_SO)
                </div>
                <div class="right">
                    <label> @Model.DOANH_SO.ToString("0,0.00") </label>
                    @Html.HiddenFor(u => u.DOANH_SO)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.NO_GOI_DAU)
                </div>
                <div class="right">
                    <label > @Model.NO_GOI_DAU.ToString("0,0.00") </label>
                    @Html.HiddenFor(u => u.NO_GOI_DAU, new { @id = "NoGoiDau" })
                   
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.NGAY_PHAT_SINH_NO)
                    @Html.HiddenFor(u => u.NGAY_PHAT_SINH_NO)
                </div>
                <div class="right">
                    @{
                                                                                   if (Model.NGAY_PHAT_SINH_NO != null)
                                                                                   {
                            <label> @DateTime.Parse(Model.NGAY_PHAT_SINH_NO.ToString()).ToString("dd/MM/yyyy") </label>
                                                                                   }
                                                                                   else
                                                                                   {
                            <label> -- </label>
                                                                                   }
                    }
                    
                </div>
                <hr style="width:100%"/>
                <div style="display:inline-block; width:20%">
                    @Html.Label("Số tiền trả:")
                </div>
                <div style="display:inline-block; width:70%">
                    <input id="amount" name="amount" value="@ViewBag.amount" type="text" class="numberic" runat="server" />
                </div>

                <div style="display:inline-block; width:20%">
                    @Html.Label("Ngày trả:")
                </div>
                <div style="display:inline-block; width:70%">
                    <input id="returnDate" name="returnDate" value="@ViewBag.returnDate" type="text" class="datePicker" runat="server" />
                </div>
                <div style="display:inline-block; width:20%">
                    @Html.Label("Số tiền nợ:")
                </div>
                <div style="display:inline-block; width:70%">
                    <input id="newDebit" name="newDebit" value="@ViewBag.newDebit" type="text" class="numberic" readonly="true" runat="server" />
                </div>
                <div style="display:inline-block; width:20%">
                    @Html.Label("Ghi chú:")
                </div>
                <div style="display:inline-block; width:70%">
                <textarea id="note" name="note">
                        @ViewBag.note
                </textarea>
                </div>
                <div>
                    <input type="submit" style="width:100px" value="Lưu" />
                    <span> </span>
                    <input type="button" style="width:300px" value=">> Trở về danh sách khách hàng >> " onclick="window.location.href='@Url.Action("Index","KhachHang")'" />
                </div>
            </fieldset>
        </div>
        <script>

            $(document).ready(function () {
                $('.datePicker').datepicker({
                    dateFormat: 'dd/mm/yy',
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0"
                });
            });

            function NumbericOnly(ctrl) {
                $(ctrl).keypress(function (key) {
                    //getting key code of pressed key
                    var keycode = (key.which) ? key.which : key.keyCode;
                    //comparing pressed keycodes

                    if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                        alert(" You can enter only characters 0 to 9 ");
                        return false;
                    }
                    else return true;
                });

            }
            function formatNumberic() {
                $('input.numberic').each(function () {
                    var $this = $(this);
                    var AmountWithCommas = $this.val();
                    var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);

                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');

                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $this.val(num2 + DecimalSeparator + decPart);
                    } else {
                        $this.val(num2);
                    }
                });
            }
            $(document).ready(function () {               
                formatNumberic();
                $('input.numberic').keypress(function (key) {
                    var keycode = (key.which) ? key.which : key.keyCode;
                    //comparing pressed keycodes

                    if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                        return false;
                    }
                    else return true;

                });
                $('input.numberic').keyup(function (event) {
                    // skip for arrow keys
                    if (event.which >= 37 && event.which <= 40) {
                        //event.preventDefault();
                        return true;
                    }
                    var $this = $(this);
                    var AmountWithCommas = $this.val();
                    var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);

                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');

                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $this.val(num2 + DecimalSeparator + decPart);
                    } else {
                        $this.val(num2);
                    }
                });
                $('#amount').keyup(function (event) {
                    var $this = $(this);
                    var oldDeBit = $("#NoGoiDau").val();
                    var amount = $this.val().replace(/,/gi, "");
                    var AmountWithCommas = (oldDeBit - amount);
                    if (AmountWithCommas < 0) {
                        $("#newDebit").val(0);
                        alert("Số tiền trả lớn hơn số tiền nợ. Vui lòng nhập lại");
                        return false;
                    }
                    var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);
                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');
                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $("#newDebit").val(num2 + DecimalSeparator + decPart);
                    } else {
                        $("#newDebit").val(num2);
                    }
                });
                $('input.numberic').bind("paste", function (e) {
                    e.preventDefault();
                });
            });

            function RemoveRougeChar(convertString) {
                if (convertString.substring(0, 1) == ",") {
                    return convertString.substring(1, convertString.length)
                }
                return convertString;
            }

            function reset() {
                window.location.reload();
                return false;
            }
        </script>

    }
</div>