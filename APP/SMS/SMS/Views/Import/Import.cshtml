@model SMS.Models.ImportModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Nhập kho - mua hàng";
}
<div style="background-color:lightgray; width:100%; padding-top:10px; padding-bottom:10px; padding-left: 5px;">
    <a href="@Url.Action("Import", "Home")"> Nhập kho </a> > @ViewBag.Title
</div>

<br />
<hgroup class="title">
    <h2>
        @ViewBag.Title
    </h2>
</hgroup>
<hr />
<h3>@ViewBag.Message</h3>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/css/style.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Import.css" rel="stylesheet" type="text/css" />
<script src="~/Content/js/jquery-1.9.1.js"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.js"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.min.js"></script>
<script src="../../Scripts/scrollTable.js" type="text/javascript"></script>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    <script>
        $(document).ready(function () {
            $("#ProductName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/SanPham/FindSuggest", data: "{ 'prefixText': '" + request.term + "' }",
                        dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; }, success:
                            function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.value,
                                        value: item.value,
                                        id: item.id
                                    }
                                }))
                            }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                    });
                    $('#ProductId').val("");
                },
                select: function (event, ui) {
                    $('#ProductName').val(ui.item.label);
                    $('#ProductId').val(ui.item.id);
                    return false;
                },
                minLength: 1

            });

            $("#StoreName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Kho/FindSuggest", data: "{ 'prefixText': '" + request.term + "' }",
                        dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; }, success:
                            function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.value,
                                        value: item.value,
                                        id: item.id
                                    }
                                }))
                            }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                    });
                    $('#StoreId').val("");
                },
                select: function (event, ui) {
                    $('#StoreName').val(ui.item.label);
                    $('#StoreId').val(ui.item.id);
                    return false;
                },
                minLength: 1
            })
        });
        $(document).ready(function () {
            $('.datePicker').datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
        });
    </script>
    <style type="text/css">
        .required:after {
            content: "*";
            font-weight: bold;
            color: red;
        }
    </style>

}
@using (Html.BeginForm("Import", "Import", FormMethod.Post, new { @id = "index" }))
{
    <table>
        <tr>
            <td>
                Số hóa đơn :
            </td>
            <td >
                @Html.TextBoxFor(u => u.Infor.SO_HOA_DON)
            </td>
        </tr>
        <tr>
            <td >
                Nhà cung cấp :
            </td> 
            <td class="required">
                @Html.DropDownListFor(u => u.Infor.MA_NHA_CUNG_CAP, new SelectList(@Model.Providers, "MA_NHA_CUNG_CAP", "TEN_NHA_CUNG_CAP"), "--------------Chọn nhà cung cấp---------------", new { style = "padding:5px;font-size:1.2em", @class = "required" })
            </td>
        </tr>
        <tr>
            <td>
                Kho : 
            </td> 
            <td class="required">
                @if ((bool)Session["IsAdmin"])
                {
                    @Html.DropDownListFor(u => u.Infor.MA_KHO, new SelectList(@Model.Stores, "MA_KHO", "TEN_KHO"), "-------------------- Chọn  kho ---------------------", new { style = "padding:5px;font-size:1.2em", @class = "required" })
                }
                else
                {
                    @Html.DropDownListFor(u => u.Infor.MA_KHO, new SelectList(@Model.Stores, "MA_KHO", "TEN_KHO"), "-------------------- Chọn  kho ---------------------", new { @disabled = "disabled", @style = "padding:5px;font-size:1.2em", @class = "required" })
                }
            </td>
        </tr>
        <tr>
            <td>
                Ngày nhập kho : 
            </td>
            <td class="required">
                @Html.TextBoxFor(u => u.Infor.NGAY_NHAP, "{0:d}", new { @class = "datePicker " })
            </td>
        </tr>
        <tr>
            <td>
                Ghi chú :
            </td>
            <td>
                @Html.TextAreaFor(u => u.Infor.GHI_CHU)
            </td>
        </tr>
    </table>
    <hr />
    <input type="submit" value="Lưu" style="width:300px;"/>
    <input type="button" value="Xóa" style="width:200px" onclick="deleteCheckedRow()" />
    <input type="button" value="Tạo mới hóa đơn" style="width:300px" />
    <input type="hidden" id="rowIndex" value="0"/>
    <div style="clear:both"></div>
    <table id="detailTable" name = "detailTable" width="100%">
        <thead>
            <tr class="inner column-hscroll alignCenter">
                <td class='inner colwidth head ' width="5%;"> <input type="checkbox" id="chckHead" /> </td>
                <td class='inner colwidth head '> CODE </td>
                <td class='inner colwidth head ' > Sản phẩm </td>
                <td class='inner colwidth head '> Số lượng </td>
                <td class='inner colwidth head ' > Đơn vị </td>
                <td class='inner colwidth head ' > Đơn giá </td>
                <td class='innerLast colwidth head ' > Thành tiền </td>
            </tr>
        </thead>
        
        <tbody>
            <tr>
                <td class='inner alignCenter colwidth' width="5%;">
                    <input type="checkbox" class="chcktbl">
                </td>
                <td class='inner colwidth '>
                    @Html.TextBoxFor(u => u.Detail[0].CODE, new { @class = "code codebtl" })
                </td>
                <td class='inner colwidth '>
                    @Html.HiddenFor(u => u.Detail[0].MA_SAN_PHAM, new { @class = "productId " })
                    @Html.HiddenFor(u => u.Detail[0].DEL_FLG, new { @class = "delFlg" })
                    @Html.TextBoxFor(u => u.Detail[0].TEN_SAN_PHAM, new { @class = "productname namebtl" })
                </td>
                <td class='inner colwidth '>
                    @Html.TextBoxFor(u => u.Detail[0].SO_LUONG_TEMP, new { @class = "quantity textbtl numberic" })
                </td>
                <td class="inner colwidth">
                    @Html.DropDownListFor(u => u.Detail[0].MA_DON_VI, new SelectList(@Model.Units, "MA_DON_VI", "TEN_DON_VI"), "---------", new { style = "padding:5px;font-size:1.2em", @class = "unit textbtl" })
                </td>
                <td class='inner colwidth '>
                    @Html.TextBoxFor(u => u.Detail[0].GIA_VON, new { @class = "price textbtl numberic" })
                </td>
                <td class='innerLast colwidth '>
                    @Html.TextBoxFor(u => u.Detail[0].THANH_TIEN, new { @class = "total textbtl numberic", @readOnly = true })
                </td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td class='innerLast alignCenter colwidth ' style="background-color:lightgray" colspan="6"> </td>
                <td class='innerLast alignCenter colwidth ' style="background-color:lightgray">
                    <input type="button" value="Thêm dòng" onclick="addRow()" />
                </td>
            </tr>
            <tr>
                <td class='innerLast colwidth  ' colspan="3" style="background-color:lightgray"> <strong>Tổng số các mặt hàng</strong> </td>
                <td class='innerLast alignCenter colwidth ' style="background-color:lightgray"> </td>
                <td class='innerLast alignCenter colwidth ' style="background-color:lightgray" colspan="2"> Tổng hóa đơn</td>
                <td class='innerLast alignCenter colwidth ' style="background-color:lightgray"> </td>
            </tr>
        </tfoot>
    </table>
    <input type="submit" value="Lưu" style="width:300px;"/>
    <input type="button" value="Xóa" style="width:200px" onclick="deleteCheckedRow()" />
    <input type="button" value="Tạo mới hóa đơn" style="width:300px" />
    <script>

        $('.chcktbl').click(function () {
            var length = $('.chcktbl:checked').length;
            var max = $('.chcktbl').length;
            if (length == max) {
                $('#chckHead').prop('checked', true);
            }
            else {
                $('#chckHead').prop('checked', false);
            }
        });

        $('#chckHead').click(function () {
            if (this.checked == false) {
                $('input.chcktbl:checked').prop('checked', false);
            }
            else {
                $('input.chcktbl:not(:checked)').prop('checked', true);
            }
        });

        function deleteCheckedRow() {
            var rows = 0;
            $('input.chcktbl:checked').each(function () {
                var flg = $('input.delFlg', $(this).parent().parent());
                if (flg.val() == null || flg.val() == '' || flg.val() == 0) {
                    rows++;
                }
                flg.val(1);
                $(this).parent().parent().hide();

            });
            if (rows == 0) {
                alert("Vui lòng chọn dòng để xóa.");
            }
            //getAllTotal();
        };

        function RemoveRougeChar(convertString) {
            if (convertString.substring(0, 1) == ",") {
                return convertString.substring(1, convertString.length)
            }
            return convertString;
        }

        function NumbericOnly(ctrl) {
            $(ctrl).keypress(function (key) {
                //getting key code of pressed key
                var keycode = (key.which) ? key.which : key.keyCode;
                //comparing pressed keycodes

                if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                    alert(" You can enter only characters 0 to 9 ");
                    return false;
                }
                else return true;
            });

        }

        function formatNumberic() {
            $('input.numberic').each(function () {
                var $this = $(this);
                var AmountWithCommas = $this.val();
                var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                var arParts = String(AmountWithCommas).split(DecimalSeparator);

                var intPart = arParts[0];
                var decPart = (arParts.length > 1 ? arParts[1] : '');

                var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                if (decPart.length > 2) {
                    decPart = (decPart + '00').substr(0, 2);
                }
                if (arParts.length > 1) {
                    $this.val(num2 + DecimalSeparator + decPart);
                } else {
                    $this.val(num2);
                }
            });
        }

        function numberOnly() {
            $('input.numberic').keypress(function (key) {
                var keycode = (key.which) ? key.which : key.keyCode;
                //comparing pressed keycodes

                if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                    return false;
                }
                else return true;

            });
            $('input.numberic').keyup(function (event) {
                // skip for arrow keys
                if (event.which >= 37 && event.which <= 40) {
                    //event.preventDefault();
                    return true;
                }
                var $this = $(this);
                var AmountWithCommas = $this.val();
                var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                var arParts = String(AmountWithCommas).split(DecimalSeparator);

                var intPart = arParts[0];
                var decPart = (arParts.length > 1 ? arParts[1] : '');

                var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                if (decPart.length > 2) {
                    decPart = (decPart + '00').substr(0, 2);
                }
                if (arParts.length > 1) {
                    $this.val(num2 + DecimalSeparator + decPart);
                } else {
                    $this.val(num2);
                }
            });
        };
        function productCodeAutocomplete()
        {
            $("input.code").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/SanPham/FindSuggestByCd", data: "{ 'prefixText': '" + request.term + "' }",
                        dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; }, success:
                            function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.value,
                                        name: item.name,
                                        value: item.value,
                                        id: item.id
                                    }
                                }))
                            }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                    });
                    var $this = $(this);
                    var parent = $this.parent().parent();
                    $('input.productId', parent).val("");
                    $('input.productname', parent).val("");
                },
                select: function (event, ui) {
                    var $th = $(this);
                    var pa = $th.parent().parent();
                    $th.val(ui.item.label);
                    $('input.productId', pa).val(ui.item.id);
                    $('input.productname', pa).val(ui.item.name);
                    createDonViTinh($th);
                    return false;
                },
                minLength: 1
            });
        }
        function productAutocomplete()
        {
            $("input.productname").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/SanPham/FindSuggestName", data: "{ 'prefixText': '" + request.term + "' }",
                        dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; }, success:
                            function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.value,
                                        value: item.value,
                                        code: item.code,
                                        id: item.id
                                    }
                                }))
                            }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                    });
                    var $this = $(this);
                    var parent = $this.parent().parent();
                    $('input.productId', parent).val("");
                    $('input.code', parent).val("");
                },
                select: function (event, ui) {
                    var $th = $(this);
                    var pa = $th.parent().parent();
                    $th.val(ui.item.label);
                    $('input.productId', pa).val(ui.item.id);
                    $('input.code', pa).val(ui.item.code);
                    createDonViTinh($th);
                    return false;
                },
                minLength: 1
            });
        }

        function createDonViTinh(obj) {
            var result = '';
            var $th = obj;
            var pr = $th.parent().parent();
            var productId = $('input.productId', pr).val();
            $.ajax({
                url: "/BanHang/FindDonViTinhByMaSP",
                data: "{'maSP' : '" + productId + "'}",
                dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                success:
                    function (data) {
                        var $this = obj;
                        var parent = $this.parent().parent();
                        var un = $('select.unit', parent);
                        $('select.unit', parent).empty();
                        $.each(data, function (i, item) {
                            var opt = "<option value=" + item.MA_DON_VI + ">" + item.TEN_DON_VI + "</option>"
                            $(opt).appendTo(un);
                        });
                    },
                error:
                    function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
            });
        }

        $(document).ready(function () {
            formatNumberic();
            numberOnly();
            productAutocomplete();    
            productCodeAutocomplete();
        });

        function addRow() {
            var row = parseInt($("#rowIndex").val()) + 1;
            $('#detailTable > tbody:last').append('<tr> '+
                '<td class="inner alignCenter colwidth" width="5%;">' +
                '<input type="checkbox" class="chcktbl"> </td>' +
                '<td class="inner colwidth">' +
                '<input name="Detail[' + row + '].CODE" class="code codebtl ui-autocomplete-input" id="Detail_' + row + '__CODE" role="textbox" aria-haspopup="true" aria-autocomplete="list" type="text" value="" autocomplete="off">' +
                '</td>' +
                '<td class="inner colwidth">' +
                '<input name="Detail[' + row + '].DEL_FLG" class="delFlg" id="Detail_' + row + '__DEL_FLG" type="hidden" value="" data-val="true" data-val-number="The field DEL_FLG must be a number.">' +
                '<input name="Detail[' + row + '].MA_SAN_PHAM" class="productId " id="Detail_' + row + '__MA_SAN_PHAM" ' +
                    'type="hidden" value="" data-val="true" data-val-number="The field MA_SAN_PHAM must be a number.">' +
                '<input name="Detail[' + row + '].TEN_SAN_PHAM" class="productname namebtl" id="Detail_' + row + '__TEN_SAN_PHAM" type="text" value=""> </td>' +
                '<td class="inner colwidth">' +
                '<input name="Detail[' + row + '].SO_LUONG_TEMP" class="quantity textbtl numberic" id="Detail_' + row + '__SO_LUONG_TEMP" type="text" value="" data-val="true" data-val-number="The field SO_LUONG_TEMP must be a number."> </td>' +
                '<td class="inner colwidth">' +
                '<select name="Detail[' + row + '].MA_DON_VI" class="unit textbtl" id="Detail_'+ row +'__MA_DON_VI" style="padding: 5px; font-size: 1.2em;" data-val="true" data-val-number="The field MA_DON_VI must be a number.">' +
                '<option value="">---------</option></select> </td>' +
                '<td class="inner colwidth">' +
                '<input name="Detail[' + row + '].GIA_VON" class="price textbtl numberic" id="Detail_' + row + '__GIA_VON" type="text" value="" data-val="true" data-val-number="The field GIA_VON must be a number."> </td>' +
                '<td class="innerLast colwidth">' +
                '<input name="Detail[' + row + '].THANH_TIEN" class="total textbtl numberic" id="Detail_' + row + '__THANH_TIEN" type="text" readonly="True" value="" data-val-required="The THANH_TIEN field is required." data-val="true" data-val-number="The field THANH_TIEN must be a number."> </td>' +
                '</tr>');
            $("#rowIndex").val(row);
            $('input.code', $('#detailTable > tbody:last')).focus();
            numberOnly();
            productAutocomplete();
            productCodeAutocomplete();
        };
    </script>
}
