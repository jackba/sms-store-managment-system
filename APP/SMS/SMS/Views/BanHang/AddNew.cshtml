@model SMS.Models.HoaDonBanHang
@{
    if (0 < ViewBag.MaHoaDon)
    {
        ViewBag.Title = "Chỉnh sửa hóa đơn bán hàng";
    }
    else
    {
        ViewBag.Title = "Lập hóa đơn bán hàng";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/HoaDonBanHang.css" rel="stylesheet" />
<link href="~/Content/css/style.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Import.css" rel="stylesheet" type="text/css" />
@*<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>*@
<div style="background-color:lightblue; width:100%; padding-top:10px; padding-bottom:10px; padding-left: 5px;">
    <a href="@Url.Action("BanHang", "Home")"> Bán hàng </a>
    > @ViewBag.Title
</div>

<h2>@ViewBag.Title</h2>
@section Scripts
{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    <link href="../../Content/css/sunny/jquery-ui-1.10.3.custom.css" rel="stylesheet" type="text/css" />
    <script src="../../Content/js/jquery-1.9.1.js" type="text/javascript"></script>
    <script src="../../Content/js/jquery-ui-1.10.3.custom.js" type="text/javascript"></script>

    <script>
    var unitRootName = null;
    var rowNumCurrent = null;
    // ONLOAD WINDOW
    $(document).ready(function () {

        //show calendar

        $('.datePicker').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0"
        });

        $('#TenKhachHang').focus();
        $('input.discount').focusout(
            function (event) {
                checkDiscountInput(event);
            }
        );
      
        $('input.numberic').focusout(
            function (event) {
                formatNumberic();
            }

        );
        // hide
        hideRelationProduct();
        hideRelationCustomer();

        $('#NgayBan').datepicker('setDate', 'today');
        $('#NgayGiao').datepicker('setDate', 'today');

        //add catch event user press Ctr+S & Ctrl+Shift+S
        $(window).bind('keydown', function (e) {
            if ((e.which == '115' || e.which == '83') && (e.ctrlKey || e.metaKey)) {
                if (e.shiftKey) { // Ctrl+Shift+S
                    returnPrintSubmit();
                    return false;
                }
                // Ctrl + S
                returnSubmit();
                return false;
            }
            return true;
        });


        /**AUTOCOMPLETE**/
        // Customer name
        $("#TenKhachHang").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/KhachHang/FindDetailCustomer", data: "{ 'prefixText': '" + request.term + "' }",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    lable: item.name,
                                    value: item.name,
                                    id: item.id,
                                    cardNo: item.cardNo,
                                    address: item.address,
                                    fone: item.fone,
                                    email: item.mail,
                                    kind : item.kind
                                }
                            }))
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                $('#kindCustomer').val('3');
                $('#DienThoai').val('');
                $('#MaKhachHang').val('');
            },
            select: function (event, ui) {
                $('#kindCustomer').val(ui.item.kind);
                $("#typeCustomers").val(ui.item.kind);

                setRelationCustomer(ui.item, true);
                hideRelationCustomer();
                $('input.code', $('#detailTable > tbody:last')).focus();
                return false;
            },
            focus: function (event, ui) {
                setRelationCustomer(ui.item);

                showRelationCustomer();
            },
            close: function () {
                hideRelationCustomer();
            },
            minLength: 1

        })
       
       
    });

    function checkDiscountInput(event) {

        var obj = event.currentTarget;
        if (obj.value == "") {
            obj.value = "0";
        }
        if (removeCommas(obj.value) > 100) {
            obj.focus();
            obj.style.borderColor = "red";
            obj.style.backgroundColor = "antiquewhite";
            setDisableControl('btnSave_Top', true);
            setDisableControl('btnSave_Bottom', true);
        } else {
            obj.style.borderColor = "#e2e2e2";
            obj.style.backgroundColor = "white";
            setDisableControl('btnSave_Top', false);
            setDisableControl('btnSave_Bottom', false);
        }
        obj.value = parseFloat(obj.value);
    
    }
  
    function setDisableControl(idControl, isDisable) {
        var control = $('#' + idControl);
        if (control != null) {
            if (isDisable == true) {
                control.attr("disabled", "disabled");
                control.css("background-color", "#ECECEC");
            } else {
                control.removeAttr("disabled", "disabled");
                control.css("background-color", "");
            }
        }
    }
    function hideRelationProduct(){
        // hide relation product
        $('#relationProduct').removeClass('relationProductShow');
        $('#relationProduct').addClass('HideElement');

    }
    function showRelationProduct(idControlAjax) {

        // show relation product
        $('#relationProduct').removeClass('HideElement');
        $('#relationProduct').addClass('relationProductShow');

        var width = idControlAjax.width();
        var offset = idControlAjax.offset();
        offset.left = offset.left + width + 10;
        $('#relationProduct').offset({ top: offset.top, left: offset.left })
    }
    function hideRelationCustomer() {
        // hide relation customer
        $('#relationCustomer').removeClass('relationCustomerShow');
        $('#relationCustomer').addClass('HideElement');
    }
    function showRelationCustomer() {
        // show relation customer
        $('#relationCustomer').removeClass('HideElement');
        $('#relationCustomer').addClass('relationCustomerShow');

        var width = $('#ui-id-1').width();
        var offset = $('#ui-id-1').offset();
        offset.left = offset.left + width + 10;
        $('#relationCustomer').offset({ top: offset.top, left: offset.left })
    }
    function addCommaNumberic(ctrlID, isSpanTag) {
        if (isSpanTag == true) {
            $(ctrlID).html($(ctrlID).html().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        } else {
            $(ctrlID).val($(ctrlID).val().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        }

    }
    function changeTypeCustomer() {
        $('#kindCustomer').val($('#typeCustomers').val());
    }
    function setEmptyFixedField(isCode) {
        //$('#MaSanPham').val('');
        if (isCode == true) {
            $('#TenSanPham').val('');
        } else {
            $('#CodeSanPham').val('');
        }
        $('#GiaBan').val('');
        $('#ChietKhau').val('');
        $('#GiaThuc').val('');
        $('#typeDonViTinh').empty();
        $('#hidUnitRootName').val('');
    }
    function setFixedField(item , isCode) {
        CalcRealPrice(item.price, item.discount);
        addCommaNumberic('#GiaThuc');
        $('#MaSanPham').val(item.id);

        if (isCode == true) {
            $('#CodeSanPham').val(item.label);
            $('#TenSanPham').val(item.name);
        } else {
            $('#CodeSanPham').val(item.code);
            $('#TenSanPham').val(item.label);
        }

        $('#GiaBan').val(item.price);
        addCommaNumberic('#GiaBan');
        $('#ChietKhau').val(item.discount);
        addCommaNumberic('#ChietKhau');
    }
    function setRelationProduct(item /*, isSelected*/ , isCode) {
        $('#S_MaSanPham').html(item.id);
        if (isCode == true) {
            $('#S_TenSanPham').html(item.name);
        } else {
            $('#S_TenSanPham').html(item.label);
        }

    
        $('#S_GiaBan').html(item.price);

        $('#S_ChietKhau').html(item.discount);
        
        var priceReal = CalcRealPrice(item.price, item.discount, true);
        $('#S_GiaThuc').html(priceReal);
 
     
    }
    function setRelationCustomer(item, isSelected) {

        $('#S_MaKhachHang').html(item.id);
        $('#S_TenKhachHang').html(item.label);
        $('#S_MaTheKhachHang').html(item.cardNo);
        $('#S_DiaChi').html(item.address);
        $('#S_SoDienThoai').html(item.fone);
        $('#S_Email').html(item.email);
        if (isSelected == true) {
            $('#MaKhachHang').val(item.id);
            $('#TenKhachHang').val(item.label);
            $('#DienThoai').val(item.fone);
            $('#DiaChi').val(item.address);
        }

    }

    function setStoreInformation(item) {
        var result = '';
        $.ajax({
            url: "/BanHang/CheckingProductInAllStore",
            data: "{'maSP' : '" + item.id + "'}",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    $.each(data, function (i, itm) {
                        $('#store_1').html(itm.TON_KHO_1);
                        $('#store_2').html(itm.TON_KHO_2);
                        $('#store_3').html(itm.TON_KHO_3);
                        $('#store_4').html(itm.TON_KHO_4);
                        $('#store_5').html(itm.TON_KHO_5);
                    });
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }

    function createDonViTinh() {
        var result = '';
        $.ajax({
            url: "/BanHang/FindDonViTinhByMaSP",
            data: "{'maSP' : '" + $('#MaSanPham').val() + "'}",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    $('#typeDonViTinh').empty();
                    $.each(data, function (i, item) {
                        var opt = "<option value=" + item.MA_DON_VI + ">" + item.TEN_DON_VI + "</option>"
                        $(opt).appendTo('#typeDonViTinh');
                    });
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }

    
    function confirmBack() {
        var title = "Xác nhận";
        var content = "Quá trình trở về có thể làm mất dữ liệu bạn đang thao tác. <br\> Bạn muốn tiếp tục hay không?";
        if ($("table.tableContentScroll tr").length == 0) {
            $('#hidBtnBack').click();
        } else {
            fnOpenConfirmDialog(title, content,1);
        }
    }
    function fnOpenConfirmDialog(title, content, action) {
        $("#dialogConfirm").html(content);
        $("#dialogConfirm").dialog({
            resizable: false,
            modal: true,
            title: title,
            height: 200,
            width: 550,
            buttons: {
                "Đồng ý": function () {
                    $(this).dialog('close');
                    switch (action) {
                        case 1:
                            $('#hidBtnBack').click();
                            break;
                        case 2:
                            reset();
                            $('#TenKhachHang').focus();
                            break;
                    }

                },
                "Không": function () {
                    $(this).dialog('close');
                }
            }
        });
    };

    function fnOpenNormalDialog(title, content, action) {
        if ($("table.tableContentScroll tr").length == 0) {
            return;
        }

        $("#dialogConfirm").html(content);
        switch(action)
        {
            case 1:  // change type customer
                $("#dialogConfirm").dialog({
                    resizable: false,
                    modal: true,
                    title: title,
                    height: 200,
                    width: 550,
                    buttons: {
                        "Đồng ý": function () {
                            $(this).dialog('close');
                            callback(true);
                        },
                        "Không": function () {
                            $(this).dialog('close');
                            callback(false);
                        }
                    }
                });
                break;
            case 2: // duplicate product item
                $("#dialogConfirm").dialog({
                    resizable: false,
                    modal: true,
                    title: title,
                    height: 200,
                    width: 550,
                    buttons: {
                        "Đóng": function () {
                            $(this).dialog('close');
                            $('#tableSearch #TenSanPham').select();
                        }
                    }
                });
                break
            default:
                break;
        }
    }
    function callback(valueReturn) {
        if (valueReturn) {
            $("table.tableContentScroll tr").remove();
        
        } else {
            $('input:radio[value="' + $('#currTypeCustomer').val() + '"]').prop('checked', true);
        }
    }
      
    
    /*compare 2 date : date1 , date2 with n day
    *return 1 : date1 > date2 / 0 : date1 <= date2
    */
    function compareDate(dtFrom, dtTo, day) {
        if (($.datepicker.parseDate('dd/mm/yy', dtFrom) - $.datepicker.parseDate('dd/mm/yy', dtTo)) > day) {
            return 1;
        } else {
            return 0;
        }
    }

    
    function GetFactorOfProduct(productNo, unitNo, convertor) {
        if (unitNo != null && unitNo != 'undefined') {
            $.ajax({
                url: "/BanHang/FindFactorOfProduct1",
                //data: "{'maSP' : '" + productNo + "'}",
                data: "{ 'maSP': '" + productNo + "' , 'unitNo' : '" + unitNo + "'}",
                dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var parent = convertor.parent().parent();
                    var kind = $("#typeCustomers").val();
                    convertor.val(data.heso);
                    if(kind == 1){
                        $("input.price", parent).val(data.gia_ban_1);
                        $("input.discount", parent).val(data.chiec_khau_1);
                    }else if(kind == 2){
                        $("input.price", parent).val(data.gia_ban_2);
                        $("input.discount", parent).val(data.chiec_khau_2);                        
                    }else{
                        $("input.price", parent).val(data.gia_ban_3);
                        $("input.discount", parent).val(data.chiec_khau_3);
                    }


                    var discount = $('input.discount', parent).val();
                    var quality = $('input.quantity', parent).val();
                    var price = $('input.price', parent).val();
                    if (discount != '' && quality != '' && price != '') {
                        discount = discount.replace(/,/gi, "");
                        quality = quality.replace(/,/gi, "");
                        price = price.replace(/,/gi, "");
                        var total = quality * price;
                        var realTotal = total - total * discount / 100;
                        $('input.total', parent).val(total);
                        $('input.realTotal', parent).val(realTotal);
                        //formatNumberic();
                    }
                    counter();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
            });
        }
        counter();
    }
    
    function CalcRealPrice(price, discount, isReturn) {
        var result = '';
        if (price == 0 || discount == 0) {
            result = price;
        } else {
            result = price - ((price * discount) / 100);
        }
        result = roundToTwo(result);
        if (result < 0) {
            showMsgErr(" Giá trị của chiết khấu quá lớn so với giá gốc của sản phẩm <br/> Hãy nhập lại giá trị chiết khấu.", false)
            return false;
        }
        if (isReturn == true) {
            return result;
        } else {
            $('#tableSearch #GiaThuc').val(result);
        }
    }

    function roundToTwo(num) {
        return +(Math.round(num + "e+2") + "e-2");
    }

   
    /*remove comma from value input*/
    function removeCommas(str) {
        if (str != null && str != '') {
            return (str.replace(/,/g, ''));
        } else {
            return null;
        }

    }

   function RemoveRougeChar(convertString) {
        if (convertString.substring(0, 1) == ",") {
            return convertString.substring(1, convertString.length)
        }
        return convertString;
    }
    /*end format numberic*/

    function disableEnterKey(e, itemAllowEnter) {
        var key;

        if (window.event){
            key = window.event.keyCode;     //IE
        }
        else{
            key = e.which;     //firefox
        }

        if (key == 13){
            if(null != itemAllowEnter){
                callbackEnterPress(itemAllowEnter);
            }else{
                return false;

            }
        }
        else{
            return true;
        }
    }
    
    function callbackEnterPress(itemAllowEnter){
        switch (itemAllowEnter)
        {
            case 1: // code product
                $.ajax({
                    url: "/SanPham/FindSuggestByCode",
                    data: "{ 'prefixText': '"+ $('#CodeSanPham').val() + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    success:
                        function (data) {
                            if(null != data && data.length > 0){
                                setFixedField(data[0], true);

                                hideRelationProduct();
                                createDonViTinh();

                                $('#hidUnitRootName').val(data[0].unitNm);

                                $('#hidFactorValue').val('1');
                                return false;
                            }
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                break;
            case 2: // name product
                $.ajax({
                    url: "/SanPham/FindSuggestByTypeCustomer",
                    data: "{ 'prefixText': '" + $('#TenSanPham').val() + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    success:
                        function (data) {
                            if(null != data && data.length > 0){
                                setFixedField(data[0] , false);

                                hideRelationProduct();
                                createDonViTinh();

                                $('#hidUnitRootName').val(data[0].unitNm);

                                $('#hidFactorValue').val('1');
                                return false;
                            }
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                break;
        }
    }
    

    //function productCodeEnter() {
    //    $("input.code").autocomplete({
    //    });

    //};



    function productAutocomplete() {
        $("input.productName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/SanPham/FindSuggestByTypeCustomer", data: "{ 'prefixText': '" + request.term + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    lable: item.name,
                                    value: item.name,
                                    id: item.id,
                                    price: item.price,
                                    discount: item.discount,
                                    unit: item.unit,
                                    unitNm: item.unitNm,
                                    code: item.code
                                }
                            }))
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                setEmptyFixedField(false);
            },
            select: function (event, ui) {
                //setFixedField(ui.item);
                hideRelationProduct();               
                var $th = $(this);
                var pa = $th.parent().parent();
                if (!checkDuplicate(ui.item.id)) {
                    $th.val(ui.item.label);
                    $('input.code', pa).val(ui.item.code);
                    $('input.productId', pa).val(ui.item.id);
                    $('input.quantity', pa).val("");
                    $('input.productName', pa).val(ui.item.value);
                    $('input.price', pa).val(ui.item.price);
                    $('input.discount', pa).val(ui.item.discount);
                    $('input.total', pa).val(ui.item.price);
                    $('input.realTotal', pa).val(ui.item.price - ui.item.discount * ui.item.price / 100);
                    createDonViTinh($th);
                    createStore($th);
                    formatNumberic();
                    $('input.convertor', pa).val("1");
                    $th.css("background-color", "white");
                    $('input.quantity', pa).focus();
                    counter();
                } else {
                    alert("Sản phẩm này đã có trong danh sách");
                    $th.val("");
                    $('input.productId', pa).val("");
                    $('input.productName', pa).val("");
                    $('input.convertor', pa).val("1");
                    $('input.price', pa).val("");
                }
                return false;
            },
            focus: function (event, ui) {
                setRelationProduct(ui.item, false);
                var $th = $(this);
                setStoreInformation(ui.item);
                showRelationProduct($th);
            },
            close: function () {
                hideRelationProduct();
            },
            minLength: 1

        }).keyup(function (e) {
            if (e.which === 13 || e.which === 27) {
                $(".ui-menu-item").hide();
                hideRelationProduct();
            }
        });
    }

    function quantityEnter() {
        $('input.quantity').keypress(function (event) {
            var $this = $(this);
            var $parent = $(this).parent().parent();
            if (event.which === 13 || event.which === 27) {
                if ($('#detailTable >tbody >tr').length - 1 == $parent.index()) {
                    addRow();
                } else {
                    $('input.code', $('#detailTable > tbody:last')).focus();
                }
            }
        });
    }

    function customerEnter() {
        $('#TenKhachHang').keypress(function (event) {
            var $this = $(this);
            if (event.which === 13 || event.which === 27) {
                $('#kindCustomer').val('3');
                $('input.code', $('#detailTable > tbody:last')).focus();
            };
        });
    }

    function codeEnter() {
        $('input.code').keypress(function (event) {
            var $this = $(this);
            if (event.which === 13 || event.which === 27) {
                    $.ajax({
                        url: "/SanPham/FindSuggestFirstbyCode", data: "{ 'prefixText': '" + $this.val() + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                        dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; },
                        success:
                            function (data) {
                                $.each(data, function (i, item) {
                                    //alert(item.id);
                                    var $th = $this;
                                    var pa = $th.parent().parent();
                                    if (!checkDuplicate(item.id)) {
                                        $th.val(item.label);
                                        $('input.productId', pa).val(item.id);
                                        $('input.productName', pa).val(item.name);
                                        $('input.price', pa).val(item.price);
                                        $('input.quantity', pa).val("");
                                        $('input.discount', pa).val(item.discount);
                                        $('input.total', pa).val(item.price);
                                        $('input.realTotal', pa).val(item.price - item.discount * item.price / 100);
                                        createDonViTinh($th);
                                        createStore($th);
                                        formatNumberic();
                                        $('input.convertor', pa).val("1");
                                        $th.css("background-color", "white");
                                        $('input.quantity', pa).focus();
                                        counter();
                                    } else {
                                        alert("Sản phẩm này đã có trong danh sách");
                                        $th.val("");
                                        $('input.productId', pa).val("");
                                        $('input.productName', pa).val("");
                                        $('input.convertor', pa).val("1");
                                        $('input.price', pa).val("");
                                        $('input.quantity', pa).val("");
                                    }
                                    hideRelationProduct();
                                    return false;
                                });
                            },
                        error:
                            function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                    });
                };
        });
    }
    function unitOnchange() {
        $("select.unit").change(function (event) {
            var $this = $(this);
            var parent = $this.parent().parent();
            var productId = $('input.productId', parent).val();
            var unitId = $this.val();
            var convertor = $('input.convertor', parent);
            if (productId != null && productId != '' && unitId != null && unitId != '') {
                GetFactorOfProduct(productId, unitId, convertor);
            }          
        });
    }

    function createDonViTinh(obj) {
        var result = '';
        var $th = obj;
        var pr = $th.parent().parent();
        var productId = $('input.productId', pr).val();
        $.ajax({
            url: "/BanHang/FindDonViTinhByMaSP",
            data: "{'maSP' : '" + productId + "'}",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    var $this = obj;
                    var parent = $this.parent().parent();
                    var un = $('select.unit', parent);
                    $('select.unit', parent).empty();
                    $.each(data, function (i, item) {
                        var opt = "<option value=" + item.MA_DON_VI + ">" + item.TEN_DON_VI + "</option>"
                        $(opt).appendTo(un);
                    });
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }

    function createStore(obj) {        
        var result = '';
        $.ajax({
            url: "/BanHang/FindStore",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    var $this = obj;
                    var parent = $this.parent().parent();
                    var un = $('select.store', parent);
                    $('select.store', parent).empty();
                    $.each(data, function (i, item) {
                        var opt = '';
                        if (item.value == parseInt($('#MyStore').val())) {
                            opt = "<option value=" + item.value + " selected>" + item.name + "</option>"
                        } else {
                            opt = "<option value=" + item.value + ">" + item.name + "</option>"
                        }
                        $(opt).appendTo(un);
                    });
                    un.val($("#myStore").val());
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }

    function checkDuplicate(val) {
        var flg = false;
        $('td input.productId').each(function () {
            if ($('input.delFlg', $(this).parent()).val() != 1) {
                var checkVal = $(this).val();
                if (val == checkVal) {
                    flg = true;
                }
            }
        })
        return flg;
    };

    function priceKeyPress() {
        $('input.price').keyup(function (event) {
            var $this = $(this);
            var parent = $this.parent().parent();
            var price = $('input.quantity', parent).val().replace(/,/gi, "");
            var discount = $('input.discount', parent).val().replace(/,/gi, "");
            var tt = $this.val().replace(/,/gi, "") * price;
            var readTotal = tt - discount * tt / 100;
            var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
            var arParts = String(tt).split(DecimalSeparator);
            var intPart = arParts[0];
            var decPart = (arParts.length > 1 ? arParts[1] : '');
            var num = intPart.replace(/,/gi, "").split("").reverse().join("");
            var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
            if (decPart.length > 2) {
                decPart = (decPart + '00').substr(0, 2);
            }
            if (arParts.length > 1) {
                $('td input.total', parent).val(num2 + DecimalSeparator + decPart);
            } else {
                $('td input.total', parent).val(num2);
            }
            $('td input.realTotal', parent).val(readTotal);
            //formatNumberic();
            counter();
        });
    };

    function formatNumberic() {
        $('input.numberic').each(function () {
            var $this = $(this);
            var AmountWithCommas = $this.val();
            var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
            var arParts = String(AmountWithCommas).split(DecimalSeparator);

            var intPart = arParts[0];
            var decPart = (arParts.length > 1 ? arParts[1] : '');

            var num = intPart.replace(/,/gi, "").split("").reverse().join("");
            var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
            if (decPart.length > 2) {
                decPart = (decPart + '00').substr(0, 2);
            }
            if (arParts.length > 1) {
                $this.val(num2 + DecimalSeparator + decPart);
            } else {
                $this.val(num2);
            }
        });
    }
    function productCodeAutocomplete() {
        $("input.code").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/SanPham/FindSuggestByCode", data: "{ 'prefixText': '" + request.term + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    lable: item.code,
                                    value: item.code,
                                    id: item.id,
                                    price: item.price,
                                    discount: item.discount,
                                    unit: item.unit,
                                    unitNm: item.unitNm,
                                    name: item.name
                                }
                            }))
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                var $this = $(this);
                var parent = $this.parent().parent();
                $('input.productId', parent).val("");
                $('input.productName', parent).val("");
                $('input.convertor', parent).val("1");
                $('input.price', parent).val("");
            },
            select: function (event, ui) {
                //setFixedField(ui.item, true);
                hideRelationProduct();
               // $('#hidUnitRootName').val(ui.item.unitNm);

               // $('#hidFactorValue').val('1');
                var $th = $(this);
                var pa = $th.parent().parent();
                if (!checkDuplicate(ui.item.id)) {
                    $th.val(ui.item.label);
                    $('input.productId', pa).val(ui.item.id);
                    $('input.productName', pa).val(ui.item.name);
                    $('input.price', pa).val(ui.item.price);
                    $('input.quantity', pa).val("");
                    $('input.discount', pa).val(ui.item.discount);
                    $('input.total', pa).val(ui.item.price);
                    $('input.realTotal', pa).val(ui.item.price - ui.item.discount * ui.item.price / 100);
                    createDonViTinh($th);
                    createStore($th);
                    formatNumberic();
                    $('input.convertor', pa).val("1");
                    $th.css("background-color", "white");
                    $('input.quantity', pa).focus();
                    counter();
                } else {
                    alert("Sản phẩm này đã có trong danh sách");
                    $th.val("");
                    $('input.productId', pa).val("");
                    $('input.productName', pa).val("");
                    $('input.convertor', pa).val("1");
                    $('input.price', pa).val("");
                    $('input.quantity', pa).val("");
                }
                return false;
            },
            focus: function (event, ui) {
                setRelationProduct(ui.item, true);
                var $th = $(this);
                setStoreInformation(ui.item);
                showRelationProduct($th);
            },
            close: function () {
                hideRelationProduct();
            },
            minLength: 1

        }).keyup(function (e) {
            if (e.which === 13 || e.which === 27) {
                $(".ui-menu-item").hide();
                hideRelationProduct();
            }
        });
    }
    function tableCheck() {
        $('.chcktbl').click(function () {
            var length = $('.chcktbl:checked').length;
            var max = $('.chcktbl').length;
            if (length == max) {
                $('#chckHead').prop('checked', true);
            }
            else {
                $('#chckHead').prop('checked', false);
            }
        });
    }

    function headerCheck() {
        $('#chckHead').click(function () {
            if (this.checked == false) {
                $('input.chcktbl:checked').prop('checked', false);
            }
            else {
                $('input.chcktbl:not(:checked)').prop('checked', true);
            }
        });
    }


    function deleteCheckedRow() {
        var rows = 0;
        $('input.chcktbl:checked').each(function () {
            var flg = $('input.delFlg', $(this).parent().parent());
            if (flg.val() == null || flg.val() == '' || flg.val() == 0) {
                rows++;
            }
            flg.val(1);
            $(this).parent().parent().hide();            
        });
        if (rows == 0) {
            alert("Vui lòng chọn dòng để xóa.");
        }
        counter();
    };


    function quantityKeyPress() {
        $('input.quantity').keyup(function (event) {
            var $this = $(this);
            var parent = $this.parent().parent();
            var price = $('input.price', parent).val().replace(/,/gi, "");
            var tt = $this.val().replace(/,/gi, "") * price;
            var discount = $('input.discount', parent).val().replace(/,/gi, "");
            var realTotal = tt - discount * tt / 100;
            $('td input.realTotal', parent).val(realTotal);
            var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
            var arParts = String(tt).split(DecimalSeparator);
            var intPart = arParts[0];
            var decPart = (arParts.length > 1 ? arParts[1] : '');
            var num = intPart.replace(/,/gi, "").split("").reverse().join("");
            var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
            if (decPart.length > 2) {
                decPart = (decPart + '00').substr(0, 2);
            }
            if (arParts.length > 1) {
                $('td input.total', parent).val(num2 + DecimalSeparator + decPart);
            } else {
                $('td input.total', parent).val(num2);
            }
            //formatNumberic();
            counter();
        });
    };

    function discountKeyPress() {
        $('input.discount').keyup(function (event) {
            var $this = $(this);
            var parent = $this.parent().parent();
            var price = $('input.price', parent).val().replace(/,/gi, "");
            var quantity = $('input.quantity', parent).val().replace(/,/gi, "");
            var tt = quantity * price;
            var discount = $('input.discount', parent).val().replace(/,/gi, "");
            var realTotal = tt - discount * tt / 100;
            $('input.realTotal', parent).val(realTotal);
            //formatNumberic();
            counter();
        });
    };

    function onloadTotal() {
        $('td input.productId').each(function () {
            $this = $(this);
            $parent = $this.parent().parent();
            var price = $('input.price', $parent).val().replace(/,/gi, "");
            var quantity = $('input.quantity', $parent).val().replace(/,/gi, "");
            var discount = $('input.discount', $parent).val().replace(/,/gi, "");
            var total = price * quantity - price * quantity * discount / 100;
            $('input.total', $parent).val(price * quantity);
            $('input.realTotal', $parent).val(total);
        })
    }
    function addRow() {
        var row = parseInt($("#rowIndex").val()) + 1;
        $('#detailTable > tbody:last').append('<tr> ' +
                '<td class="inner alignCenter colwidth" width="5%;">' +
                '<input type="checkbox" class="chcktbl"> </td>' +
                '<td class="inner colwidth "><input name="lstChiTietHoaDon[' + row + '].Code_SP" class="code codebtl" id="lstChiTietHoaDon_' + row + '__Code_SP" type="text" value=""></td>' +
                '<td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Ma_SP" class="productId " id="lstChiTietHoaDon_' + row + '__Ma_SP" type="hidden" value="" data-val="true" data-val-number="The field Ma_SP must be a number."> ' +
                '<input name="lstChiTietHoaDon[' + row + '].DEL_FLG" class="delFlg" id="lstChiTietHoaDon_' + row + '__DEL_FLG" type="hidden" value="" data-val="true" data-val-number="The field DEL_FLG must be a number."> ' +
                '<input name="lstChiTietHoaDon[' + row + '].HE_SO" class="convertor" id="lstChiTietHoaDon_' + row + '__HE_SO" type="hidden" value="" data-val="true" data-val-number="The field HE_SO must be a number.">' +
                '<input name="lstChiTietHoaDon[' + row + '].Ten_SP" class="productName" id="lstChiTietHoaDon_' + row + '__Ten_SP" type="text" value="">' +                
                '</td>' +
                '<td class="inner colwidth ">'+
                '<input name="lstChiTietHoaDon[' + row + '].So_Luong" class="quantity numberic" maxlength = "7" id="lstChiTietHoaDon_' + row + '__So_Luong" type="text" value="" data-val="true" data-val-number="The field So_Luong must be a number."></td>' +
                '<td class="inner colwidth ">' +
                '<select name="lstChiTietHoaDon[' + row + '].Ma_Don_Vi" class="unit " id="lstChiTietHoaDon_' + row + '__Ma_Don_Vi" style="padding: 5px; font-size: 1.2em;" data-val-required="The Ma_Don_Vi field is required." data-val="true" data-val-number="The field Ma_Don_Vi must be a number."><option value="">---------</option>' +
                '</select></td>' +
                '<td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Gia_Ban" class="price numberic" maxlength = "9" id="lstChiTietHoaDon_' + row + '__Gia_Ban" type="text" value="" readonly="True" data-val="true" data-val-number="The field Gia_Ban must be a number.">' +
                '</td><td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Thanh_Tien" disabled="disabled" class="total numberic" id="lstChiTietHoaDon_' + row + '__Thanh_Tien" type="text" readonly="True" value="" data-val="true" data-val-number="The field Thanh_Tien must be a number.">' +
                '</td><td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Phan_Tram_CK" class="discount numberic" maxlength = "4" id="lstChiTietHoaDon_' + row + '__Phan_Tram_CK" type="text"  readonly="True" value="" data-val="true" data-val-number="The field Phan_Tram_CK must be a number.">' +
                '</td><td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Gia_Thuc" disabled="disabled" class="realTotal numberic" id="lstChiTietHoaDon_' + row + '__Gia_Thuc" type="text" readonly="True" value="" data-val="true" data-val-number="The field Gia_Thuc must be a number.">' +
                '</td><td class="innerLast colwidth ">' +
                '<select name="lstChiTietHoaDon[' + row + '].Ma_Kho_Xuat" class="store " id="lstChiTietHoaDon_' + row + '__Ma_Kho_Xuat" style="padding: 5px; width: 100px; font-size: 1.2em"><option value="">---------</option>' +
                '</select></td>' +
                '</tr>');
        $("#rowIndex").val(row);
        $('input.code', $('#detailTable > tbody:last')).focus();
        productAutocomplete();
        productCodeAutocomplete();
        tableCheck();
        headerCheck();
        unitOnchange();
        priceKeyPress();
        quantityKeyPress();
        //formatNumberic();
        discountKeyPress();
        numberOnly();
        quantityEnter();
        codeEnter();
        // format numberic 
        $('input.numberic').focusout(
         function (event) {
             formatNumberic();
         }

     );
    };

    function counter() {
        var numberOfProduct = 0;
        var totalOfInvoice = 0;
        var totalOfDiscount = 0;
        var totalOfPayment = 0;
        var total = 0;
        var discount = 0;
        var realTotal = 0;
        $('td input.total').each(function () {
            $this = $(this);
            $parent = $this.parent().parent();
            if ($('input.delFlg', $parent).val() == 0) {
                numberOfProduct += 1;
                total = $this.val();                
                if (total != null && total != '') {
                    total = total.replace(/,/gi, "");
                    realTotal = $('input.realTotal', $parent).val().replace(/,/gi, "");
                    totalOfInvoice += parseFloat(total);
                    discount = parseFloat(total - realTotal);
                    totalOfDiscount += discount;
                    totalOfPayment += parseFloat(realTotal);
                }
            }
        });
        $("#numberOfProduct").val(numberOfProduct);
        $("#totalOfInvoice").val(totalOfInvoice);
        $("#totalDiscount").val(totalOfDiscount);
        $("#paymentTotal").val(totalOfPayment);
        //formatNumberic();
    };

    function numberOnly() {
        $('input.numberic').keypress(function (key) {
            var keycode = (key.which) ? key.which : key.keyCode;
            //comparing pressed keycodes

            if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                return false;
            }
            else return true;

        });
        $('input.numberic').keyup(function (event) {
            // skip for arrow keys
            if (event.which >= 37 && event.which <= 40) {
                //event.preventDefault();
                return true;
            }
         
        });
        // check input number fone 
        $('input.numberfone').keypress(function (key) {
            var keycode = (key.which) ? key.which : key.keyCode;
            //comparing pressed keycodes

            if (keycode > 47 && keycode < 58) {
                return true;
            }
            else return false;

        });
        $('input.numberfone').keyup(function (event) {
            // skip for arrow keys
            if (event.which >= 37 && event.which <= 40) {
                //event.preventDefault();
                return true;
            }

        });

    };

    $(document).ready(function () {
        numberOnly();
        productAutocomplete();
        productCodeAutocomplete();
        unitOnchange();
        tableCheck();
        headerCheck();        
        priceKeyPress();
        quantityKeyPress();
        discountKeyPress();
        onloadTotal();
        counter();
        formatNumberic();
        quantityEnter();
        codeEnter();
        customerEnter();
    });

    function checkdlc() {
        var flg = false;
        var productIdes = $('td input.productId');
        var i = 0;
        var j = 1;
        for (i = 0; i < productIdes.length - 1; i++) {
            if (productIdes[i].value != '') {
                for (j = i + 1; j < productIdes.length; j++) {
                    if (productIdes[j].value != '' && productIdes[j].value == productIdes[i].value) {
                        flg = true;
                        break;
                    }
                }
            }
        }
        return flg;
    };

    function returnPrintSubmit() {
        $('#message').empty();
        $('#InforMessage').empty();
        var row = 0;
        var rval = 1;
        var pval = 1;
        var ppval = 1;
        var checkFlg = 0;
        var showFlg = $("#showFlg").val();
        var errorMessage = '';
        if ($("#NgayBan").val() == null || $("#NgayBan").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Chưa nhập ngày bán hàng. Vui lòng chọn ngày bán hàng.";
        }
        if ($("#TenKhachHang").val() == null || $("#TenKhachHang").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Vui lòng nhập tên khách hàng.";
        }

        if ($("#NgayGiao").val() == null || $("#NgayGiao").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Chưa nhập ngày giao hàng. Vui lòng chọn ngày giao hàng.";
        }
        /*if ($("#DienThoai").val() == null || $("#DienThoai").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Vui lòng nhập điện thoại để liên lạc.";
        }
        if ($("#DiaChi").val() == null || $("#DiaChi").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Vui lòng nhập địa chỉ giao hàng.";
        }*/
        var totalr = 0;
        $("#printFlg").val(1);
        $('input.chcktbl').each(function () {
            if (totalr != $('#detailTable >tbody >tr').length - 1) {
                totalr++;
                var flg = $('input.delFlg', $(this).parent().parent()).val();
                if (flg != 1) {
                    var productId = $('input.productId', $(this).parent().parent()).val().replace(/,/gi, "");
                    var quantity = $('input.quantity', $(this).parent().parent()).val().replace(/,/gi, "");
                    if ((quantity == null || quantity == '' || quantity == 0)) {
                        rval = 0;
                    }
                    if (showFlg == 1) {

                        var price = $('input.price', $(this).parent().parent()).val().replace(/,/gi, "");

                        if ((price == null || price == '' || price == 0)) {
                            pval = 0;
                        }
                    }
                    if ((productId == null || productId == '' || productId == 0)) {
                        ppval = 0;
                    }
                    row++;
                }
            }
        });

        if (ppval == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Có ít nhất 1 dòng chưa nhập tên sản phẩm, hoặc sản phẩm không có trong danh mục sản phẩm. Vui lòng kiểm tra lại.";
        }

        if (pval == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Có ít nhất 1 mặt hàng với giá nhập là 0, hoặc không được nhập đơn giá. Vui lòng kiểm tra lại.";
        }

        if (row == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Hóa đơn  không có mặt hàng nào. Vui lòng kiểm tra lại.";
        }
        else if (rval == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Có ít nhất 1 mặt hàng với số lượng nhập là 0, hoặc không được nhập số lượng nhập. Vui lòng kiểm tra lại.";
        }
        if (errorMessage != '') {
            $('#message').append(errorMessage);
            $('#message').append("<hr class='mydashed'/>");
            return false;
        }
        else {
            $('#formContent').submit();
        }
    };

    function returnSubmit() {
        $('#message').empty();
        $('#InforMessage').empty();
        var row = 0;
        var rval = 1;
        var pval = 1;
        var ppval = 1;
        var checkFlg = 0;
        var showFlg = $("#showFlg").val();
        var errorMessage = '';
        if ($("#NgayBan").val() == null || $("#NgayBan").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Chưa nhập ngày bán hàng. Vui lòng chọn ngày bán hàng.";
        }
        if ($("#TenKhachHang").val() == null || $("#TenKhachHang").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Vui lòng nhập tên khách hàng.";
        }
        
        if ($("#NgayGiao").val() == null || $("#NgayGiao").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Chưa nhập ngày giao hàng. Vui lòng chọn ngày giao hàng.";
        }
        /*if ($("#DienThoai").val() == null || $("#DienThoai").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Vui lòng nhập điện thoại để liên lạc.";
        }
        if ($("#DiaChi").val() == null || $("#DiaChi").val().trim() == "") {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Vui lòng nhập địa chỉ giao hàng.";
        }*/
        var totalr = 0;
        $("#printFlg").val(0);
        $('input.chcktbl').each(function () {
            if (totalr != $('#detailTable >tbody >tr').length - 1) {                
                totalr ++;
                var flg = $('input.delFlg', $(this).parent().parent()).val();
                if (flg != 1) {
                    var productId = $('input.productId', $(this).parent().parent()).val().replace(/,/gi, "");
                    var quantity = $('input.quantity', $(this).parent().parent()).val().replace(/,/gi, "");
                    if ((quantity == null || quantity == '' || quantity == 0)) {
                        rval = 0;
                    }
                    if (showFlg == 1) {

                        var price = $('input.price', $(this).parent().parent()).val().replace(/,/gi, "");

                        if ((price == null || price == '' || price == 0)) {
                            pval = 0;
                        }
                    }
                    if ((productId == null || productId == '' || productId == 0)) {
                        ppval = 0;
                    }
                    row++;
                }
            }
        });

        if (ppval == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Có ít nhất 1 dòng chưa nhập tên sản phẩm, hoặc sản phẩm không có trong danh mục sản phẩm. Vui lòng kiểm tra lại.";
        }

        if (pval == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Có ít nhất 1 mặt hàng với giá nhập là 0, hoặc không được nhập đơn giá. Vui lòng kiểm tra lại.";
        }

        if (row == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Hóa đơn  không có mặt hàng nào. Vui lòng kiểm tra lại.";
        }
        else if (rval == 0) {
            if (errorMessage != '') {
                errorMessage += "<br>";
            }
            errorMessage += "Có ít nhất 1 mặt hàng với số lượng nhập là 0, hoặc không được nhập số lượng nhập. Vui lòng kiểm tra lại.";
        }
        if (errorMessage != '') {
            $('#message').append(errorMessage);
            $('#message').append("<hr class='mydashed'/>");
            return false;
        }
        else {
            $('#formContent').submit();
        }
    };
    </script>
}
<!--message area start-->

<hr class="mydashed" />
<div id="message" style="color:red; font-family:'Times New Roman'; font-size:16px;">
    @if (!string.IsNullOrEmpty(Model.Message))
{
    @Model.Message
    <hr class="mydashed" />
}
</div>
<div id="InforMessage" style="color:blue; font-family:'Times New Roman'; font-size:16px;">
    @if (!string.IsNullOrEmpty(Model.InforMessage))
    {
        @Model.InforMessage
        <hr class="mydashed" />
    }
</div>
<!--message area end-->

<!--Hidden field use for mode UPDATE-->
@{
    var myStore = Convert.ToInt32(Session["MyStore"]);
}
<input type="hidden" id="myStore" value="@myStore" />

<fieldset>
    @using (Ajax.BeginForm("AddNew", "BanHang", new { MaHoaDon = ViewBag.MaHoaDon },
     null, new { @id = "formContent" })
     )
    {
        <!--customer & user area-->
        <div id="customerArea">
            <table id="tableCustomer" class="tableSearch tableBasic">
                <tr>
                    <td>
                        <div class="titleItem required">Tên khách hàng </div>
                        <br />
                        <div>
                           @Html.HiddenFor(u => u.KH_Info.Ma_KH, new { @id = "MaKhachHang"})
                             @Html.TextBoxFor(u => u.KH_Info.Ten_KH, new { @name="TenKhachHang" ,@id="TenKhachHang", @style="margin-left: 2px;", @class="marginTopMinus10", @onkeypress="return disableEnterKey(event);" })
                            @*<input type="hidden" name="MaKhachHang" id="MaKhachHang" />*@
                            <input type="hidden" name="UserId" value="@ViewBag.UserId" />
                            <input type="hidden" id="MyStore" value="@ViewBag.MyStore" />
                            <input type="hidden" id="kindCustomer" />
                            
                        </div>

                    </td>
                    <td>
                        <div>
                            <span class="required" style="font-size:16px;">Loại nghiệp vụ  </span>
                            <br />

                            <div>
                                <select id="typeCustomers" class="ComboboxCustomer" onchange="changeTypeCustomer();">
                                    <option value="3"> L3 - 03 </option>
                                    <option value="2"> L2 - 02 </option>
                                    <option value="1"> L1 - 01 </option>
                                </select>

                            </div>

                        </div>
                    </td>
                    <td>
                        <div class="titleItem required">Ngày bán</div>
                        <br />
                        <div>
                            @Html.TextBoxFor(u => u.KH_Info.Ngay_Ban, "{0:dd/MM/yyyy}", new { @name = "NgayBan", @id = "NgayBan", @class = "alignCenter datePicker marginTopMinus10" })

                        </div>
                    </td>
                    <td colspan="2">
                        <div class="titleItem required">Ngày giao hàng</div>
                        <br />
                        <div>
                            @Html.TextBoxFor(u => u.KH_Info.Ngay_Giao, "{0:dd/MM/yyyy}", new { @name = "NgayGiao", @id = "NgayGiao", @class = " alignCenter datePicker marginTopMinus10" })
                        </div>
                    </td>
                </tr>
               
                <tr>
                    <td>
                        <div class="titleItem ">Điện thoại</div>
                        <br />
                        <div>
                            @Html.TextBoxFor(u => u.KH_Info.Dien_Thoai, new { @name = "DienThoai", @id = "DienThoai", @class = "numberfone alignNumberic marginTopMinus10" })

                        </div>
                    </td>
                    <td colspan="2">
                        <div class="titleItem ">Địa chỉ giao hàng</div>
                        <br />
                        <div>
                            @Html.TextBoxFor(u => u.KH_Info.Dia_Chi, new { @name = "DiaChi", @id = "DiaChi", @class = "alignText marginTopMinus10", @style = "width:476px !important;" })
                
                        </div>
                    </td>
                    <td></td>
                </tr>
            </table>
            <!--input information product-->
            <div>
                <hr class="mydashed" />
                
            </div>

            <!--Informatio Panel support s-->
            <!--relationCustomer-->
            <div id="relationCustomer" >
                <div>
                    <span><strong>- Mã khách hàng : </strong> </span><span id="S_MaKhachHang"></span>
                    <br />
                    <span><strong>- Tên khách hàng : </strong> </span><span id="S_TenKhachHang"></span>
                    <br />
                    <span><strong>- Mã thẻ : </strong> </span><span id="S_MaTheKhachHang"></span>
                    <br />
                    <span><strong>- Địa chỉ : </strong> </span><span id="S_DiaChi"></span>
                    <br />
                    <span><strong>- Số điện thoại : </strong> </span><span id="S_SoDienThoai"></span>
                    <br />
                    <span><strong>- Email : </strong> </span><span id="S_Email"></span>
                </div>
            </div>
            <!--relationProduct-->
            <div id="relationProduct" style="top: 319px; left: 565px; ">
                <div id="toolTipRelationProduct">
                    <span><strong>- Mã sản phẩm : </strong> </span><span id="S_MaSanPham"></span>
                    <br />
                    <span><strong>- Tên sản phẩm : </strong> </span><span id="S_TenSanPham"></span>
                    <br />
                    <span><strong>- Giá bán : </strong> </span><span id="S_GiaBan"></span>
                    <br />
                    <span><strong>- Chiết khấu(%) : </strong> </span><span id="S_ChietKhau"></span>
                    <br />
                    <span><strong>- Giá sau chiết khấu : </strong> </span><span id="S_GiaThuc"></span>
                    <br />
                    <span><strong>- Số lượng: </strong> </span>
                    @{
        int j = 0;
        foreach (var Kho in Model.Store)
        {
            j++;
            if (j <= 5)
            {
                switch (j)
                {
                    case 1:
                        <br />
                        <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_1"> </span>
                        break;
                    case 2:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_2">  </span>
                        break;
                    case 3:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_3"> </span>
                        break;
                    case 4:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_4">  </span>
                        break;
                    case 5:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_5">  </span>
                        break;
                }
            }
        }
                    }

                </div>
            </div>
            <!--Informatio Panel support e-->
            <!--hidden field start-->
            <div id="dialogConfirm"></div>
            <input type="hidden" id="hidFactorValue" value="1" />

            <input type="hidden" id="hidFactorValueSuggestUnit" value="" />
            <input type="hidden" id="hidCount1Row" value="0" />

            <input type="hidden" id="hidTotalRowAdded" value="0" />
            <input type="hidden" name="hidTotalAllMoney" id="hidTotalAllMoney" value="0" />
            <input type="hidden" id="ListRowNum" name="ListRowNum" value="" />
            <input type="hidden" id="hidUnitRootName" value="">
            <input type="radio" id="hidRadioEdit" style=" display:none" name="groupBill" />
            <!--hidden field end-->

        </div>

        <!--list content area-->
        <input type="hidden" id="rowIndex" value="0" />
        
        <div>
            <input type="button"id="btnSave_Top" value="Lưu" style="width:250px;" onclick="return returnSubmit()" />
            <input type="button" id="savePrintBill_bottom" style="width: 250px" onclick="return returnPrintSubmit()" value="Lưu & In hóa đơn ">
            <input type="button" value="Xóa" style="width:200px" onclick="deleteCheckedRow()" />
            <table id="detailTable" name="detailTable" width="100%" class="contentTable">
                <thead>
                    <tr class="inner column-hscroll alignCenter">
                        <td class='inner colwidth head ' style="width:1%;"> <input type="checkbox" id="chckHead" /> </td>
                        <td class='inner colwidth head ' style="width:8%;"> CODE </td>
                        <td class='inner colwidth head ' style="width:18%;"> Sản phẩm </td>
                        <td class='inner colwidth head ' style="width:7%;"> Số lượng </td>
                        <td class='innerLast colwidth head ' style="width:8%;"> Đơn vị </td>
                        <td class='inner colwidth head ' style="width:8%;"> Đơn giá </td>
                        <td class='inner colwidth head ' style="width:15%;"> Thành tiền </td>
                        <td class='inner colwidth head ' style="width:4%;"> (%) </td>
                        <td class='inner colwidth head ' style="width:15%;"> Thực trả</td>
                        <td class='innerLast colwidth head ' style="width:3%;"> Kho</td>
                    </tr>
                </thead>
                <tbody>
                   @{
        if (Model.lstChiTietHoaDon == null || Model.lstChiTietHoaDon.Count == 0)
        {
            <tr>
                        <td class='inner alignCenter colwidth' width="5%;">
                            <input type="checkbox" class="chcktbl">
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Code_SP, new { @class = "code codebtl" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[0].Ma_SP, new { @class = "productId " })
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[0].DEL_FLG, new { @class = "delFlg" })
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[0].HE_SO, new { @class = "convertor" })
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Ten_SP, new { @class = "productName" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].So_Luong, new { @class = "quantity numberic", @maxlength = "7" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.DropDownListFor(u => u.lstChiTietHoaDon[0].Ma_Don_Vi, new SelectList(@Model.Units, "MA_DON_VI", "TEN_DON_VI"), "---------", new { style = "padding:5px;font-size:1.2em", @class = "unit " })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Gia_Ban, new { @class = "price numberic", @maxlength = "9", @readOnly = true })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Thanh_Tien, new { @class = "total numberic", @readOnly = true, @disabled = "disabled" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Phan_Tram_CK, new { @class = "discount numberic", @maxlength = "4", @readOnly = true })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Gia_Thuc, new { @class = "realTotal numberic", @readOnly = true, @disabled = "disabled" })
                        </td>
                        <td class='innerLast colwidth '>
                            @Html.DropDownListFor(u => u.lstChiTietHoaDon[0].Ma_Kho_Xuat, new SelectList(@Model.Store, "MA_KHO", "TEN_KHO"), "---------", new { style = "padding:5px;font-size:1.2em; width:100px;", @class = "store " })
                        </td>
                    </tr>
        }
        else
        {
            int i =0;
            foreach (var detail in Model.lstChiTietHoaDon)
            {
                if (detail.DEL_FLG != 1) { 
                 <tr>
                        <td class='inner alignCenter colwidth' width="5%;">
                            <input type="checkbox" class="chcktbl">
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[i].Code_SP, new { @class = "code codebtl" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[i].Ma_SP, new { @class = "productId " })
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[i].DEL_FLG, new { @class = "delFlg" })
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[i].HE_SO, new { @class = "convertor" })
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[i].Ten_SP, new { @class = "productName" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[i].So_Luong, new { @class = "quantity numberic", @maxlength = "7" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.DropDownListFor(u => u.lstChiTietHoaDon[i].Ma_Don_Vi, new SelectList(@Model.Units, "MA_DON_VI", "TEN_DON_VI"), "---------", new { style = "padding:5px;font-size:1.2em", @class = "unit " })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[i].Gia_Ban, new { @class = "price numberic", @maxlength = "9", @readOnly = true })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[i].Thanh_Tien, new { @class = "total numberic", @readOnly = true, @disabled = "disabled" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[i].Phan_Tram_CK, new { @class = "discount numberic", @readOnly = true })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[i].Gia_Thuc, new { @class = "realTotal numberic", @readOnly = true, @disabled = "disabled"  })
                        </td>
                        <td class='innerLast colwidth '>
                            @Html.DropDownListFor(u => u.lstChiTietHoaDon[i].Ma_Kho_Xuat, new SelectList(@Model.Store, "MA_KHO", "TEN_KHO"), "---------", new { style = "padding:5px;font-size:1.2em; width:100px;", @class = "store " })
                        </td>
                    </tr>
                    i++;
                   }
                
            }
        }
                   }
                    

                </tbody>
                <tfoot>
                    <tr>
                        <td class='innerLast alignCenter colwidth ' style="background-color:lightgray" colspan="9"></td>
                        <td class='innerLast alignCenter colwidth ' style="background-color:lightgray">
                            <input type="button" value="Thêm dòng" onclick="addRow()" />
                        </td>
                    </tr>
                </tfoot>
            </table>
            
            <table style="width:100%">
                <tr>
                    <td class="innerLast alignCenter colwidth head">Tổng số mặc hàng</td>
                    <td class="innerLast alignCenter colwidth"><input type="text" class="numberic" disabled ="disabled" id="numberOfProduct" /></td>
                    <td class="innerLast alignCenter colwidth head">Tổng giá trị hóa đơn</td>
                    <td class="innerLast alignCenter colwidth"><input type="text" class="numberic" disabled="disabled" id="totalOfInvoice" /></td>
                </tr>
                <tr>
                    <td class="innerLast alignCenter colwidth head">Chiếc khấu</td>
                    <td class="innerLast alignCenter colwidth"><input type="text" class="numberic" disabled="disabled" id="totalDiscount" /></td>
                    <td class="innerLast alignCenter colwidth head">Số tiền khách phải trả</td>
                    <td class="innerLast alignCenter colwidth">
                    <input type="text" class="numberic" disabled="disabled" id="paymentTotal" style="font-size:20px; color:red; background-color:lightblue"/></td>
                </tr>
            </table>
            @Html.HiddenFor(u => u.printFlg, new { @id = "printFlg" })
            <input type="button" id="btnSave_Bottom" value="Lưu" style="width:250px;" onclick="return returnSubmit()" />
            <input type="button" id="savePrintBill_bottom" style="width: 250px" onclick="return returnPrintSubmit()"  value="Lưu & In hóa đơn ">
            <input type="button" value="Xóa" style="width:200px" onclick="deleteCheckedRow()" />

            <div class="mainContentScroll">
                <table id="tableContent" class="tableContentScroll">
                    <tbody>
                        <!--danh sach sp add vao day.-->
                    </tbody>
                </table>
            </div>


        </div>

   
        
    <!--total money-->
    <div style="display:none">
        <div id="divTotal">
            <table cellpadding="0" cellspacing="0" class="tableTotal">
                <tr>
                    <td class="colTitleTotal">
                        <div>Tổng tiền hóa đơn : </div>
                    </td>
                    <td class="colTotalValue">
                        <div id="totalAll"> 0 </div>
                    </td>
                </tr>

            </table>
        </div>
        <hr />
        <div style="float: right; margin-right: -8px;">
            @*<input type="button" id="exportExcel" style="width:100px" value="Xuất Excel" onclick="exportExcel();" />*@
            <input type="submit" id="saveBill_bottom" style="width: 120px" value="Lưu hóa đơn">
            <input type="submit" id="savePrintBill_bottom" style="width: 120px" value="Lưu & In hóa đơn ">
            <input type="button" id="createNewBill_bottom" style="width: 100px" value="Tạo mới">
            <input type="button" id="back_bottom" style="width:100px" value="Trở về">
            <input type="button" id="hidBtnBack" style="display:none;" onclick="location.href='@Url.Action("BanHang", "Home")'">
        </div>
    </div>


    
    
    
    }




    
</fieldset>
