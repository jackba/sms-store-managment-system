@model SMS.Models.HoaDonBanHang
@{
    if (0 < ViewBag.MaHoaDon)
    {
        ViewBag.Title = "Chỉnh sửa hóa đơn bán hàng";
    }
    else
    {
        ViewBag.Title = "Lập hóa đơn bán hàng";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/HoaDonBanHang.css" rel="stylesheet" />
<link href="~/Content/css/style.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Import.css" rel="stylesheet" type="text/css" />
@*<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>*@
<h2>@ViewBag.Title</h2>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    <link href="../../Content/css/sunny/jquery-ui-1.10.3.custom.css" rel="stylesheet" type="text/css" />
    <script src="../../Content/js/jquery-1.9.1.js" type="text/javascript"></script>
    <script src="../../Content/js/jquery-ui-1.10.3.custom.js" type="text/javascript"></script>

    <script>
    var unitRootName = null;
    var rowNumCurrent = null;
    // ONLOAD WINDOW
    $(document).ready(function () {

        //show calendar

        $('.datePicker').datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0"
        });

        $('#TenKhachHang').focus();

        // hide
        hideRelationProduct();
        hideRelationCustomer();

        $('#NgayBan').datepicker('setDate', 'today');
        $('#NgayGiao').datepicker('setDate', 'today + 3');
     

        //initial combobox store
        //$('#typeStore').html(createStore());
        //$('#typeStore').val($('#MyStore').val());
        /*disabled export excel*/
        setDisableControl('saveBill_top', true);
        setDisableControl('saveBill_bottom', true);

        /**AUTOCOMPLETE**/
        // Customer name
        $("#TenKhachHang").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/KhachHang/FindDetailCustomer", data: "{ 'prefixText': '" + request.term + "' }",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    lable: item.name,
                                    value: item.name,
                                    id: item.id,
                                    cardNo: item.cardNo,
                                    address: item.address,
                                    fone: item.fone,
                                    email: item.mail,
                                    kind : item.kind
                                }
                            }))
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                $('#kindCustomer').val('3');
                $('#MaKhachHang').val('');
            },
            select: function (event, ui) {
                $('#kindCustomer').val(ui.item.kind);
                $("#typeCustomers").val(ui.item.kind);

                setRelationCustomer(ui.item, true);
                hideRelationCustomer();

                return false;
            },
            focus: function (event, ui) {
                setRelationCustomer(ui.item);

                showRelationCustomer();
            },
            close: function () {
                hideRelationCustomer();
            },
            minLength: 1

        })
        // Code product
        $("#CodeSanPham").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/SanPham/FindSuggestByCode", data: "{ 'prefixText': '" + request.term + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    lable: item.code,
                                    value: item.code,
                                    id: item.id,
                                    price: item.price,
                                    discount: item.discount,
                                    unit: item.unit,
                                    unitNm: item.unitNm,
                                    name : item.name
                                }
                            }))
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                setEmptyFixedField(true);
            },
            select: function (event, ui) {
                setFixedField(ui.item, true);

                hideRelationProduct();
                createDonViTinh();

                $('#hidUnitRootName').val(ui.item.unitNm);

                $('#hidFactorValue').val('1');
                return false;
            },
            focus: function (event, ui) {

                setRelationProduct(ui.item ,true);
                setStoreInformation(ui.item);
                showRelationProduct('ui-id-2');
                $('#hidFactorValue').val('1');
            },
            close: function () {
                hideRelationProduct();
            },
            minLength: 1

        }).keyup(function (e) {
            if (e.which === 13 || e.which === 27) {
                $(".ui-menu-item").hide();
                hideRelationProduct();
            }
        });;
        // Product name
        $("#TenSanPham").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/SanPham/FindSuggestByTypeCustomer", data: "{ 'prefixText': '" + request.term + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    lable : item.name,
                                    value: item.name,
                                    id: item.id,
                                    price: item.price,
                                    discount: item.discount,
                                    unit: item.unit,
                                    unitNm: item.unitNm,
                                    code: item.code
                                }
                            }))
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                setEmptyFixedField(false);
            },
            select: function (event, ui) {
                setFixedField(ui.item , false);

                hideRelationProduct();
                createDonViTinh();

                $('#hidUnitRootName').val(ui.item.unitNm);

                $('#hidFactorValue').val('1');
                return false;
            },
            focus: function (event, ui) {

                setRelationProduct(ui.item);
                setStoreInformation(ui.item);
                showRelationProduct('ui-id-3');
                $('#hidFactorValue').val('1');
            },
            close: function () {
                hideRelationProduct();
            },
            minLength: 1

        }).keyup(function (e) {
            if (e.which === 13 || e.which === 27) {
                $(".ui-menu-item").hide();
                hideRelationProduct();
            }
        });;

        //format numberic start
        formatNumberic();
        $('input.numberic').keypress(function (key) {
            var keycode = (key.which) ? key.which : key.keyCode;
            //comparing pressed keycodes

            if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                //alert(" Hãy nhập ký tự số.");
                return false;
            }
            else return true;

        });
        $('input.numberic').keyup(function (event) {
            // skip for arrow keys
            if (event.which >= 37 && event.which <= 40) {
                //event.preventDefault();
                return true;
            }
            FormatNumberic_KeyUp($(this));

        });
        $('input.numberic').bind("paste", function (e) {
            e.preventDefault();
        });
        //format numberic end
        //MODE UPDATE
       
    });

    // FUNCTION EXECUTE
    function createRowModeUpdate(rowChiTiet){
        var CodeSP = rowChiTiet.Code_SP;
        var MaSP = rowChiTiet.Ma_SP;
        var TenSP = rowChiTiet.Ten_SP;
        var GiaBan = rowChiTiet.Gia_Ban;
        var ChietKhau = rowChiTiet.Phan_Tram_CK;
        var GiaThuc = rowChiTiet.Gia_Thuc;
        var SoLuong = rowChiTiet.So_Luong;
        var MaKhoXuat = rowChiTiet.Ma_Kho_Xuat;
        var TenKhoXuat= rowChiTiet.Ten_Kho_Xuat;
        var MaDonVi = rowChiTiet.Ma_Don_Vi;
        var TenDonVi = rowChiTiet.Ten_Don_Vi;



        var count = $('#tableContent tr').length;
        var rowNum = MaSP + '_' + count;




        var newRow = '';
        newRow += ' <tr class="rowHeight" id=\'' + rowNum + '\'> ';
        newRow += '<td style="width:48px;"> ';
        newRow += '  <div class="colDelete">';
        newRow += '  <img src="/Content/images/delete-20.png" style="cursor: pointer;" onclick="deleteRow(\'' + rowNum + '\');">';
        //newRow += '   </div>';
        //newRow += '  <div>';
        newRow += '  <input type="radio" id="Radio_' + rowNum + '" style=" width: 20px!important;" name="groupBill" onchange="updateInputFields(\'' + rowNum + '\');"> ';
        newRow += '   </div>';
        newRow += '  ';
        newRow += ' </td> ';
        newRow += ' <td  class="colProductNm textLeft"> ';
        newRow += ' <div  class="colProductNm tooltip truncate">';
        newRow += TenSP;
        newRow += '  <span>' + TenSP + '</span>';
        newRow += '  <input name="' + MaSP + '" type="hidden" value="' + MaSP + '" />';
        newRow += '  <input name="CodeSanPham_' + rowNum + '" type="hidden" value="' + CodeSP + '" />';
        newRow += '  <input name="MaSanPham_' + rowNum + '" type="hidden" value="' + MaSP + '" />';
        newRow += '  <input name="TenSanPham_' + rowNum + '" type="hidden" value="' + TenSP + '" />';
        newRow += '   </div>';
        newRow += ' </td> ';
        newRow += ' <td class="colStore textLeft"> ';
        newRow +=  TenKhoXuat
        newRow += '  <input name="MaKho_' + rowNum + '" type="hidden" value="' + MaKhoXuat + '" />';
        newRow += ' </td> ';
        newRow += '  <td  class="colPrice textRight"> ';
        newRow += ' <div  class="colPrice tooltip truncate">';
        newRow += GiaThuc ;
        newRow += '  <input name="GiaBan_' + rowNum + '" type="hidden" value="' + GiaBan + '" />';
        newRow += '  <input name="ChietKhau_' + rowNum + '" type="hidden" value="' + ChietKhau + '" />';
        newRow += '  <input name="GiaThuc_' + rowNum + '" type="hidden" value="' + GiaThuc + '" />';
        newRow += '  <span> Đây là giá sau khi đã được chiết khấu.<br/> + Chiết khấu : ' + ChietKhau + '%.<br/> + Giá gốc : ' + GiaBan + '.</span>';
        newRow += '   </div>';
        newRow += ' </td>  ';

        CalcTotalMoney1RowRenderModeUpdate(SoLuong,GiaThuc);

        newRow += '  <td class="colAmount textRight"> ';
        newRow += $('#hidCount1Row').val();
        newRow += '  <input name="SoLuong_' + rowNum + '" type="hidden" value="' + $('#hidCount1Row').val() + '" />';
        newRow += ' </td> ';

        newRow += '  <td class="colUnit textCenter"> ';
        newRow += TenDonVi;
        newRow += '  <input name="UnitRoot_' + rowNum + '" type="hidden" value="' + TenDonVi + '" />';
        newRow += '  <input name="MaDonViTinh_' + rowNum + '" type="hidden" value="' + MaDonVi + '" />';
        newRow += ' </td> ';

        newRow += '  <td class="colTotal textRight"> ';
        newRow += $('#hidTotalRowAdded').val()
        newRow += '  <input name="ThanhTien_' + rowNum + '" type="hidden" value="' + $('#hidTotalRowAdded').val() + '" />';
        newRow += ' </td> ';
        newRow += '  </tr> ';
        $('#tableContent').prepend(newRow);
    }


    function btnSaveClick() {
        var msgErr = checkInputFields(true);
        if ('' == msgErr) {
            saveListRowNum();
            return true;
        } else {
            showMsgErr(msgErr, true);
            return false;
        }
    }
    function setDisableControl(idControl, isDisable) {
        var control = $('#' + idControl);
        if (control != null) {
            if (isDisable == true) {
                control.attr("disabled", "disabled");
                control.css("background-color", "#ECECEC");
            } else {
                control.removeAttr("disabled", "disabled");
                control.css("background-color", "");
            }
        }
    }
    function hideRelationProduct(){
        // hide relation product
        $('#relationProduct').removeClass('relationProductShow');
        $('#relationProduct').addClass('HideElement');

    }
    function showRelationProduct(idControlAjax) {

        // show relation product
        $('#relationProduct').removeClass('HideElement');
        $('#relationProduct').addClass('relationProductShow');

        var width = $('#' + idControlAjax).width();
        var offset = $('#'+ idControlAjax).offset();
        offset.left = offset.left + width + 10;
        $('#relationProduct').offset({ top: offset.top, left: offset.left })
    }
    function hideRelationCustomer() {
        // hide relation customer
        $('#relationCustomer').removeClass('relationCustomerShow');
        $('#relationCustomer').addClass('HideElement');
    }
    function showRelationCustomer() {
        // show relation customer
        $('#relationCustomer').removeClass('HideElement');
        $('#relationCustomer').addClass('relationCustomerShow');

        var width = $('#ui-id-1').width();
        var offset = $('#ui-id-1').offset();
        offset.left = offset.left + width + 10;
        $('#relationCustomer').offset({ top: offset.top, left: offset.left })
    }
    function addCommaNumberic(ctrlID, isSpanTag) {
        if (isSpanTag == true) {
            $(ctrlID).html($(ctrlID).html().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        } else {
            $(ctrlID).val($(ctrlID).val().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        }

    }
    function changeTypeCustomer() {
        $('#kindCustomer').val($('#typeCustomers').val());
    }
    function setEmptyFixedField(isCode) {
        //$('#MaSanPham').val('');
        if (isCode == true) {
            $('#TenSanPham').val('');
        } else {
            $('#CodeSanPham').val('');
        }
        $('#GiaBan').val('');
        $('#ChietKhau').val('');
        $('#GiaThuc').val('');
        $('#typeDonViTinh').empty();
        $('#hidUnitRootName').val('');
    }
    function setFixedField(item , isCode) {
        CalcRealPrice(item.price, item.discount);
        addCommaNumberic('#GiaThuc');
        $('#MaSanPham').val(item.id);

        if (isCode == true) {
            $('#CodeSanPham').val(item.label);
            $('#TenSanPham').val(item.name);
        } else {
            $('#CodeSanPham').val(item.code);
            $('#TenSanPham').val(item.label);
        }

        $('#GiaBan').val(item.price);
        addCommaNumberic('#GiaBan');
        $('#ChietKhau').val(item.discount);
        addCommaNumberic('#ChietKhau');
    }
    function setRelationProduct(item /*, isSelected*/ , isCode) {
        $('#S_MaSanPham').html(item.id);
        if (isCode == true) {
            $('#S_TenSanPham').html(item.name);
        } else {
            $('#S_TenSanPham').html(item.label);
        }

        //if (isSelected == true) {
        //    setFixedField(item);
        //    $('#S_GiaBan').html($('#GiaBan').val());
        //    $('#S_ChietKhau').html($('#ChietKhau').val());
        //    $('#S_GiaThuc').html($('#GiaThuc').val());
        //} else {
        $('#S_GiaBan').html(item.price);
        addCommaNumberic('#S_GiaBan', true);
        $('#S_ChietKhau').html(item.discount);
        addCommaNumberic('#GiaBan',true);
        var priceReal = CalcRealPrice(item.price, item.discount, true);
        $('#S_GiaThuc').html(priceReal);
        addCommaNumberic('#S_GiaThuc', true);
        //}
    }
    function setRelationCustomer(item, isSelected) {

        $('#S_MaKhachHang').html(item.id);
        $('#S_TenKhachHang').html(item.label);
        $('#S_MaTheKhachHang').html(item.cardNo);
        $('#S_DiaChi').html(item.address);
        $('#S_SoDienThoai').html(item.fone);
        $('#S_Email').html(item.email);
        if (isSelected == true) {
            $('#MaKhachHang').val(item.id);
            $('#TenKhachHang').val(item.label);
            $('#DiaChi').val(item.address);
        }

    }

    function setStoreInformation(item) {
        var result = '';
        $.ajax({
            url: "/BanHang/CheckingProductInAllStore",
            data: "{'maSP' : '" + item.id + "'}",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    $.each(data, function (i, itm) {
                        $('#store_1').html(itm.TON_KHO_1);
                        $('#store_2').html(itm.TON_KHO_2);
                        $('#store_3').html(itm.TON_KHO_3);
                        $('#store_4').html(itm.TON_KHO_4);
                        $('#store_5').html(itm.TON_KHO_5);
                    });
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }

    function createDonViTinh() {
        var result = '';
        $.ajax({
            url: "/BanHang/FindDonViTinhByMaSP",
            data: "{'maSP' : '" + $('#MaSanPham').val() + "'}",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    $('#typeDonViTinh').empty();
                    $.each(data, function (i, item) {
                        var opt = "<option value=" + item.MA_DON_VI + ">" + item.TEN_DON_VI + "</option>"
                        $(opt).appendTo('#typeDonViTinh');
                    });
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }
    function createStore() {
        var result = '';
        $.ajax({
            url: "/BanHang/FindStore",
            //data: "{ 'prefixText': '" + request.term + "' , 'typeCustomer' : '" + $("input[type='radio']:checked").val() + "'}",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    $.each(data,function(i,item)
                    {
                        var opt = '';
                        if (item.value == parseInt($('#MyStore').val())) {
                            opt = "<option value=" + item.value + " selected>" + item.name + "</option>"
                        }else {
                            opt = "<option value=" + item.value + ">" + item.name + "</option>"
                        }

                        $(opt).appendTo('#typeStore');
                    });
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }
    function confirmBack() {
        var title = "Xác nhận";
        var content = "Quá trình trở về có thể làm mất dữ liệu bạn đang thao tác. <br\> Bạn muốn tiếp tục hay không?";
        if ($("table.tableContentScroll tr").length == 0) {
            $('#hidBtnBack').click();
        } else {
            fnOpenConfirmDialog(title, content,1);
        }
    }
    function fnOpenConfirmDialog(title, content, action) {
        $("#dialogConfirm").html(content);
        $("#dialogConfirm").dialog({
            resizable: false,
            modal: true,
            title: title,
            height: 200,
            width: 550,
            buttons: {
                "Đồng ý": function () {
                    $(this).dialog('close');
                    switch(action) {
                        case 1:
                            $('#hidBtnBack').click();
                            break;
                        case 2:
                            reset();
                            $('#TenKhachHang').focus();
                            break;
                    }

                },
                "Không": function () {
                    $(this).dialog('close');
                }
            }
        });
    }
    function fnOpenNormalDialog(title, content, action) {
        if ($("table.tableContentScroll tr").length == 0) {
            return;
        }

        $("#dialogConfirm").html(content);
        switch(action)
        {
            case 1:  // change type customer
                $("#dialogConfirm").dialog({
                    resizable: false,
                    modal: true,
                    title: title,
                    height: 200,
                    width: 550,
                    buttons: {
                        "Đồng ý": function () {
                            $(this).dialog('close');
                            callback(true);
                        },
                        "Không": function () {
                            $(this).dialog('close');
                            callback(false);
                        }
                    }
                });
                break;
            case 2: // duplicate product item
                $("#dialogConfirm").dialog({
                    resizable: false,
                    modal: true,
                    title: title,
                    height: 200,
                    width: 550,
                    buttons: {
                        "Đóng": function () {
                            $(this).dialog('close');
                            $('#tableSearch #TenSanPham').select();
                        }
                    }
                });
                break
            default:
                break;
        }
    }
    function callback(valueReturn) {
        if (valueReturn) {
            $("table.tableContentScroll tr").remove();
            setDisableControl('saveBill_top', true);
            setDisableControl('saveBill_bottom', true);
        } else {
            $('input:radio[value="' + $('#currTypeCustomer').val() + '"]').prop('checked', true);
        }
    }
    function addRecord() {

        $('#contentMsgErr').empty();
        $('#divErr').hide();
        var msgErr = checkInputFields(false);
        if ('' == msgErr) {
            if ($('#tableContent input:hidden[name="' + $('#tableSearch #MaSanPham').val() + '"]').length > 0) {
                var title = "Thông tin"
                var content = "Đã tồn tại sản phẩm này trong danh sách bên dưới.<br/> Hãy kiểm tra lại danh sách bên dưới hoặc thêm sản phẩm khác ";
                var action = 2;
                $('#addRecord').click(fnOpenNormalDialog(title, content, action));
            } else {
                prependNewRowToTable();
                clearInputSP();
                setDisableControl('saveBill_top', false);
                setDisableControl('saveBill_bottom', false);

                CalcTotalAllMoney($('#hidTotalRowAdded').val(), true);

                $('#hidUnitRootName').val('');
                $('#suggestUnit').html('');
                $('#suggestUnit').hide();
                $('#CodeSanPham').focus();
            }
        } else {
            showMsgErr(msgErr,true);
        }

    }
    function CalcTotalAllMoney(totalRow, isPlus) {
        var result = 0;
        totalRow = parseFloat(removeCommas(totalRow));
        var totalAll = parseFloat(removeCommas($('#hidTotalAllMoney').val()));
        if (isPlus) {
            result = totalAll + totalRow;
        } else {
            result = totalAll - totalRow;
        }
        result = roundToTwo(result);
        $('#hidTotalAllMoney').val(result);
        addCommaNumberic('#hidTotalAllMoney');
        $('#totalAll').html($('#hidTotalAllMoney').val());
    }
    function checkInputFields(isSubmit) {
        var msgErr = '';
        var empty = '';
        if (isSubmit == true) {
            if (empty == $('#TenKhachHang').val()) {
                msgErr += " + Tên khách hàng không tồn tại hoặc chưa nhập. <br/>";
            }
            if (empty == $('#NgayBan').val()) {
                msgErr += " + Ngày bán <br/>";
            }
            if (empty == $('#NgayGiao').val()) {
                msgErr += " + Ngày giao <br/>";
            }
            if (empty != $('#NgayBan').val() && empty != $('#NgayGiao').val()) {
                if (compareDate($('#NgayBan').val(), $('#NgayGiao').val(), 0) > 0) {
                    msgErr += " + Ngày bán hàng lớn hơn ngày giao hàng. <br/>";
                }
            }
            if (empty == $('#DiaChi').val()) {
                msgErr += " + Địa chỉ <br/>";
            }
        } else {
            if (empty == $('#CodeSanPham').val() || empty == $('#MaSanPham').val() || empty == $('#TenSanPham').val()) {
                msgErr += " + Sản phẩm không tồn tại hoặc chưa nhập. <br/>";
            }
            if (empty == $('#GiaBan').val()) {
                msgErr += " + Giá bán. <br/>";
            }
            if (empty == $('#ChietKhau').val()) {
                msgErr += " + Chiết khấu. <br/>";
            }
            if (empty == $('#SoLuong').val() || '0' ==  $('#SoLuong').val()) {
                msgErr += " + Số lượng <br/>";
            }
        }

        return msgErr;
    }
    function showMsgErr(msgErr, isShowTitle) {
        $('#divInfo').empty();
        $('#divInfo').hide();
        $('#contentMsgErr').empty();
        if (isShowTitle == true) {
            $('#titleMsgErr').show();
        } else {
            $('#titleMsgErr').hide();
        }
        $('#contentMsgErr').append(msgErr);
        $('#divErr').show();
    }
    /*compare 2 date : date1 , date2 with n day
    *return 1 : date1 > date2 / 0 : date1 <= date2
    */
    function compareDate(dtFrom, dtTo, day) {
        if (($.datepicker.parseDate('dd/mm/yy', dtFrom) - $.datepicker.parseDate('dd/mm/yy', dtTo)) > day) {
            return 1;
        } else {
            return 0;
        }
    }

    function prependNewRowToTable(unitRootName) {
        var CodeSP = $('#tableSearch #CodeSanPham').val();
        var MaSP = $('#tableSearch #MaSanPham').val();
        var TenSP = $('#tableSearch #TenSanPham').val();
        var ChietKhau = $('#tableSearch #ChietKhau').val();
        var GiaBan = $('#tableSearch #GiaBan').val();
        // avoid duplicate
        var count = $('#tableContent tr').length;
        var rowNum = MaSP + '_' + count;

        CalcTotalMoney1Row();

        var newRow = '';
        newRow += ' <tr class="rowHeight" id=\'' + rowNum + '\'> ';
        newRow += '<td style="width:48px;"> ';
        newRow += '  <div class="colDelete">';
        newRow += '  <img src="/Content/images/delete-20.png" style="cursor: pointer;" onclick="deleteRow(\'' + rowNum + '\');">';
        //newRow += '   </div>';
        //newRow += '  <div>';
        newRow += '  <input type="radio" id="Radio_' + rowNum + '" style=" width: 20px!important;" name="groupBill" onchange="updateInputFields(\'' + rowNum + '\');"> ';
        newRow += '   </div>';
        newRow += '  ';
        newRow += ' </td> ';
        newRow += ' <td  class="colProductNm textLeft"> ';
        newRow += ' <div  class="colProductNm tooltip truncate">';
        newRow += TenSP;
        newRow += '  <span>' + TenSP + '</span>';
        newRow += '  <input name="' + MaSP + '" type="hidden" value="' + MaSP + '" />';
        newRow += '  <input name="CodeSanPham_' + rowNum + '" type="hidden" value="' + CodeSP + '" />';
        newRow += '  <input name="MaSanPham_' + rowNum + '" type="hidden" value="' + MaSP + '" />';
        newRow += '  <input name="TenSanPham_' + rowNum + '" type="hidden" value="' + TenSP + '" />';
        newRow += '   </div>';
        newRow += ' </td> ';
        newRow += ' <td class="colStore textLeft"> ';
        newRow += $('#typeStore :selected').text()
        newRow += '  <input name="MaKho_' + rowNum + '" type="hidden" value="' + $('#typeStore :selected').val() + '" />';
        newRow += ' </td> ';
        newRow += '  <td  class="colPrice textRight"> ';
        newRow += ' <div  class="colPrice tooltip truncate">';
        newRow += $('#tableSearch #GiaThuc').val();
        newRow += '  <input name="GiaBan_' + rowNum + '" type="hidden" value="' + GiaBan + '" />';
        newRow += '  <input name="ChietKhau_' + rowNum + '" type="hidden" value="' + ChietKhau + '" />';
        newRow += '  <input name="GiaThuc_' + rowNum + '" type="hidden" value="' + $('#tableSearch #GiaThuc').val() + '" />';
        newRow += '  <span> Đây là giá sau khi đã được chiết khấu.<br/> + Chiết khấu : ' + ChietKhau + '%.<br/> + Giá gốc : ' + GiaBan + '.</span>';
        newRow += '   </div>';
        newRow += ' </td>  ';

        newRow += '  <td class="colAmount textRight"> ';
        newRow += $('#hidCount1Row').val(); /*$('#tableSearch #SoLuong').val()*/;
        newRow += '  <input name="SoLuong_' + rowNum + '" type="hidden" value="' + $('#hidCount1Row').val()/*$('#tableSearch #SoLuong').val()*/ + '" />';
        newRow += ' </td> ';

        newRow += '  <td class="colUnit textCenter"> ';
        if (unitRootName != null) {
            newRow += unitRootName;
            newRow += '  <input name="UnitRoot_' + rowNum + '" type="hidden" value="' + unitRootName + '" />';
        } else {
            newRow += $('#hidUnitRootName').val(); /*$('#typeDonViTinh :selected').text()*/
            newRow += '  <input name="UnitRoot_' + rowNum + '" type="hidden" value="' + $('#hidUnitRootName').val() + '" />';
        }
        newRow += '  <input name="MaDonViTinh_' + rowNum + '" type="hidden" value="' + $('#typeDonViTinh :selected').val() + '" />';
        newRow += ' </td> ';

        newRow += '  <td class="colTotal textRight"> ';
        newRow += $('#hidTotalRowAdded').val()

        newRow += '  <input name="ThanhTien_' + rowNum + '" type="hidden" value="' + $('#hidTotalRowAdded').val() + '" />';
        newRow += ' </td> ';

        newRow += '  </tr> ';
        $('#tableContent').prepend(newRow);

    }

    function updateInputFields(rowNum) {
        setDisableControl('addRecord', true);
        setDisableControl('updateRecord', false);
        setDisableControl('clearUpdateRecord', false);
        //update field record from grid to input fields.
        $('#CodeSanPham').val($('#tableContent input:hidden[name="CodeSanPham_' + rowNum + '"]').val());
        $('#MaSanPham').val($('#tableContent input:hidden[name="MaSanPham_' + rowNum + '"]').val());
        $('#TenSanPham').val($('#tableContent input:hidden[name="TenSanPham_' + rowNum + '"]').val());
        $('#GiaBan').val($('#tableContent input:hidden[name="GiaBan_' + rowNum + '"]').val());
        $('#ChietKhau').val($('#tableContent input:hidden[name="ChietKhau_' + rowNum + '"]').val());
        $('#GiaThuc').val($('#tableContent input:hidden[name="GiaThuc_' + rowNum + '"]').val());
        createDonViTinh();
        //TODO : check again.
        $('#typeDonViTinh').val($('#tableContent input:hidden[name="MaDonViTinh_' + rowNum + '"]').val());
        unitRootName = $('#tableContent input:hidden[name="UnitRoot_' + rowNum + '"]').val()
        //$('#typeDonViTinh :selected').text()
        $('#SoLuong').val($('#tableContent input:hidden[name="SoLuong_' + rowNum + '"]').val());
        $('#typeStore').val($('#tableContent input:hidden[name="MaKho_' + rowNum + '"]').val());
        // readonly fields key.
        $('#CodeSanPham').attr("readonly", true);
        $('#CodeSanPham').css("background", "rgb(219,219,219)");
        $('#TenSanPham').attr("readonly", true);
        $('#TenSanPham').css("background", "rgb(219,219,219)");

        $('#GiaBan').select();

        rowNumCurrent = rowNum;
    }
    function updateRecord() {
        $('#contentMsgErr').empty();
        $('#divErr').hide();
        var msgErr = checkInputFields(false);
        if ('' == msgErr) {
            // remove old record
            if (rowNumCurrent != null) {
                deleteRow(rowNumCurrent);
            }
            // add again
            prependNewRowToTable(unitRootName);
            clearInputSP();
            setDisableControl('saveBill_top', false);
            setDisableControl('saveBill_bottom', false);

            CalcTotalAllMoney($('#hidTotalRowAdded').val(), true);

            $('#hidUnitRootName').val('');
            $('#suggestUnit').html('');
            $('#suggestUnit').hide();
            $('#CodeSanPham').focus();
            clearUpdateRecord();
            // setTimeout highlight


        } else {
            showMsgErr(msgErr, true);
        }

    }
    function clearUpdateRecord() {
        setDisableControl('addRecord', false);
        setDisableControl('updateRecord', true);
        setDisableControl('clearUpdateRecord', true);

        clearInputSP();
        $('#CodeSanPham').attr("readonly", false);
        $('#CodeSanPham').css("background", "white");
        $('#TenSanPham').attr("readonly", false);
        $('#TenSanPham').css("background", "white");

        $('#hidRadioEdit').click();


        rowNumCurrent = null;
        unitRootName = null;
        $('#CodeSanPham').focus();
    }
    function clearInputSP() {
        $('#CodeSanPham').val('');
        $('#TenSanPham').val('');
        $('#MaSanPham').val('');
        $('#GiaBan').val('');
        $('#ChietKhau').val('');
        $('#GiaThuc').val('');

        $('#typeDonViTinh').empty();
        $('#SoLuong').val('1');
        $('#typeStore option:eq(0)').attr('selected', 'selected');

    }
    function CalcFactorOfProduct() {
        $('#suggestUnit').html('');
        $('#suggestUnit').hide();

        var unitNo = $('#typeDonViTinh :selected').val();
        var productNo = $('#tableSearch #MaSanPham').val();
        GetFactorOfProduct(productNo, unitNo);

    }
    function showSuggestUnit() {
        var unitName = $('#typeDonViTinh :selected').text();


        $('#hidFactorValueSuggestUnit').val($('#hidFactorValue').val());
        addCommaNumberic('#hidFactorValueSuggestUnit');

        var buffer = "* 1 " + unitName + " = " + $('#hidFactorValueSuggestUnit').val() + " " + $('#hidUnitRootName').val();
        $('#suggestUnit').append(buffer);
        $('#suggestUnit').show();
    }
    function CalcTotalMoney1RowRenderModeUpdate(count1Row, realPrice) {
        var result = 0;
        //var count1Row = 0;
        //var factor = $('#hidFactorValue').val();

        //var count = removeCommas($('#tableSearch #SoLuong').val());
        //var realPrice = removeCommas($('#tableSearch #GiaThuc').val());
        //count1Row = count * factor;
        result = count1Row * realPrice;
        // count sp 1 row voi don vi unit root

        $('#hidCount1Row').val(count1Row);
        addCommaNumberic('#hidCount1Row');
        // total row added
        result = roundToTwo(result);
        $('#hidTotalRowAdded').val(result);
        addCommaNumberic('#hidTotalRowAdded');

        result = $('#hidTotalRowAdded').val();

        return result;
    }
    function CalcTotalMoney1Row() {
        var result = 0;
        var count1Row = 0;
        var factor = $('#hidFactorValue').val();

        var count = removeCommas($('#tableSearch #SoLuong').val());
        var realPrice = removeCommas($('#tableSearch #GiaThuc').val());
        count1Row = count * factor;
        result = count1Row * realPrice;
        // count sp 1 row voi don vi unit root

        $('#hidCount1Row').val(count1Row);
        addCommaNumberic('#hidCount1Row');
        // total row added
        result = roundToTwo(result);
        $('#hidTotalRowAdded').val(result);
        addCommaNumberic('#hidTotalRowAdded');

        result = $('#hidTotalRowAdded').val();

        return result;
    }
    function GetFactorOfProduct(productNo, unitNo) {
        if (unitNo != null && unitNo != 'undefined') {
            $.ajax({
                url: "/BanHang/FindFactorOfProduct1",
                //data: "{'maSP' : '" + productNo + "'}",
                data: "{ 'maSP': '" + productNo + "' , 'unitNo' : '" + unitNo + "'}",
                dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#hidFactorValue').val(data.heso);
                    var kind = $("#typeCustomers").val();
                    if(kind == 1){
                        $("#GiaBan").val(data.gia_ban_1);
                        $("#ChietKhau").val(data.chiec_khau_1);
                    }else if(kind == 2){
                        $("#GiaBan").val(data.gia_ban_2);
                        $("#ChietKhau").val(data.chiec_khau_2);
                    }else{
                        $("#GiaBan").val(data.gia_ban_3);
                        $("#ChietKhau").val(data.chiec_khau_3);
                    }
                    if ($('#hidFactorValue').val() != '' && $('#hidFactorValue').val() != '1') {
                        showSuggestUnit();
                    } else {
                        $('#suggestUnit').html('');
                        $('#suggestUnit').hide();
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
            });
        }
    }
    function CalcRealPrice(price, discount, isReturn) {
        $('#contentMsgErr').empty();
        var result = '';
        if (price == 0 || discount == 0) {
            result = price;
        } else {
            result = price - ((price * discount) / 100);
        }
        result = roundToTwo(result);
        if (result < 0) {
            showMsgErr(" Giá trị của chiết khấu quá lớn so với giá gốc của sản phẩm <br/> Hãy nhập lại giá trị chiết khấu.", false)
            return false;
        }
        if (isReturn == true) {
            return result;
        } else {
            $('#tableSearch #GiaThuc').val(result);
        }
    }

    function roundToTwo(num) {
        return +(Math.round(num + "e+2") + "e-2");
    }

    function UpdateRealPrice() {
        if ('' == $('#MaSanPham').val() || null == $('#MaSanPham').val()) {
            return
        }
        var price = removeCommas($('#GiaBan').val());
        var discount = removeCommas($('#ChietKhau').val());
        if (null == price ){
            price = 0;
            $('#GiaBan').val('0');
        }
        if (null == discount) {
            discount = 0;
            $('#ChietKhau').val('0');
        }
        var result = CalcRealPrice(price, discount);
        if(result == false){
            $('#GiaThuc').val('');
            $('#ChietKhau').focus();
            return;
        }else{
            addCommaNumberic('#GiaThuc');
        }

    }

    /*remove comma from value input*/
    function removeCommas(str) {
        if (str != null && str != '') {
            return (str.replace(/,/g, ''));
        } else {
            return null;
        }

    }

    function deleteRow(rowId) {
        var totalRow = $('input[name="ThanhTien_' + rowId + '"]').val();
        CalcTotalAllMoney(totalRow, false);

        $('#' + rowId).remove();
        if ($("table.tableContentScroll tr").length == 0) {
            setDisableControl('saveBill_top', true);
            setDisableControl('saveBill_bottom', true);
            clearUpdateRecord();
        } else {
            setDisableControl('saveBill_top', false);
            setDisableControl('saveBill_bottom', false);
        }

    }
    function saveListRowNum() {
        var listRowNum = '';
        var indx = 0;
        $('#tableContent tr').each(function () {
            listRowNum += this.id
            if (indx < ($('#tableContent tr').length - 1)) {
                listRowNum += ','
            }
            indx += 1;
        })

        $('#ListRowNum').val(listRowNum);
        //$('#formContent').submit();
    }
    function createNewBill() {
        var title = "Xác nhận";
        var content = "Quá trình tạo mới hóa đơn có thể làm mất dữ liệu bạn đang thao tác. <br\> Bạn muốn tiếp tục hay không?"
        if ($("table.tableContentScroll tr").length == 0) {
            reset();
            $('#TenKhachHang').focus();
        } else {
            fnOpenConfirmDialog(title, content, 2);
        }

    }
    function exportExcel() {

        var listRowNum = '';
        var indx = 0;
        $('#tableContent tr').each(function () {
            listRowNum +=  this.id
            if (indx < ($('#tableContent tr').length -1)) {
                listRowNum += ','
            }
            indx += 1;
        })

        $('#ListRowNum').val(listRowNum);
        $('#formContent').submit();

    }
    function reset() {

        //reset content prev
        $("table.tableContentScroll tr").remove();
        setDisableControl('saveBill_top', true);
        setDisableControl('saveBill_bottom', true);
        //reset field input prev
        // KHACH HANG
        $('#TenKhachHang').val('');
        $('#MaKhachHang').val('');
        $('#kindCustomer').val('');

        $('#typeCustomers').val('3');

        $('#NgayBan').datepicker('setDate', 'today');
        $('#NgayGiao').datepicker('setDate', 'today + 3');
        $('#DiaChi').val('');
        // SAN PHAM
        $('#CodeSanPham').val('');
        $('#TenSanPham').val('');
        $('#MaSanPham').val('');
        $('#GiaBan').val('');
        $('#ChietKhau').val('');
        $('#GiaThuc').val('');

        $('#typeDonViTinh').empty();
        $('#SoLuong').val('');
        $('#typeStore option:eq(0)').attr('selected', 'selected');

        //hidden field
        $('#hidFactorValue').val('1');
        $('#hidTotalRowAdded').val('1');
        $('#hidTotalAllMoney').val('1');
    }
    /*start format numberic*/
    function NumbericOnly(ctrl) {
        $(ctrl).keypress(function (e) {

            //getting key code of pressed key
            var keycode = (e.which) ? e.which : e.keyCode;
            //comparing pressed keycodes

            if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                //alert("Hãy nhập ký tự số.");
                return false;
            }
            else return true;
        });

    }

    function formatNumberic() {
        $('input.numberic').each(function () {
            $(this).val($(this).val().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"));
        });
    }

    function FormatNumberic_KeyUp(obj) {
        var $this = $('#' + obj.id);
        var AmountWithCommas = $this.val();
        var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
        var arParts = String(AmountWithCommas).split(DecimalSeparator);

        var intPart = arParts[0];
        var decPart = (arParts.length > 1 ? arParts[1] : '');

        var num = intPart.replace(/,/gi, "").split("").reverse().join("");
        var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
        if (decPart.length > 2) {
            decPart = (decPart + '00').substr(0, 2);
        }
        if (arParts.length > 1) {
            $this.val(num2 + DecimalSeparator + decPart);
        } else {
            $this.val(num2);
        }
    }

    function RemoveRougeChar(convertString) {
        if (convertString.substring(0, 1) == ",") {
            return convertString.substring(1, convertString.length)
        }
        return convertString;
    }
    /*end format numberic*/

    function saveBillSuccess() {

        $('#divErr').hide();
        $('#divInfo').show();
        setDisableControl('saveBill_top', true);
        setDisableControl('saveBill_bottom', true);
    }
    function saveBillFailure() {
        $('#divInfo').empty();
        $('#divInfo').hide();
        $('#divErr').show();
        setDisableControl('saveBill_top', false);
        setDisableControl('saveBill_bottom', false);
    }

    function disableEnterKey(e, itemAllowEnter) {
        var key;

        if (window.event){
            key = window.event.keyCode;     //IE
        }
        else{
            key = e.which;     //firefox
        }

        if (key == 13){
            if(null != itemAllowEnter){
                callbackEnterPress(itemAllowEnter);
            }else{
                return false;

            }
        }
        else{
            return true;
        }
    }
    function callbackEnterPress(itemAllowEnter){
        switch (itemAllowEnter)
        {
            case 1: // code product
                $.ajax({
                    url: "/SanPham/FindSuggestByCode",
                    data: "{ 'prefixText': '"+ $('#CodeSanPham').val() + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    success:
                        function (data) {
                            if(null != data && data.length > 0){
                                setFixedField(data[0], true);

                                hideRelationProduct();
                                createDonViTinh();

                                $('#hidUnitRootName').val(data[0].unitNm);

                                $('#hidFactorValue').val('1');
                                return false;
                            }
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                break;
            case 2: // name product
                $.ajax({
                    url: "/SanPham/FindSuggestByTypeCustomer",
                    data: "{ 'prefixText': '" + $('#TenSanPham').val() + "' , 'typeCustomer' : '" + $("#kindCustomer").val() + "'}",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    success:
                        function (data) {
                            if(null != data && data.length > 0){
                                setFixedField(data[0] , false);

                                hideRelationProduct();
                                createDonViTinh();

                                $('#hidUnitRootName').val(data[0].unitNm);

                                $('#hidFactorValue').val('1');
                                return false;
                            }
                        },
                    error:
                        function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                break;
        }
    }

    function productAutocomplete() {
        $("input.productName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/SanPham/FindSuggestName", data: "{ 'prefixText': '" + request.term + "' }",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; }, success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.value,
                                    value: item.value,
                                    code: item.code,
                                    id: item.id
                                }
                            }))
                        }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                var $this = $(this);
                var parent = $this.parent().parent();
                $('input.productId', parent).val("");
                $('input.code', parent).val("");
                $('input.convertor', parent).val("1");

            },
            select: function (event, ui) {
                var $th = $(this);
                var pa = $th.parent().parent();
                if (!checkDuplicate(ui.item.id)) {
                    $th.val(ui.item.label);
                    $('input.productId', pa).val(ui.item.id);
                    $('input.code', pa).val(ui.item.code);
                    $('input.convertor', pa).val("1");
                    createDonViTinh($th);
                } else {
                    alert("Sản phầm này đã được nhập.");
                    $th.val("");
                    $('input.productId', pa).val("");
                    $('input.code', pa).val("");
                    $('input.convertor', pa).val("1");
                }
                return false;
            },
            minLength: 1
        });
    }

    function createDonViTinh(obj) {
        var result = '';
        var $th = obj;
        var pr = $th.parent().parent();
        var productId = $('input.productId', pr).val();
        $.ajax({
            url: "/BanHang/FindDonViTinhByMaSP",
            data: "{'maSP' : '" + productId + "'}",
            dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
            success:
                function (data) {
                    var $this = obj;
                    var parent = $this.parent().parent();
                    var un = $('select.unit', parent);
                    $('select.unit', parent).empty();
                    $.each(data, function (i, item) {
                        var opt = "<option value=" + item.MA_DON_VI + ">" + item.TEN_DON_VI + "</option>"
                        $(opt).appendTo(un);
                    });
                },
            error:
                function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
        });
    }


    function checkDuplicate(val) {
        var flg = false;
        $('td input.productId').each(function () {
            if ($('input.delFlg', $(this).parent()).val() != 1) {
                var checkVal = $(this).val();
                if (val == checkVal) {
                    flg = true;
                }
            }
        })
        return flg;
    }
    function productCodeAutocomplete() {
        $("input.code").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/SanPham/FindSuggestByCd", data: "{ 'prefixText': '" + request.term + "' }",
                    dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; }, success:
                        function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.value,
                                    name: item.name,
                                    value: item.value,
                                    id: item.id
                                }
                            }))
                        }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                });
                var $this = $(this);
                var parent = $this.parent().parent();
                $('input.productId', parent).val("");
                $('input.productName', parent).val("");
                $('input.convertor', parent).val("1");
            },
            select: function (event, ui) {
                var $th = $(this);
                var pa = $th.parent().parent();
                if (!checkDuplicate(ui.item.id)) {
                    $th.val(ui.item.label);
                    $('input.productId', pa).val(ui.item.id);
                    $('input.productName', pa).val(ui.item.name);
                    createDonViTinh($th);
                    $('input.convertor', pa).val("1");
                    $th.css("background-color", "white");
                } else {
                    alert("Sản phẩm này đã có trong danh sách");
                    $th.val("");
                    $('input.productId', pa).val("");
                    $('input.productName', pa).val("");
                    $('input.convertor', pa).val("1");
                }
                return false;
            },
            minLength: 1
        });
    }
    function tableCheck() {
        $('.chcktbl').click(function () {
            var length = $('.chcktbl:checked').length;
            var max = $('.chcktbl').length;
            if (length == max) {
                $('#chckHead').prop('checked', true);
            }
            else {
                $('#chckHead').prop('checked', false);
            }
        });
    }

    function headerCheck() {
        $('#chckHead').click(function () {
            if (this.checked == false) {
                $('input.chcktbl:checked').prop('checked', false);
            }
            else {
                $('input.chcktbl:not(:checked)').prop('checked', true);
            }
        });
    }


    function deleteCheckedRow() {
        var rows = 0;
        $('input.chcktbl:checked').each(function () {
            var flg = $('input.delFlg', $(this).parent().parent());
            if (flg.val() == null || flg.val() == '' || flg.val() == 0) {
                rows++;
            }
            flg.val(1);
            $(this).parent().parent().hide();

        });
        if (rows == 0) {
            alert("Vui lòng chọn dòng để xóa.");
        }
    };

    function addRow() {
        var row = parseInt($("#rowIndex").val()) + 1;
        $('#detailTable > tbody:last').append('<tr> ' +
                '<td class="inner alignCenter colwidth" width="5%;">' +
                '<input type="checkbox" class="chcktbl"> </td>' +
                '<td class="inner colwidth "><input name="lstChiTietHoaDon[' + row + '].Code_SP" class="code codebtl" id="lstChiTietHoaDon_' + row + '__Code_SP" type="text" value=""></td>' +
                '<td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Ma_SP" class="productId " id="lstChiTietHoaDon_' + row + '__Ma_SP" type="hidden" value="" data-val="true" data-val-number="The field Ma_SP must be a number."> ' +
                '<input name="lstChiTietHoaDon[' + row + '].DEL_FLG" class="delFlg" id="lstChiTietHoaDon_' + row + '__DEL_FLG" type="hidden" value="" data-val="true" data-val-number="The field DEL_FLG must be a number."> ' +
                '<input name="lstChiTietHoaDon[' + row + '].HE_SO" class="convertor" id="lstChiTietHoaDon_' + row + '__HE_SO" type="hidden" value="" data-val="true" data-val-number="The field HE_SO must be a number.">' +
                '<input name="lstChiTietHoaDon[' + row + '].Ten_SP" class="productName" id="lstChiTietHoaDon_' + row + '__Ten_SP" type="text" value="">' +
                '</td>' +
                '<td class="inner colwidth "><input name="lstChiTietHoaDon' + row + '].So_Luong" class="quantity" id="lstChiTietHoaDon' + row + '__So_Luong" type="text" value="" data-val="true" data-val-number="The field So_Luong must be a number."></td>' +
                '<td class="inner colwidth ">' +
                '<select name="lstChiTietHoaDon[' + row + '].Ma_Don_Vi" class="unit " id="lstChiTietHoaDon_' + row + '__Ma_Don_Vi" style="padding: 5px; font-size: 1.2em;" data-val-required="The Ma_Don_Vi field is required." data-val="true" data-val-number="The field Ma_Don_Vi must be a number."><option value="">---------</option>' +
                '</select></td>' +
                '<td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Gia_Ban" class="price numberic" id="lstChiTietHoaDon_' + row + '__Gia_Ban" type="text" value="" data-val="true" data-val-number="The field Gia_Ban must be a number.">' +
                '</td><td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Thanh_Tien" disabled="disabled" class="total numberic" id="lstChiTietHoaDon_' + row + '__Thanh_Tien" type="text" readonly="True" value="" data-val="true" data-val-number="The field Thanh_Tien must be a number.">' +
                '</td><td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Phan_Tram_CK" class="discount numberic" id="lstChiTietHoaDon_' + row + '__Phan_Tram_CK" type="text" value="" data-val="true" data-val-number="The field Phan_Tram_CK must be a number.">' +
                '</td><td class="inner colwidth ">' +
                '<input name="lstChiTietHoaDon[' + row + '].Gia_Thuc" disabled="disabled" class="realTotal numberic" id="lstChiTietHoaDon_' + row + '__Gia_Thuc" type="text" readonly="True" value="" data-val="true" data-val-number="The field Gia_Thuc must be a number.">' +
                '</td><td class="innerLast colwidth ">' +
                '<select name="lstChiTietHoaDon[' + row + '].Ma_Don_Vi" class="store " id="lstChiTietHoaDon_' + row + '__Ma_Don_Vi" style="padding: 5px; font-size: 1.2em;"><option value="">---------</option>' +
                '</select></td>' +
                '</tr>');
        $("#rowIndex").val(row);
        $('input.code', $('#detailTable > tbody:last')).focus();
        productAutocomplete();
        productCodeAutocomplete();
        tableCheck();
        headerCheck();
    }
    $(document).ready(function () {
        //formatNumberic();
       // numberOnly();
        productAutocomplete();
        productCodeAutocomplete();
       // quantityKeyPress();
      //  priceKeyPress();
       // unitOnchange();
        tableCheck();
        headerCheck();
        //codeFocusout();
       // $("input.datePicker").datepicker({ dateFormat: "dd/mm/yy" }).datepicker("setDate", new Date());
    });

    </script>
}
<div id="msgId">
    <div id="divInfo" style="display: none; color: blue">

    </div>
    <div id="divErr" style="display:none; " class="validation-summary-errors">
        <div id="titleMsgErr">
            Hãy nhập các giá trị bên dưới :
        </div>
        <div id="contentMsgErr" style="margin-left:15px">

        </div>
    </div>

</div>
<hr class="mydashed" />
<!--Message-->
<!--Hidden field use for mode UPDATE-->
@Html.HiddenFor(u => u.KH_Info.Ma_HD)
@Html.HiddenFor(u => u.KH_Info.Ma_KH, new { @id = "MaKhachHang", @name = "MaKhachHang" })
@Html.HiddenFor(u => u.KH_Info.Ten_KH)
@Html.HiddenFor(u => u.KH_Info.Ngay_Ban)
@Html.HiddenFor(u => u.KH_Info.Ngay_Giao)
@Html.HiddenFor(u => u.KH_Info.Dia_Chi)

<fieldset>
    @using (Ajax.BeginForm("SaveBill", "BanHang", new { MaHoaDon = ViewBag.MaHoaDon },
     new AjaxOptions()
     {
         UpdateTargetId = "divInfo",
         OnSuccess = "saveBillSuccess",
         OnFailure = "saveBillFailure"
     },
     new { @id = "formContent" })
     )
    {
        <!--customer & user area-->
        <div id="customerArea">
            <table id="tableCustomer" class="tableSearch tableBasic">
                <tr>
                    <td>
                        <div class="titleItem required">Tên khách hàng </div>
                        <br />
                        <div>
                            @Html.TextBoxFor(u => u.KH_Info.Ten_KH, new { @name="TenKhachHang" ,@id="TenKhachHang", @style="margin-left: 2px;", @onkeypress="return disableEnterKey(event);" })
                            @*<input type="hidden" name="MaKhachHang" id="MaKhachHang" />*@
                            <input type="hidden" name="UserId" value="@ViewBag.UserId" />
                            <input type="hidden" id="MyStore" value="@ViewBag.MyStore" />
                            <input type="hidden" id="kindCustomer" />
                            
                        </div>

                    </td>
                    <td>
                        <div>
                            <span class="required" style="font-size:16px;">Loại nghiệp vụ  </span>
                            <br />

                            <div>
                                <select id="typeCustomers" class="ComboboxCustomer" onchange="changeTypeCustomer();">
                                    <option value="3"> L3 - 03 </option>
                                    <option value="2"> L2 - 02 </option>
                                    <option value="1"> L1 - 01 </option>
                                </select>

                            </div>

                        </div>
                    </td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>

                    <td>
                        <div class="titleItem required">Ngày bán</div>
                        <br />
                        <div>
                            @Html.TextBoxFor(u => u.KH_Info.Ngay_Ban, "{0:d}", new {@name="NgayBan", @id="NgayBan", @class = "datePicker "})
           
                        </div>
                    </td>
                    <td colspan="2">
                        <div class="titleItem required">Ngày giao hàng</div>
                        <br />
                        <div>
                            @Html.TextBoxFor(u => u.KH_Info.Ngay_Giao, "{0:d}", new { @name = "NgayGiao", @id = "NgayGiao", @class = "datePicker " })
                        </div>
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td colspan="3">
                        <div class="titleItem required">Địa chỉ giao hàng</div>
                        <br />
                        <div>
                            @Html.TextAreaFor(u => u.KH_Info.Dia_Chi, new { @name="DiaChi", @id="DiaChi", @class="alignText" })
                
                        </div>
                    </td>
                </tr>
            </table>
            <!--input information product-->
            <div>
                <hr class="mydashed" />
                <div class="myAction">
                    <input type="button" id="addRecord" value="Thêm sản phẩm" />
                    <input type="button" id="updateRecord" value="Cập nhật " />
                    <input type="button" id="clearUpdateRecord" value="Hủy cập nhật" />
                    <div style="float: right; margin-right: -8px;">
                        <input type="submit" id="saveBill_top" style="width: 120px" value="Lưu hóa đơn">
                        <input type="button" id="createNewBill_top" style="width: 100px" value="Tạo mới">
                        <input type="button" id="back_top" style="width:100px" value="Trở về">

                    </div>
                </div>
            </div>

            <!--Informatio Panel support s-->
            <!--relationCustomer-->
            <div id="relationCustomer">
                <div>
                    <span><strong>- Mã khách hàng : </strong> </span><span id="S_MaKhachHang"></span>
                    <br />
                    <span><strong>- Tên khách hàng : </strong> </span><span id="S_TenKhachHang"></span>
                    <br />
                    <span><strong>- Mã thẻ : </strong> </span><span id="S_MaTheKhachHang"></span>
                    <br />
                    <span><strong>- Địa chỉ : </strong> </span><span id="S_DiaChi"></span>
                    <br />
                    <span><strong>- Số điện thoại : </strong> </span><span id="S_SoDienThoai"></span>
                    <br />
                    <span><strong>- Email : </strong> </span><span id="S_Email"></span>
                </div>
            </div>
            <!--relationProduct-->
            <div id="relationProduct" style="top: 319px; left: 565px;">
                <div id="toolTipRelationProduct">
                    <span><strong>- Mã sản phẩm : </strong> </span><span id="S_MaSanPham"></span>
                    <br />
                    <span><strong>- Tên sản phẩm : </strong> </span><span id="S_TenSanPham"></span>
                    <br />
                    <span><strong>- Giá bán : </strong> </span><span id="S_GiaBan"></span>
                    <br />
                    <span><strong>- Chiết khấu : </strong> </span><span id="S_ChietKhau"></span>
                    <br />
                    <span><strong>- Giá sau chiết khấu : </strong> </span><span id="S_GiaThuc"></span>
                    <br />
                    <span><strong>- Số lượng: </strong> </span>
                    @{
        int j = 0;
        foreach (var Kho in Model.Store)
        {
            j++;
            if (j <= 5)
            {
                switch (j)
                {
                    case 1:
                        <br />
                        <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_1"> </span>
                        break;
                    case 2:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_2">  </span>
                        break;
                    case 3:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_3"> </span>
                        break;
                    case 4:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_4">  </span>
                        break;
                    case 5:
                    <br />
                    <span><strong>  + @Kho.TEN_KHO : </strong> </span><span id="store_5">  </span>
                        break;
                }
            }
        }
                    }

                </div>
            </div>
            <!--Informatio Panel support e-->
            <!--hidden field start-->
            <div id="dialogConfirm"></div>
            <input type="hidden" id="hidFactorValue" value="1" />

            <input type="hidden" id="hidFactorValueSuggestUnit" value="" />
            <input type="hidden" id="hidCount1Row" value="0" />

            <input type="hidden" id="hidTotalRowAdded" value="0" />
            <input type="hidden" name="hidTotalAllMoney" id="hidTotalAllMoney" value="0" />
            <input type="hidden" id="ListRowNum" name="ListRowNum" value="" />
            <input type="hidden" id="hidUnitRootName" value="">
            <input type="radio" id="hidRadioEdit" style=" display:none" name="groupBill" />
            <!--hidden field end-->

        </div>

        <!--list content area-->
        <input type="hidden" id="rowIndex" value="0" />
        <div>
            <table id="detailTable" name="detailTable" width="100%" class="contentTable">
                <thead>
                    <tr class="inner column-hscroll alignCenter">
                        <td class='inner colwidth head ' width="5%;"> <input type="checkbox" id="chckHead" /> </td>
                        <td class='inner colwidth head '> CODE </td>
                        <td class='inner colwidth head '> Sản phẩm </td>
                        <td class='inner colwidth head '> Số lượng </td>
                        <td class='innerLast colwidth head '> Đơn vị </td>
                        <td class='inner colwidth head '> Đơn giá </td>
                        <td class='inner colwidth head '> Thành tiến </td>
                        <td class='inner colwidth head '> Chiếc khấu </td>
                        <td class='inner colwidth head '> Thực trả</td>
                        <td class='innerLast colwidth head '> Kho</td>
                    </tr>
                </thead>


                <tbody>
                    <tr>
                        <td class='inner alignCenter colwidth' width="5%;">
                            <input type="checkbox" class="chcktbl">
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Code_SP, new { @class = "code codebtl" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[0].Ma_SP, new { @class = "productId " })
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[0].DEL_FLG, new { @class = "delFlg" })
                            @Html.HiddenFor(u => u.lstChiTietHoaDon[0].HE_SO, new { @class = "convertor" })
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Ten_SP, new { @class = "productName" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].So_Luong, new { @class = "quantity" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.DropDownListFor(u => u.lstChiTietHoaDon[0].Ma_Don_Vi, new SelectList(@Model.Units, "MA_DON_VI", "TEN_DON_VI"), "---------", new { style = "padding:5px;font-size:1.2em", @class = "unit " })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Gia_Ban, new { @class = "price numberic" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Thanh_Tien, new { @class = "total numberic", @readOnly = true, @disabled = "disabled" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Phan_Tram_CK, new { @class = "discount numberic" })
                        </td>
                        <td class='inner colwidth '>
                            @Html.TextBoxFor(u => u.lstChiTietHoaDon[0].Gia_Thuc, new { @class = "realTotal numberic", @readOnly = true, @disabled = "disabled" })
                        </td>
                        <td class='innerLast colwidth '>
                            @Html.DropDownListFor(u => u.lstChiTietHoaDon[0].Ma_Don_Vi, new SelectList(@Model.Store, "MA_KHO", "TEN_KHO"), "---------", new { style = "padding:5px;font-size:1.2em", @class = "store " })
                        </td>
                    </tr>

                </tbody>
                <tfoot>
                    <tr>
                        <td class='innerLast alignCenter colwidth ' style="background-color:lightgray" colspan="9"> </td>
                        <td class='innerLast alignCenter colwidth ' style="background-color:lightgray">
                            <input type="button" value="Thêm dòng" onclick="addRow()" />
                        </td>
                    </tr>
                </tfoot>
            </table>

            <div class="mainContentScroll">
                <table id="tableContent" class="tableContentScroll">
                    <tbody>
                        <!--danh sach sp add vao day.-->
                    </tbody>
                </table>
            </div>


        </div>

    <!--total money-->
        <div id="divTotal">
            <table cellpadding="0" cellspacing="0" class="tableTotal">
                <tr>
                    <td class="colTitleTotal">
                        <div>Tổng tiền hóa đơn : </div>
                    </td>
                    <td class="colTotalValue">
                        <div id="totalAll"> 0 </div>
                    </td>
                </tr>

            </table>
        </div>
        <hr />
        <div style="float: right; margin-right: -8px;">
            @*<input type="button" id="exportExcel" style="width:100px" value="Xuất Excel" onclick="exportExcel();" />*@
            <input type="submit" id="saveBill_bottom" style="width: 120px" value="Lưu hóa đơn">
            <input type="button" id="createNewBill_bottom" style="width: 100px" value="Tạo mới">
            <input type="button" id="back_bottom" style="width:100px" value="Trở về">
            <input type="button" id="hidBtnBack" style="display:none;" onclick="location.href='@Url.Action("BanHang", "Home")'">
        </div>

    }

</fieldset>