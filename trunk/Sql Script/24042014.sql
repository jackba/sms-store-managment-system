ALTER FUNCTION STMA_GET_MAX_DATE_KIEM_KHO
(	
	@MA_KHO INT
)
RETURNS DATE
AS
BEGIN
	RETURN (SELECT ISNULL(MAX(NGAY_KIEM_KHO),GETDATE()-180) AS NGAY_KIEM_KHO 
	FROM 
		KIEM_KHO_HISTORY,
		NHAP_KHO 
	WHERE 
	KIEM_KHO_HISTORY.ACTIVE = 'A'
	AND NHAP_KHO.MA_KHO = @MA_KHO
	AND NHAP_KHO.MA_NHAP_KHO = KIEM_KHO_HISTORY.MA_NHAP_KHO)
END


CREATE VIEW V_XUAT_KHO 
AS
SELECT 
	XUAT_KHO.MA_XUAT_KHO,
	XUAT_KHO.NGAY_XUAT, 
	XUAT_KHO.MA_KHO_XUAT, 
	XUAT_KHO.LY_DO_XUAT, 
	CHI_TIET_XUAT_KHO.MA_SAN_PHAM, 
	CHI_TIET_XUAT_KHO.SO_LUONG, 
	CHI_TIET_XUAT_KHO.GIA_XUAT
FROM 
	XUAT_KHO, 
	CHI_TIET_XUAT_KHO
WHERE
			XUAT_KHO.ACTIVE = 'A'
	AND 	CHI_TIET_XUAT_KHO.ACTIVE = 'A'
	AND 	CAST(XUAT_KHO.NGAY_XUAT AS DATE) >= CAST(DBO.STMA_GET_MAX_DATE_KIEM_KHO(XUAT_KHO.MA_XUAT_KHO) AS DATE)
	AND 	XUAT_KHO.MA_XUAT_KHO = CHI_TIET_XUAT_KHO.MA_XUAT_KHO

CREATE VIEW V_NHAP_KHO
AS
SELECT 
	NHAP_KHO.MA_NHAP_KHO,
	NHAP_KHO.NGAY_NHAP, 
	NHAP_KHO.MA_KHO, 
	NHAP_KHO.LY_DO_NHAP, 
	CHI_TIET_NHAP_KHO.MA_SAN_PHAM, 
	CHI_TIET_NHAP_KHO.SO_LUONG, 
	CHI_TIET_NHAP_KHO.GIA_VON
FROM 
	NHAP_KHO, 
	CHI_TIET_NHAP_KHO
WHERE
			NHAP_KHO.ACTIVE = 'A'
	AND 	CHI_TIET_NHAP_KHO.ACTIVE = 'A'
	AND 	CAST(NHAP_KHO.NGAY_NHAP AS DATE) >= CAST(DBO.STMA_GET_MAX_DATE_KIEM_KHO(NHAP_KHO.MA_KHO) AS DATE)
	AND 	NHAP_KHO.MA_NHAP_KHO = CHI_TIET_NHAP_KHO.MA_NHAP_KHO

	
CREATE VIEW V_NHAP_XUAT_KHO 
AS
SELECT 
ISNULL(A.MA_KHO, B.MA_KHO) MA_KHO, 
ISNULL(A.MA_SAN_PHAM,B.MA_SAN_PHAM) MA_SAN_PHAM, 
ISNULL(A.SO_LUONG_NHAP,0) SO_LUONG_NHAP, 
ISNULL(B.SO_LUONG_XUAT,0) SO_LUONG_XUAT, 
ISNULL(A.SO_LUONG_NHAP,0) - ISNULL(B.SO_LUONG_XUAT,0) AS SO_LUONG_TON
FROM
(
	SELECT 
		V_NHAP_KHO.MA_KHO MA_KHO,
		V_NHAP_KHO.MA_SAN_PHAM, 
		ISNULL(SUM(V_NHAP_KHO.SO_LUONG), 0) AS SO_LUONG_NHAP
	FROM 
		V_NHAP_KHO 
	GROUP BY V_NHAP_KHO.MA_SAN_PHAM, V_NHAP_KHO.MA_KHO
)A
FULL JOIN 
(
	SELECT 
		V_XUAT_KHO.MA_KHO_XUAT MA_KHO,
		V_XUAT_KHO.MA_SAN_PHAM, 
		ISNULL(SUM(V_XUAT_KHO.SO_LUONG), 0) AS SO_LUONG_XUAT
	FROM 
		V_XUAT_KHO 
	GROUP BY V_XUAT_KHO.MA_SAN_PHAM, V_XUAT_KHO.MA_KHO_XUAT
)B
ON A.MA_KHO = B.MA_KHO AND A.MA_SAN_PHAM = B.MA_SAN_PHAM


CREATE FUNCTION F_GET_TON_KHO
(
	@MA_KHO INT, 
	@MA_SAN_PHAM INT
) 
RETURNS FLOAT
AS
BEGIN
	RETURN (SELECT TOP 1 ISNULL(SO_LUONG_TON, 0) FROM V_NHAP_XUAT_KHO WHERE MA_KHO = @MA_KHO AND MA_SAN_PHAM = @MA_SAN_PHAM)
END

CREATE FUNCTION F_GET_TON_TOTAL
(
	@MA_SAN_PHAM INT
) 
RETURNS FLOAT
AS
BEGIN
	RETURN (SELECT ISNULL(SUM(SO_LUONG_TON), 0) FROM V_NHAP_XUAT_KHO WHERE MA_SAN_PHAM = @MA_SAN_PHAM GROUP BY MA_SAN_PHAM)
END

CREATE PROC SP_GET_TON_KHO 
AS
BEGIN
	DECLARE @DYN_SQL VARCHAR(MAX);
	DECLARE @MA_KHO INT;
	DECLARE @MA_SAN_PHAM INT;
	DECLARE @TEN_SAN_PHAM NVARCHAR(100)
	DECLARE @TEN_DON_VI NVARCHAR(100)
	DECLARE @SO_LUONG_TON FLOAT;
	DECLARE @COLUMN_NAME VARCHAR (50);
	DECLARE @ID INT;
	
	DECLARE SAN_PHAM_MY_CURSOR CURSOR FOR
	SELECT MA_SAN_PHAM, TEN_SAN_PHAM, TEN_DON_VI 
	FROM SAN_PHAM, DON_VI_TINH
	WHERE
	SAN_PHAM.ACTIVE = 'A'
	AND SAN_PHAM.MA_DON_VI = DON_VI_TINH.MA_DON_VI;
	
	DECLARE KHO_CURSOR CURSOR FOR
	SELECT MA_KHO 
	FROM KHO
	WHERE ACTIVE = 'A'
	ORDER BY MA_KHO; 
	
	SET NOCOUNT ON;
	
	CREATE TABLE #TEMP_TON_KHO 
	(
		ID INT IDENTITY(1,1) PRIMARY KEY,  
		MA_SAN_PHAM INT, 
		TEN_SAN_PHAM NVARCHAR(100), 
		TEN_DON_VI NVARCHAR(100)
	)
	
	OPEN KHO_CURSOR
		FETCH NEXT FROM KHO_CURSOR INTO @MA_KHO
		WHILE @@FETCH_STATUS = 0 
	BEGIN
		SET @COLUMN_NAME = '';
		SET @COLUMN_NAME = 'TON_KHO_' + CAST(@MA_KHO AS VARCHAR)
		SET @DYN_SQL = 'ALTER TABLE #TEMP_TON_KHO ADD ' + @COLUMN_NAME +' FLOAT DEFAULT 0';
		EXEC(@DYN_SQL)
		FETCH NEXT FROM KHO_CURSOR INTO @MA_KHO
	END;
	CLOSE KHO_CURSOR
	DEALLOCATE KHO_CURSOR
	
	SET @DYN_SQL = 'ALTER TABLE #TEMP_TON_KHO ADD TOTAL FLOAT DEFAULT 0';
	EXEC(@DYN_SQL)	
	
	OPEN SAN_PHAM_MY_CURSOR 
		FETCH NEXT FROM SAN_PHAM_MY_CURSOR INTO @MA_SAN_PHAM ,@TEN_SAN_PHAM, @TEN_DON_VI
		WHILE @@FETCH_STATUS = 0  
	BEGIN
		INSERT INTO #TEMP_TON_KHO(MA_SAN_PHAM, TEN_SAN_PHAM, TEN_DON_VI) VALUES (@MA_SAN_PHAM, @TEN_SAN_PHAM, @TEN_DON_VI);
		SET @ID = (SELECT SCOPE_IDENTITY());		
		
		DECLARE KHO_CURSOR_IST CURSOR FOR
		SELECT MA_KHO 
		FROM KHO
		WHERE ACTIVE = 'A'
		ORDER BY MA_KHO; 
		
		OPEN KHO_CURSOR_IST 
		FETCH NEXT FROM KHO_CURSOR_IST INTO @MA_KHO
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @COLUMN_NAME = '';
			SET @COLUMN_NAME = 'TON_KHO_' + CAST(@MA_KHO AS VARCHAR);
			SET @SO_LUONG_TON = DBO.F_GET_TON_KHO(@MA_KHO, @MA_SAN_PHAM);
			SET @DYN_SQL = 'UPDATE #TEMP_TON_KHO SET ' + @COLUMN_NAME + ' = ' + CAST(@SO_LUONG_TON AS VARCHAR) + ' WHERE ID = ' + CAST(@ID AS VARCHAR);
			EXEC(@DYN_SQL);
			FETCH NEXT FROM KHO_CURSOR_IST INTO @MA_KHO
		END;		
		SET @SO_LUONG_TON = DBO.F_GET_TON_TOTAL(@MA_SAN_PHAM);
		SET @DYN_SQL = 'UPDATE #TEMP_TON_KHO SET TOTAL  = ' + CAST(@SO_LUONG_TON AS VARCHAR)+ ' WHERE ID = ' + CAST(@ID AS VARCHAR);	
		EXEC(@DYN_SQL);
		
		CLOSE KHO_CURSOR_IST;
		DEALLOCATE KHO_CURSOR_IST;
		
		FETCH NEXT FROM SAN_PHAM_MY_CURSOR INTO @MA_SAN_PHAM ,@TEN_SAN_PHAM, @TEN_DON_VI
	END;
	CLOSE SAN_PHAM_MY_CURSOR
	DEALLOCATE SAN_PHAM_MY_CURSOR
	SELECT * FROM #TEMP_TON_KHO
END

CREATE PROC SP_GET_TON_KHO_ALERT
@NAME NVARCHAR(200) 
AS
BEGIN
	DECLARE @DYN_SQL VARCHAR(MAX);
	DECLARE @MA_KHO INT;
	DECLARE @MA_SAN_PHAM INT;
	DECLARE @TEN_SAN_PHAM NVARCHAR(100)
	DECLARE @TEN_DON_VI NVARCHAR(100)
	DECLARE @SO_LUONG_TON FLOAT;
	DECLARE @COLUMN_NAME VARCHAR (50);
	DECLARE @ID INT;
	
	DECLARE SAN_PHAM_MY_CURSOR CURSOR FOR
	SELECT MA_SAN_PHAM, TEN_SAN_PHAM, TEN_DON_VI 
	FROM SAN_PHAM, DON_VI_TINH
	WHERE
	SAN_PHAM.ACTIVE = 'A'
	AND SAN_PHAM.MA_DON_VI = DON_VI_TINH.MA_DON_VI;
	
	DECLARE KHO_CURSOR CURSOR FOR
	SELECT MA_KHO 
	FROM KHO
	WHERE ACTIVE = 'A'
	ORDER BY MA_KHO; 
	
	SET NOCOUNT ON;
	
	CREATE TABLE #TEMP_TON_KHO 
	(
		ID INT IDENTITY(1,1) PRIMARY KEY,  
		MA_SAN_PHAM INT, 
		TEN_SAN_PHAM NVARCHAR(100), 
		TEN_DON_VI NVARCHAR(100)
	)
	
	OPEN KHO_CURSOR
		FETCH NEXT FROM KHO_CURSOR INTO @MA_KHO
		WHILE @@FETCH_STATUS = 0 
	BEGIN
		SET @COLUMN_NAME = '';
		SET @COLUMN_NAME = 'TON_KHO_' + CAST(@MA_KHO AS VARCHAR)
		SET @DYN_SQL = 'ALTER TABLE #TEMP_TON_KHO ADD ' + @COLUMN_NAME +' FLOAT DEFAULT 0';
		EXEC(@DYN_SQL)
		FETCH NEXT FROM KHO_CURSOR INTO @MA_KHO
	END;
	CLOSE KHO_CURSOR
	DEALLOCATE KHO_CURSOR
	
	SET @DYN_SQL = 'ALTER TABLE #TEMP_TON_KHO ADD TOTAL FLOAT DEFAULT 0';
	EXEC(@DYN_SQL)	
	
	OPEN SAN_PHAM_MY_CURSOR 
		FETCH NEXT FROM SAN_PHAM_MY_CURSOR INTO @MA_SAN_PHAM ,@TEN_SAN_PHAM, @TEN_DON_VI
		WHILE @@FETCH_STATUS = 0  
	BEGIN
		INSERT INTO #TEMP_TON_KHO(MA_SAN_PHAM, TEN_SAN_PHAM, TEN_DON_VI) VALUES (@MA_SAN_PHAM, @TEN_SAN_PHAM, @TEN_DON_VI);
		SET @ID = (SELECT SCOPE_IDENTITY());		
		
		DECLARE KHO_CURSOR_IST CURSOR FOR
		SELECT MA_KHO 
		FROM KHO
		WHERE ACTIVE = 'A'
		ORDER BY MA_KHO; 
		
		OPEN KHO_CURSOR_IST 
		FETCH NEXT FROM KHO_CURSOR_IST INTO @MA_KHO
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @COLUMN_NAME = '';
			SET @COLUMN_NAME = 'TON_KHO_' + CAST(@MA_KHO AS VARCHAR);
			SET @SO_LUONG_TON = DBO.F_GET_TON_KHO(@MA_KHO, @MA_SAN_PHAM);
			SET @DYN_SQL = 'UPDATE #TEMP_TON_KHO SET ' + @COLUMN_NAME + ' = ' + CAST(@SO_LUONG_TON AS VARCHAR) + ' WHERE ID = ' + CAST(@ID AS VARCHAR);
			EXEC(@DYN_SQL);
			FETCH NEXT FROM KHO_CURSOR_IST INTO @MA_KHO
		END;		
		SET @SO_LUONG_TON = DBO.F_GET_TON_TOTAL(@MA_SAN_PHAM);
		SET @DYN_SQL = 'UPDATE #TEMP_TON_KHO SET TOTAL  = ' + CAST(@SO_LUONG_TON AS VARCHAR)+ ' WHERE ID = ' + CAST(@ID AS VARCHAR);	
		EXEC(@DYN_SQL);
		
		CLOSE KHO_CURSOR_IST;
		DEALLOCATE KHO_CURSOR_IST;
		
		FETCH NEXT FROM SAN_PHAM_MY_CURSOR INTO @MA_SAN_PHAM ,@TEN_SAN_PHAM, @TEN_DON_VI
	END;
	CLOSE SAN_PHAM_MY_CURSOR
	DEALLOCATE SAN_PHAM_MY_CURSOR
	
	SELECT 
	#TEMP_TON_KHO.*
	FROM 
	#TEMP_TON_KHO,
	SAN_PHAM 
	WHERE
	SAN_PHAM.ACTIVE = 'A'
	AND #TEMP_TON_KHO.TEN_SAN_PHAM LIKE '%' + @NAME + '%'
	AND #TEMP_TON_KHO.MA_SAN_PHAM = SAN_PHAM.MA_SAN_PHAM
	AND #TEMP_TON_KHO.TOTAL <= ISNULL(SAN_PHAM.CO_SO_TOI_THIEU,0) 
END



CREATE PROCEDURE SP_GET_INVENTORY
@MA_KHO INT
AS
SELECT 
	SAN_PHAM.MA_SAN_PHAM, 
	SAN_PHAM.TEN_SAN_PHAM, 
	DON_VI_TINH.TEN_DON_VI,
	ISNULL(SUM(SO_LUONG_TON),0) SO_LUONG_TON
FROM
SAN_PHAM
LEFT JOIN V_NHAP_XUAT_KHO ON V_NHAP_XUAT_KHO.MA_SAN_PHAM = SAN_PHAM.MA_SAN_PHAM
JOIN DON_VI_TINH ON SAN_PHAM.MA_DON_VI = DON_VI_TINH.MA_DON_VI
WHERE
SAN_PHAM.ACTIVE = 'A'
AND (@MA_KHO IS NULL OR @MA_KHO = 0 OR V_NHAP_XUAT_KHO.MA_KHO = @MA_KHO)
GROUP BY SAN_PHAM.MA_SAN_PHAM,SAN_PHAM.TEN_SAN_PHAM, DON_VI_TINH.TEN_DON_VI
ORDER BY SAN_PHAM.MA_SAN_PHAM