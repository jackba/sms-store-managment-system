@model SMS.Models.InvoicesModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Chi tiết hóa đơn bán hàng";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/css/style.css" rel="stylesheet" type="text/css" />
<link href="~/Content/KhachHang.css" rel="stylesheet" type="text/css" />
<div style="background-color:lightgray; width:100%; padding-top:10px; padding-bottom:10px; padding-left: 5px;">
    <a href="@Url.Action("BanHang", "Home")"> Bán hàng </a> >
    @if ((int)ViewBag.Flg == 1)
    {
        <a href="@Url.Action("Index", "HoaDon")">  Danh sách hóa đơn </a> 
    }
    else if ((int)ViewBag.Flg == 2)
    {
        <a href="@Url.Action("Collection", "HoaDon")">  Danh sách hóa đơn chưa thu tiền </a> 
    }
    > Chi tiết hóa đơn
</div>

<br />
<hgroup class="title">
    <h2>Chi tiết hóa đơn bán hàng</h2>
</hgroup>
<div id="message" style="color:red; font-family:'Times New Roman'; font-size:16px;">

</div>

<div style="color:red">@ViewBag.Message </div>
<div style="color:blue">@ViewBag.Info </div>
<hr style="width:100%" />
@using (Html.BeginForm("ShowDetail", "HoaDon", FormMethod.Post, new { @name = "ShowDetail", @id = "ShowDetail" }))
{

    @Html.ValidationSummary(true, "Vui lòng kiểm tra lại các giá trị đã nhập!");
    <div>
        <fieldset>
            <div class="left">
                @Html.HiddenFor(u => u.Infor.MA_HOA_DON)
                @Html.HiddenFor(u => u.customerDebit, new { @id = "icusDebit" })
                @Html.HiddenFor(u => u.maxDebit, new { @id = "imaxDebit" })
                @Html.HiddenFor(u => u.Infor.MA_KHACH_HANG, new {@id = "customerId" })
                @Html.HiddenFor(u => u.Infor.TONG_TIEN, new { @id = "tongtien"})
                @Html.HiddenFor(u => u.Infor.CHIEC_KHAU, new { @id = "ChiecKhau" })
                <input type="hidden" value="@ViewBag.Flg" id="flg" name="flg"/>


                <label> Tên khách hàng</label>
            </div>
            <div class="right">
                <label>@Model.Infor.TEN_KHACH_HANG</label>
            </div>
            <div class="left">
                <label> Người bán hàng </label>
            </div>
            <div class="right">
                <label> @Model.Infor.TEN_NGUOI_BAN</label>
            </div>
            @if(Model.Infor.STATUS >= 2)
            {
                <div class="left">
                <label> Người thu tiền </label>
            </div>
            <div class="right">
                @if (!String.IsNullOrEmpty(@Model.Infor.TEN_NV_TT))
                {
                    <label>@Model.Infor.TEN_NV_TT</label>
                }
                else
                {
                    <label>... </label>
                }
            </div>
            }
            
            <div class="left">
                <label> Ngày giao hàng </label>
            </div>
            <div class="right">
                @if (@Model.Infor.NGAY_GIAO != null)
                {
                    <label>@Convert.ToDateTime(@Model.Infor.NGAY_GIAO).ToString("dd/MM/yyyy") </label>
                }else
                {
                    <label>...</label>
                }
                
            </div>
            <div class="left">
                <label> Địa chỉ giao hàng </label>
            </div>
            <div class="right">
                <label>@Model.Infor.DIA_CHI_GIAO_HANG</label>
            </div>
@if(Model.Infor.STATUS >= 2)
            {
            <div class="left">
                <label> Số tiền khách trả </label>
            </div>
            <div class="right">
                @if (Model.Infor.SO_TIEN_KHACH_TRA != null)
                {
                    <label>@Convert.ToDouble(Model.Infor.SO_TIEN_KHACH_TRA).ToString("0,0.00") </label>
                }
                else
                {
                    <label>0</label>
                }
            </div>
            <div class="left">
                <label> So tiền khách nợ </label>
            </div>
            <div class="right">
                @if (Model.Infor.SO_TIEN_NO_GOI_DAU != null)
                {
                    <label>@Convert.ToDouble(Model.Infor.SO_TIEN_NO_GOI_DAU).ToString("0,0.00") </label>

                }
                else
                {
                    <label>0</label>
                }
            </div>
}
            <div class="left">
                <label> Tình trạng hóa đơn </label>
            </div>
            <div class="right">
                @if (Model.Infor.STATUS == 1)
                {
                    <label> Tạo mới - Chưa thu tiền </label>

                }
                else if (Model.Infor.STATUS == 2)
                {
                    <label> Đã thu tiền</label>
                }
                else if (Model.Infor.STATUS == 3)
                {
                    <label> Đã giao hàng</label>
                }
                else
                {
                    <label> Không xác định </label>
                }

            </div>
            <div class="left">
                <label> Tổng hóa đơn </label>
            </div>
            <div class="right">
            <label> @Model.Infor.TONG_TIEN.ToString("0,0.00") </label>
            </div>
            <div class="left">
                <label> Tổng chiếc khấu </label>
            </div>
            <div class="right">
                <label> @Model.Infor.CHIEC_KHAU.ToString("0,0.00") </label>
            </div>
            <div class="left">
                <label> Thực thu </label>
            </div>
            <div class="right">
                <label> @{
    var to = Model.Infor.TONG_TIEN - Model.Infor.CHIEC_KHAU;
                }
                @to.ToString("0,0.00") </label>
            </div>
                <div style="clear:both"></div>
                <hr style="width:100%" />
                @if (Model.Infor.STATUS == 1)
                {
                    <table border="1">
                        <tr>
                            <td width="40%">
                                <label>Số tiền khách thanh toán</label>
                            </td>
                            <td width="60%">
                                @Html.TextBoxFor(u => u.Infor.SO_TIEN_KHACH_TRA, new { @id = "payMoney", @Class = "numberic" })
                            </td>

                        </tr>
                        <tr>
                            <td width="40%">
                                <label>Tiền khách nợ </label>
                            </td>
                            <td width="60%">
                                @Html.TextBoxFor(u => u.Infor.SO_TIEN_NO_GOI_DAU, new { @id = "debitMoney", @Class = "numberic", @ReadOnly = "true" })
                            </td>
                        </tr>
                        <tr>
                            <td width="40%">
                                <label>Tiền thối </label>
                            </td>
                            <td width="60%">
                                <input id="returnMoney" type="text" class="numberic" readonly="readonly" />
                            </td>
                        </tr>
                    </table>

                    <input type="button" id="paymentFirst" style="width:100px" value="Thu tiền" onclick="return paymentSubmit();"/>
    <input type="button" id="paymentAndExportFirst" onclick="return paymentAndExportSubmit();" style="width:200px" value="Thu tiền & Xuất kho" />

                }
                @if (@Model.Infor.STATUS == 2)
                {
                    <input type="submit" style="width:300px" value="Cấp quyền thay đổi hóa đơn" />
                }
                @if ((int)ViewBag.Flg == 1)
                {
                    <input type="button" style="width:300px" value="Trở về danh sách hóa đơn" onclick="window.location.href='@Url.Action("Index","HoaDon")'" />    
                }
                else if ((int)ViewBag.Flg == 2)
                {
                    <input type="button" style="width:300px" value="Trở về danh sách hóa đơn" onclick="window.location.href='@Url.Action("Collection", "HoaDon")'" />
                }
                
            <table border="1" cellpadding="0" cellspacing="0" style="width:100%" id="MainTable">
                    <tr>
                        <td class='inner colwidth head ' width="5%;">
                            STT
                        </td>
                        <td class='inner colwidth head ' width="15%">
                            Tên sản phầm
                        </td>
                        <td class='inner colwidth head ' width="15%">
                            Số lượng
                        </td>
                        <td class='innerLast colwidth head ' width="15%">
                            Đơn vị
                        </td>
                        <td class='inner colwidth head ' width="15%">
                            Đơn giá
                        </td>
                        <td class='inner colwidth head ' width="15%">
                            Chiếc khấu (%)
                        </td>
                        <td class='innerLast colwidth head ' width="15%">
                            Thành tiền
                        </td>
                    </tr>
                    @{
                int i = 0;
                double total = 0;
                double price = 0;
                double quantity = 0;
                double discount = 0;
                double totalAll = 0;
                    }
                    @foreach (var detail in Model.detailList)
                    {
                        i += 1;
                        quantity = Convert.ToDouble(detail.SO_LUONG_TEMP);
                        price = Convert.ToDouble(detail.DON_GIA_TEMP);
                        discount = Convert.ToDouble(detail.PHAN_TRAM_CHIEC_KHAU);
                        total = quantity * price - quantity * price * discount / 100;
                        totalAll += total;
                        <tr>
                            <td class="inner colwidth" width="5%;">
                                @i
                            </td>
                            <td class="inner colwidth">
                                @detail.TEN_SAN_PHAM
                            </td>
                            <td class="inner colwidth">
                                @detail.SO_LUONG_TEMP.ToString("0,0.00")
                            </td>
                            <td class="inner colwidth">
                                @detail.TEN_DON_VI_TEMP
                            </td>
                            <td class="inner colwidth">
                                @detail.DON_GIA_TEMP.ToString("0,0.00")
                            </td>
                            <td class="inner colwidth">
                                @detail.PHAN_TRAM_CHIEC_KHAU.ToString("0,0.00")
                            </td>
                            <td class="innerLast colwidth">
                                @total.ToString("0,0.00")
                            </td>
                        </tr>
                    }
                    <tr style="background-color:lightgray">
                        <td class="innerLast colwidth" colspan="6">
                            <strong> Tồng tiền cần thanh toán</strong>
                        </td>
                        <td class="innerLast colwidth">
                            <strong>@totalAll.ToString("0,0.00")</strong>
                        </td>
                    </tr>
                </table>
                <div style="clear:both"></div>
                <hr style="width:100%" />
                @if (@Model.Infor.STATUS == 2)
                {
                    <input type="submit" style="width:300px" value="Cấp quyền thay đổi hóa đơn" />
                }
                @if (@Model.Infor.STATUS == 1)
{
    <input type="button" id="paymentLast" style="width:100px" value="Thu tiền"
            onclick="return paymentSubmit();" />
    <input type="button" onclick="return paymentAndExportSubmit();" id="paymentAndExportLast" style="width:200px" value="Thu tiền & Xuất kho" />

}
 @if ((int)ViewBag.Flg == 1)
{
    <input type="button" style="width:300px" value="Trở về danh sách hóa đơn" onclick="window.location.href='@Url.Action("Index","HoaDon")'" />
}
else
{
    <input type="button" style="width:300px" value="Trở về danh sách hóa đơn" onclick="window.location.href='@Url.Action("Collection", "HoaDon")'" />
}
</fieldset>
    </div>
}


<script type="text/javascript">
    function paymentSubmit() {
        $("#message").empty();
        var customerId = $("#customerId").val();
        var totalPay = $("#payMoney").val();
        if ((customerId == null || customerId == '' || customerId == 0) && (totalPay == null || totalPay.trim() == '')) {
            $("#message").append("<hr />")
            $("#message").append("Khách hàng là khách vãng lai. Bạn cần phải nhập số tiền khách phải trả");
            return false;
        } else {
            if ((customerId != null && customerId != '' && customerId != 0)) {
                var cusDebit = $("#icusDebit").val();
                var maxDebit = $("#imaxDebit").val();
                var debit = $("debitMoney").val();
                if (cusDebit == null || cusDebit.trim() == '') {
                    cusDebit = 0;
                } else {
                    cusDebit.replace(/,/gi, "");
                }
                if (maxDebit == null || maxDebit.trim() == '') {
                    maxDebit = 0;
                }
                else {
                    maxDebit.replace(/,/gi, "");
                }
                if (debit == null || debit.trim() == '') {
                    debit = 0;
                } else {
                    debit.replace(/,/gi, "");
                }
                if (debit >= 0 && maxDebit <= (cusDebit + debit)) {
                    var r = confirm("Khách hàng này có tổng nợ lớn hơn nợ cho phép. Bạn có tiếp tục cho khách nợ?");
                    if (r == true) {
                        var form = $("#ShowDetail");
                        form.attr("action", "/HoaDon/Payment");
                        form.submit();
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            }            
            var form = $("#ShowDetail");
            form.attr("action", "/HoaDon/Payment");
            form.submit();
        }
    }

    function paymentAndExportSubmit() {
        $("#message").empty();
        var customerId = $("#customerId").val();
        var totalPay = $("#payMoney").val();
        if ((customerId == null || customerId == '' || customerId == 0) && (totalPay == null || totalPay.trim() == '')) {
            $("#message").append("<hr />")
            $("#message").append("Khách hàng là khách vãng lai. Bạn cần phải nhập số tiền khách phải trả");
            return false;
        } else {
            if ((customerId != null && customerId != '' && customerId != 0)) {
                var cusDebit = $("#icusDebit").val();
                var maxDebit = $("#imaxDebit").val();
                var debit = $("debitMoney").val();
                if (cusDebit == null || cusDebit.trim() == '') {
                    cusDebit = 0;
                } else {
                    cusDebit.replace(/,/gi, "");
                }
                if (maxDebit == null || maxDebit.trim() == '') {
                    maxDebit = 0;
                }
                else {
                    maxDebit.replace(/,/gi, "");
                }
                if (debit == null || debit.trim() == '') {
                    debit = 0;
                } else {
                    debit.replace(/,/gi, "");
                }

                alert(debit);
                alert(maxDebit);
                alert(cusDebit);
                return false;

                if (debit >= 0 && maxDebit <= (cusDebit + debit)) {
                    var r = confirm("Khách hàng này có tổng nợ lớn hơn nợ cho phép. Bạn có tiếp tục cho khách nợ?");
                    if (r == true) {
                        var form = $("#ShowDetail");
                        form.attr("action", "/HoaDon/PaymentAndExport");
                        form.submit();
                        return true;
                    }
                    else {
                        return false;
                    }
                }
            }

            var form = $("#ShowDetail");
            form.attr("action", "/HoaDon/PaymentAndExport");
            form.submit();
        }
    }

    function formatNumberic() {
        $('input.numberic').each(function () {
            var $this = $(this);
            var AmountWithCommas = $this.val();
            var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
            var arParts = String(AmountWithCommas).split(DecimalSeparator);

            var intPart = arParts[0];
            var decPart = (arParts.length > 1 ? arParts[1] : '');

            var num = intPart.replace(/,/gi, "").split("").reverse().join("");
            var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
            if (decPart.length > 2) {
                decPart = (decPart + '00').substr(0, 2);
            }
            if (arParts.length > 1) {
                $this.val(num2 + DecimalSeparator + decPart);
            } else {
                $this.val(num2);
            }
        });
    };

    function RemoveRougeChar(convertString) {
        if (convertString.substring(0, 1) == ",") {
            return convertString.substring(1, convertString.length)
        }
        return convertString;
    };

    $(document).ready(function () {
        var total = $("#tongtien").val();
        var totalPayment = $("#payMoney").val();
        var totalDiscount = $("#ChiecKhau").val();
        if (total - totalDiscount - totalPayment > 0) {
            $("#debitMoney").val(total - totalDiscount - totalPayment);
        }
        else
        {
            $("#debitMoney").val(0);
        }
        $("#returnMoney").val(0);
        formatNumberic();
        /*
        $("#paymentFirst").click(function () {
            var form = $("#ShowDetail");
            form.attr("action", "/HoaDon/Payment");
            form.submit();
        });

        $("#paymentLast").click(function () {
            var form = $("#ShowDetail");
            form.attr("action", "/HoaDon/Payment");
            form.submit();
        });

        $("#paymentAndExportFirst").click(function () {
            var form = $("#ShowDetail");
            form.attr("action", "/HoaDon/PaymentAndExport");
            form.submit();
        });

        $("#paymentAndExportLast").click(function () {
            var form = $("#ShowDetail");
            form.attr("action", "/HoaDon/PaymentAndExport");
            form.submit();
        });
        */

    });

    $(document).ready(function () {
        formatNumberic();

            $('input.numberic').keypress(function (key) {
                var keycode = (key.which) ? key.which : key.keyCode;
                //comparing pressed keycodes

                if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                    return false;
                }
                else return true;

            });
            $('input.numberic').keyup(function (event) {
                // skip for arrow keys
                if (event.which >= 37 && event.which <= 40) {
                    //event.preventDefault();
                    return true;
                }
                var $this = $(this);
                var AmountWithCommas = $this.val();
                var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                var arParts = String(AmountWithCommas).split(DecimalSeparator);

                var intPart = arParts[0];
                var decPart = (arParts.length > 1 ? arParts[1] : '');

                var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                if (decPart.length > 2) {
                    decPart = (decPart + '00').substr(0, 2);
                }
                if (arParts.length > 1) {
                    $this.val(num2 + DecimalSeparator + decPart);
                } else {
                    $this.val(num2);
                }
            });

            $('#payMoney').keyup(function (event) {
                var $this = $(this);
                var total = $("#tongtien").val();
                var totalDiscount = $("#ChiecKhau").val();
                var amount = $this.val().replace(/,/gi, "");

                var AmountWithCommas = (total - totalDiscount - amount);
                if (AmountWithCommas < 0) {
                    $("#debitMoney").val(0);
                } else
                {
                    $("#returnMoney").val(0);
                }
                var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                if (AmountWithCommas > 0) {
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);
                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');

                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $("#debitMoney").val(num2 + DecimalSeparator + decPart);
                    } else {
                        $("#debitMoney").val(num2);
                    }
                    $("#returnMoney").val(0);
                } else {
                    AmountWithCommas = -1 * AmountWithCommas;
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);
                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');

                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $("#returnMoney").val(num2 + DecimalSeparator + decPart);
                    } else {
                        $("#returnMoney").val(num2);
                    }
                    $("#debitMoney").val(0);
                }


            });

            $('input.numberic').bind("paste", function (e) {
                e.preventDefault();
            });
    });
</script>