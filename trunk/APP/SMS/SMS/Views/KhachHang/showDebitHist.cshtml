@model SMS.Models.KhachHangModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Lịch sử phát sinh - thanh toán nợ";
    List<SelectListItem> theList = new List<SelectListItem>();
    SelectListItem item;
    if (ViewBag.khuVucList != null)
    {
        foreach (var donvi in ViewBag.khuVucList)
        {
            item = new SelectListItem();
            item.Value = donvi.MA_KHU_VUC + "";
            item.Text = donvi.TEN_KHU_VUC;
            theList.Add(item);
        }
    }


    List<SelectListItem> kinds = new List<SelectListItem>();
    SelectListItem kind;
    kind = new SelectListItem();
    kind.Value = "1";
    kind.Text = "Khách hàng công ty , công trình";
    kinds.Add(kind);

    kind = new SelectListItem();
    kind.Value = "2";
    kind.Text = "Khách hàng thân thiết";
    kinds.Add(kind);

    kind = new SelectListItem();
    kind.Value = "3";
    kind.Text = "Khách hàng thường";
    kinds.Add(kind);
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/css/style.css" rel="stylesheet" type="text/css" />
<link href="~/Content/KhachHang.css" rel="stylesheet" type="text/css" />
<script src="~/Content/js/jquery-1.9.1.js"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.js"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.min.js"></script>
<script src="../../Scripts/scrollTable.js" type="text/javascript"></script>

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/themes/base/css")
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datePicker').datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
            $('#mainForm').submit();
        });
        </script>
    <style type="text/css">
        .required:after {
            content: "*";
            font-weight: bold;
            color: red;
        }
    </style>
}

<div style="background-color:lightgray; width:100%; padding-top:10px; padding-bottom:10px; padding-left: 5px;">
    <a href="@Url.Action("BanHang", "Home")"> Bán Hàng </a> >
        @if ((int)ViewBag.flg == 1)
            {
                <a href="@Url.Action("Index", "KhachHang")"> Danh sách khách hàng</a>
            }
        else
        {
                <a href="@Url.Action("Warning", "KhachHang")"> Danh sách khách hàng cần thu nợ</a>
        }
    > Lịch sử phát sinh - thanh toán nợ
</div>
<br />
<hgroup class="title">
    <h2> Lịch sử phát sinh - thanh toán nợ </h2>
</hgroup>
<br />
<hr style="width:100%" />
    @using (Ajax.BeginForm("showDebitHistPartialView", "KhachHang", new AjaxOptions()
                            {
                                HttpMethod = "POST",
                                InsertionMode = InsertionMode.Replace,
                                LoadingElementId = "resultLoadingDiv",
                                UpdateTargetId = "mainDiv"
                            },
                           new { @id = "mainForm" }
                      ))
{
        
        <div>
                <div>
                    @Html.HiddenFor(u => u.KhachHang.MA_KHACH_HANG)
                    <input type="hidden" value="@Model.KhachHang.MA_KHACH_HANG" name="customerId" id="customerId" />
                    @Html.HiddenFor(u => u.KhachHang.EMAIL)
                    @Html.HiddenFor(u => u.KhachHang.MA_KHU_VUC)
                    @Html.HiddenFor(u => u.KhachHang.KIND)
                    <input type="hidden" value="@ViewBag.flg" name="flg" id="flg" />
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.KhachHang.MA_THE_KHACH_HANG)
                </div>
                <div class="right">
                    @Html.Label(Model.KhachHang.MA_THE_KHACH_HANG == null ? "No#" : Model.KhachHang.MA_THE_KHACH_HANG)
                    @Html.HiddenFor(u => u.KhachHang.MA_THE_KHACH_HANG)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.KhachHang.TEN_KHACH_HANG)
                </div>
                <div class="right">
                    @Html.Label(Model.KhachHang.TEN_KHACH_HANG)
                    @Html.HiddenFor(u => u.KhachHang.TEN_KHACH_HANG)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.KhachHang.DIA_CHI)

                </div>
                <div class="right">
                    @Html.Label(Model.KhachHang.DIA_CHI)
                    @Html.HiddenFor(u => u.KhachHang.DIA_CHI)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.KhachHang.SO_DIEN_THOAI)
                </div>
                <div class="right">
                    @Html.Label(Model.KhachHang.SO_DIEN_THOAI)
                    @Html.HiddenFor(u => u.KhachHang.SO_DIEN_THOAI)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.KhachHang.DOANH_SO)
                </div>
                <div class="right">
                    <label> @Model.KhachHang.DOANH_SO.ToString("0,0.00") </label>
                    @Html.HiddenFor(u => u.KhachHang.DOANH_SO)
                </div>
                <div class="left">
                    @Html.LabelFor(u => u.KhachHang.NO_GOI_DAU)
                </div>
                <div class="right">
                    <label> @Model.KhachHang.NO_GOI_DAU.ToString("0,0.00") </label>
                    @Html.HiddenFor(u => u.KhachHang.NO_GOI_DAU, new { @id = "NoGoiDau" })

                </div>
                <div class="left">
                    @Html.LabelFor(u => u.KhachHang.NGAY_PHAT_SINH_NO)
                    @Html.HiddenFor(u => u.KhachHang.NGAY_PHAT_SINH_NO)
                </div>
                <div class="right">
                    @{
                        if (Model.KhachHang.NGAY_PHAT_SINH_NO != null)
                        {
                            <label> @DateTime.Parse(Model.KhachHang.NGAY_PHAT_SINH_NO.ToString()).ToString("dd/MM/yyyy") </label>
                        }
                        else
                        {
                            <label> -- </label>
                        }
                                    }

                 </div>
                <div style="clear:both"></div>
                <hr style="width:100%" />
                <div style="float:right">
                    Ngày phát sinh: @Html.TextBox("fromDate", ViewBag.CurrentFilterFrom as DateTime?, new { @class = "datePicker" }) ~ @Html.TextBox("toDate", ViewBag.CurrentFilterTo as DateTime?, new { @class = "datePicker" })
                    <input type="submit" value="Search" class="myButton" />
                    <input type="button" value="Export Excel" class="myButton" onclick="window.location.href='@Url.Action("ExportDebitHist", "KhachHang", Model.KhachHang.MA_KHACH_HANG)'" />
                </div>
                <div style="clear:both"></div>
                <hr style="width:100%" />
</div>
}
<div style="clear:both"></div>
<div id="resultLoadingDiv" style="border: none; display: none; z-index: 99; text-align: center; position: absolute; margin-left: 525px; ">
    <img src="/Content/images/loading-2.gif" />
</div>
<div id="mainDiv">

</div>
<div>
        @if ((int)ViewBag.flg == 1)
        {
            <input type="button" style="width:100px" value="Trở về" onclick="window.location.href='@Url.Action("Index","KhachHang")'" />
        }
        else
        {
            <input type="button" style="width:100px" value="Trở về" onclick="window.location.href='@Url.Action("Warning","KhachHang")'" />
        }
</div>
<script>

            function NumbericOnly(ctrl) {
                $(ctrl).keypress(function (key) {
                    //getting key code of pressed key
                    var keycode = (key.which) ? key.which : key.keyCode;
                    //comparing pressed keycodes

                    if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                        alert(" You can enter only characters 0 to 9 ");
                        return false;
                    }
                    else return true;
                });

            }

            function tableColorCel() {
                var tbl = $('#MainTable');
                var rows = 0;
                var colnum = 0;
                tbl.find('tr').each(function () {
                    var tr = $(this);
                    rows++;
                    colnum = 0;
                    $(this).find('td').each(function () {
                        colnum += 1;
                        if (rows != 1 && colnum == 3) {
                            var tdvalue = $(this).children().context.firstChild.data;
                            var vl = "0";
                            if (tdvalue != null && tdvalue.length > 1) {
                                vl = tdvalue.trim().substr(0, 1);
                            }
                            if (isNaN(vl) == true) {
                                tr[0].style.backgroundColor = "LightCoral";
                            }                            
                        }                        
                    });
                });
            };

            function formatNumberic() {
                $('input.numberic').each(function () {
                    var $this = $(this);
                    var AmountWithCommas = $this.val();
                    var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);

                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');

                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $this.val(num2 + DecimalSeparator + decPart);
                    } else {
                        $this.val(num2);
                    }
                });
            }
            $(document).ready(function () {
                formatNumberic();
                tableColorCel();
                $('input.numberic').keypress(function (key) {
                    var keycode = (key.which) ? key.which : key.keyCode;
                    //comparing pressed keycodes

                    if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                        return false;
                    }
                    else return true;

                });
                $('input.numberic').keyup(function (event) {
                    // skip for arrow keys
                    if (event.which >= 37 && event.which <= 40) {
                        //event.preventDefault();
                        return true;
                    }
                    var $this = $(this);
                    var AmountWithCommas = $this.val();
                    var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);

                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');

                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $this.val(num2 + DecimalSeparator + decPart);
                    } else {
                        $this.val(num2);
                    }
                });
                $('#amount').keyup(function (event) {
                    var $this = $(this);
                    var oldDeBit = $("#NoGoiDau").val();
                    var amount = $this.val().replace(/,/gi, "");
                    var AmountWithCommas = (oldDeBit - amount);
                    if (AmountWithCommas < 0) {
                        $("#newDebit").val(0);
                        alert("Số tiền trả lớn hơn số tiền nợ. Vui lòng nhập lại");
                        return false;
                    }
                    var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
                    var arParts = String(AmountWithCommas).split(DecimalSeparator);
                    var intPart = arParts[0];
                    var decPart = (arParts.length > 1 ? arParts[1] : '');
                    var num = intPart.replace(/,/gi, "").split("").reverse().join("");
                    var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
                    if (decPart.length > 2) {
                        decPart = (decPart + '00').substr(0, 2);
                    }
                    if (arParts.length > 1) {
                        $("#newDebit").val(num2 + DecimalSeparator + decPart);
                    } else {
                        $("#newDebit").val(num2);
                    }
                });
                $('input.numberic').bind("paste", function (e) {
                    e.preventDefault();
                });
            });

            function RemoveRougeChar(convertString) {
                if (convertString.substring(0, 1) == ",") {
                    return convertString.substring(1, convertString.length)
                }
                return convertString;
            }

            function reset() {
                window.location.reload();
                return false;
            }

            function deleteSubmit() {
                var r = confirm("Bạn muốn xóa chứng từ này?");
                if (r == true) {
                    document.forms["ShowDebitHist"].submit();
                }
                else {
                    return false;
                }
            }

        </script>

