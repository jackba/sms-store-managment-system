@model PagedList.IPagedList<SMS.Models.KhachHangModel>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/css/style.css" rel="stylesheet" type="text/css" />
<link href="~/Content/KhachHang.css" rel="stylesheet" type="text/css" />
<script src="~/Content/js/jquery-1.9.1.js"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.js"></script>
<script src="~/Content/js/jquery-ui-1.10.3.custom.min.js"></script>
<script src="../../Scripts/scrollTable.js" type="text/javascript"></script>
<script src="~/Content/js/FileSaver.js"></script>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    <script>
        $(document).ready(function () {
            $("#customerName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/KhachHang/Find", data: "{ 'prefixText': '" + request.term + "' }",
                        dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; }, success:
                            function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.value,
                                        value: item.value,
                                        id: item.id
                                    }
                                }))
                            }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                    });
                },
                select: function (event, ui) {
                    $('#customerName').val(ui.item.label);
                    return false;
                },
                minLength: 1

            });

            $("#SearchString").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/KhachHang/Find", data: "{ 'prefixText': '" + request.term + "' }",
                        dataType: "json", type: "POST", contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; }, success:
                            function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.value,
                                        value: item.value,
                                        id: item.id
                                    }
                                }))
                            }, error: function (XMLHttpRequest, textStatus, errorThrown) { alert(textStatus); }
                    });
                },
                select: function (event, ui) {
                    $('#SearchString').val(ui.item.label);
                    return false;
                },
                minLength: 1

            });
            $('#mainForm').submit();
            
            $("input.ExportExcel").click(function () {
                var searchString = $("#SearchString").val();
                var customerName = $("#customerName").val();
                var customerKind = $("#customerKind").val();
                var customerArea = $("#customerArea").val();
                var customerAmountFrom = $("#customerAmountFrom").val();
                var customerAmountTo = $("#customerAmountTo").val();
                var customerDebitFrom = $("#customerDebitFrom").val();
                var customerDebitTo = $("#customerDebitTo").val();
                var ShowFlag = $("#ShowFlag").val();

                $.ajax({
                    url: "/KhachHang/downloadCSV",
                    data: "{ 'searchString': '" + searchString + "' , 'customerName': '" + 
                        customerName + "' , 'customerKind': '" + 
                        customerKind + "' , 'customerArea': '" + 
                        customerArea + "' , 'customerAmountFrom': '" + 
                        customerAmountFrom + "' , 'customerAmountTo': '" + 
                        customerAmountTo + "' , 'customerDebitFrom': '" + 
                        customerDebitFrom + "' , 'customerDebitTo': '" + 
                        customerDebitTo + "' , 'ShowFlag': '" + ShowFlag + "'}",
                    type: "POST", contentType: "application/json; charset=utf-8",
                    success: function (response, status, request) {
                        var disp = request.getResponseHeader('Content-Disposition');
                        if (disp && disp.search('attachment') != -1) {
                            var type = request.getResponseHeader('text/csv');
                            var blob = new Blob([response], { type: type });
                            var fileName = new Date().getTime().toString() + ".csv";
                            saveAs(blob, fileName);
                        }
                    }
                });
            });
        });
    </script>
}
@{
    ViewBag.Title = "Danh mục khách hàng";
    List<SelectListItem> theAreaList = new List<SelectListItem>();
    SelectListItem item;
    item = new SelectListItem();
    item.Value = "0";
    item.Text = "----------- Chọn loại khu vực ----------";
    theAreaList.Add(item);
    
    if (ViewBag.khuVucList != null)
    {
        foreach (var donvi in ViewBag.khuVucList)
        {
            item = new SelectListItem();
            if ((int)ViewBag.CustomerArea == donvi.MA_KHU_VUC)
            {
                item.Selected = true;
            }            
            item.Value = donvi.MA_KHU_VUC + "";
            item.Text = donvi.TEN_KHU_VUC;
            theAreaList.Add(item);
        }
    }
    
    List<SelectListItem> kinds = new List<SelectListItem>();
    SelectListItem ckind;
    ckind = new SelectListItem();
    
    ckind.Value = "0";
    ckind.Text = "----------- Chọn loại khách hàng ----------";
    kinds.Add(ckind);

    ckind = new SelectListItem();
    if ((int)ViewBag.CusomerKind == 1)
    {
        ckind.Selected = true;
    }
    ckind.Value = "1";
    ckind.Text = "Khách hàng công ty , công trình";
    kinds.Add(ckind);

    ckind = new SelectListItem();
    if ((int)ViewBag.CusomerKind == 2)
    {
        ckind.Selected = true;
    }
    ckind.Value = "2";
    ckind.Text = "Khách hàng thân thiết";
    kinds.Add(ckind);

    ckind = new SelectListItem();
    if ((int)ViewBag.CusomerKind == 3)
    {
        ckind.Selected = true;
    }
    ckind.Value = "3";
    ckind.Text = "Khách hàng thường";
    kinds.Add(ckind);
   
}


<div style="background-color:lightblue; width:100%; padding-top:10px; padding-bottom:10px; padding-left: 5px;">
    <a href="@Url.Action("BanHang", "Home")"> Bán Hàng </a> > Danh sách khách hàng
</div>
@Html.Partial("_Flash")
<hgroup class="title">
    <h2> @ViewBag.Title</h2>
</hgroup>
<h3 style="color:red">@ViewBag.Message </h3>
<h3 style="color:blue">@ViewBag.InforMessage </h3>
<hr style="width:100%" />



@using (Ajax.BeginForm("IndexPartialView", "KhachHang", new AjaxOptions()
                            {
                                HttpMethod = "POST",
                                InsertionMode = InsertionMode.Replace,
                                LoadingElementId = "resultLoadingDiv",
                                UpdateTargetId = "mainDiv"
                            },
                           new { @id = "mainForm" }
                      ))
{
    <div style="float:right">
        <p>
            Từ khóa tìm kiếm: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Tìm kiếm" class="myButton" />
            
            @{
    if ((bool)Session["IsAdmin"] == true || (bool)Session["IsMetadataManager"] == true || (bool)Session["IsSaler"] == true || (bool)Session["IsAccounting"] == true)
    {
                <input type="button" value="Thêm Mới" class="myButton" onclick="window.location.href='@Url.Action("AddNew", "KhachHang")'" />
    }
            }
            <input type="button" value="Xuất excel" id="btnExport" class="ExportExcel" />
        </p>
    </div>
    <div style="clear:both"></div>
    <hr style="width:100%" />
    <div style="float:left; padding-bottom:10px;">
        <a href="#" onclick="showSearchAdvange()">
            Tìm kiếm nâng cao
        </a>
    </div>
    
    <div style="clear:both"></div>
    
    <div id="advSearch" name="advSearch" style="width:100%">
        <div style="display:inline-block; width:200px; height:28px"> Tên khách hàng:</div>
        <div style="display: inline-block; width: 400px; height: 28px"> @Html.TextBox("customerName", ViewBag.customerName as string, new { @id = "customerName" })</div>
        <br />
        <div style="display:inline-block; width:200px; height:28px"> Loại khách hàng:</div>
        <div style="display: inline-block; width: 400px; height: 28px"> @Html.DropDownList("customerKind", kinds, new { @id = "customerKind", @style = "padding:2px;font-size:1.2em; " })</div>
        <br />
        <div style="display:inline-block; width:200px; height:28px"> Khu vực: </div>
        <div style="display: inline-block; width: 400px; height: 28px"> @Html.DropDownList("customerArea", theAreaList, new { @id = "customerArea", @style = "padding:2px;font-size:1.2em; " })</div>
        <br />
        <div style="display:inline-block; width:200px; height:28px"> Doanh số: </div>
        <div style="display: inline-block; width: 400px; height: 28px">
            @Html.TextBox("customerAmountFrom", ViewBag.customerAmountFrom as string, new { style = "width:137px;", @class = "numberic" }) ~  @Html.TextBox("customerAmountTo", ViewBag.customerAmountTo as float?, new { style = "width:137px;", @class = "numberic" })
        </div>
        <br />
        <div style="display:inline-block; width:200px; height:28px"> Nợ gối đầu: </div>
        <div style="display: inline-block; width: 400px; height: 28px">
            @Html.TextBox("customerDebitFrom", ViewBag.customerDebitFrom as float?, new { style = "width:137px;", @class = "numberic" }) ~  @Html.TextBox("customerDebitTo", ViewBag.customerDebitFrom as float?, new { style = "width:137px;", @class = "numberic" })
        </div>
        <div style="float:right">
            <input type="submit" value="Tìm kiếm" class="myButton" />
            <input type="button" value="Xuất excel" id="btnExportSecond" class="ExportExcel">
        </div>
        @Html.Hidden("ShowFlag", ViewBag.ShowFlag as string, new { @id = "ShowFlag" })
        <div style="clear:both"></div>
        <hr style="width:100%" />
    </div>
}

<div style="clear:both"></div>
<div id="resultLoadingDiv" style="border: none; display: none; z-index: 99; text-align: center; position: absolute; margin-left: 525px; ">
    <img src="/Content/images/loading-2.gif" />
</div>
<div id="mainDiv">

</div>

<script>
    function RemoveRougeChar(convertString) {
        if (convertString.substring(0, 1) == ",") {
            return convertString.substring(1, convertString.length)
        }
        return convertString;
    }
    function formatNumberic() {
        $('input.numberic').each(function () {
            var $this = $(this);
            var AmountWithCommas = $this.val();
            var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
            var arParts = String(AmountWithCommas).split(DecimalSeparator);

            var intPart = arParts[0];
            var decPart = (arParts.length > 1 ? arParts[1] : '');

            var num = intPart.replace(/,/gi, "").split("").reverse().join("");
            var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
            if (decPart.length > 2) {
                decPart = (decPart + '00').substr(0, 2);
            }
            if (arParts.length > 1) {
                $this.val(num2 + DecimalSeparator + decPart);
            } else {
                $this.val(num2);
            }
        });
    }

    $(document).ready(function () {
        formatNumberic();
        $('input.numberic').keypress(function (key) {
            var keycode = (key.which) ? key.which : key.keyCode;
            //comparing pressed keycodes

            if (keycode > 31 && (keycode < 48 || keycode > 57) && keycode != 46) {
                return false;
            }
            else return true;

        });
        $('input.numberic').keyup(function (event) {
            // skip for arrow keys
            if (event.which >= 37 && event.which <= 40) {
                //event.preventDefault();
                return true;
            }
            var $this = $(this);
            var AmountWithCommas = $this.val();
            var DecimalSeparator = Number("1.2").toLocaleString().substr(1, 1);
            var arParts = String(AmountWithCommas).split(DecimalSeparator);

            var intPart = arParts[0];
            var decPart = (arParts.length > 1 ? arParts[1] : '');

            var num = intPart.replace(/,/gi, "").split("").reverse().join("");
            var num2 = RemoveRougeChar(num.replace(/(.{3})/g, "$1,").split("").reverse().join(""));
            if (decPart.length > 2) {
                decPart = (decPart + '00').substr(0, 2);
            }
            if (arParts.length > 1) {
                $this.val(num2 + DecimalSeparator + decPart);
            } else {
                $this.val(num2);
            }
        });
        var i = document.getElementById("ShowFlag");
        var e = document.getElementById("advSearch");
        if (i.value != "1") {
            e.style.display = 'none';
        }

    });

    function showSearchAdvange() {
        var e = document.getElementById("advSearch");
        var i = document.getElementById("ShowFlag");
        if (e.style.display == 'block' ||  i.value == "1") {
            e.style.display = 'none';
            i.value = "0";
        }           
        else {
            e.style.display = 'block';
            i.value = "1";
        }
           
    }

    function deleteSubmit() {
        var r = confirm("Bạn muốn xóa khách hàng này?");
        if (r == true) {
            document.forms[0].submit();
        }
        else {
            return false;
        }
    }

    

</script>
